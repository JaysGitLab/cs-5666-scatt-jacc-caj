{
	"objName": "Stage",
	"variables": [{
			"name": "SCROLL_X",
			"value": 145,
			"isPersistent": false
		},
		{
			"name": "MAP_WIDTH",
			"value": "350",
			"isPersistent": false
		},
		{
			"name": "MAP_HEIGHT",
			"value": "160",
			"isPersistent": false
		},
		{
			"name": "SCROLL_Y",
			"value": 144,
			"isPersistent": false
		},
		{
			"name": "TILE_SIZE",
			"value": "40",
			"isPersistent": false
		},
		{
			"name": "MAP_WIDTH_NEG",
			"value": -350,
			"isPersistent": false
		},
		{
			"name": "Hit Player",
			"value": "",
			"isPersistent": false
		},
		{
			"name": "SCORE",
			"value": 0,
			"isPersistent": false
		},
		{
			"name": "TICK",
			"value": 3,
			"isPersistent": false
		},
		{
			"name": "debug",
			"value": 0,
			"isPersistent": false
		},
		{
			"name": "☁ Player_1",
			"value": "15122167283747171816685687364858685808308167772151036441349787454801013497874548010134978745480101349787454801013497874548010134978745480101349787454801013497874548010134978745480101349787454801013497874548010134978745480101349787454801013497874548010134978745480101349787454801013497874548010134978745480101349787454801013497874548010134978745480101349787454801013497874548010134978745480101349787454801013497874548010134978745480101349787454801013497874548010134978745480101349787454801013497874548010134978745480101349787454801013497874548010134978745480101349787454801013497874548010134978745480101349787454801013497874548010134978745480101349787454801013497874548010134978745480101349787454801015246102367824252522018801180119170119212120011821192501210117011701192119011821192471023778241925230188011801191701191819170118202221011826011701170119181901182020247102101819202622240121251924810244782626222101880118011918011919232401181918170119220126220118172201192001202501222201252124910236782425252201880118011917011921192401182119180121011701170119212501182119",
			"isPersistent": true
		},
		{
			"name": "☁ Player_2",
			"value": "181021785737069746678807969787479702224252148167772158167772151010",
			"isPersistent": true
		},
		{
			"name": "☁ Player_3",
			"value": "13102167283747171816685687364858685808308167772158167772151010",
			"isPersistent": true
		},
		{
			"name": "☁ Player_4",
			"value": "12102167283747171816685687364858685808308167772158167772151010",
			"isPersistent": true
		},
		{
			"name": "☁ Player_5",
			"value": "0102167283747171816685687364858685808308167772158167772151010",
			"isPersistent": true
		},
		{
			"name": "☁ Player_6",
			"value": "0102167283747171816685687364858685808308167772158167772151010",
			"isPersistent": true
		},
		{
			"name": "☁ Snapshot",
			"value": "",
			"isPersistent": true
		},
		{
			"name": "☁ GameData",
			"value": "41",
			"isPersistent": true
		},
		{
			"name": "inv_change",
			"value": "1",
			"isPersistent": false
		},
		{
			"name": "TMul",
			"value": "8",
			"isPersistent": false
		},
		{
			"name": "☁ Player_7",
			"value": "16102167283747171816685687364858685808308167772158167772151010",
			"isPersistent": true
		},
		{
			"name": "☁ Player_8",
			"value": "15102167283747171816685687364858685808308167772158167772151010",
			"isPersistent": true
		},
		{
			"name": "BRIGHT",
			"value": "1",
			"isPersistent": false
		}],
	"lists": [{
			"listName": "_Level",
			"contents": [],
			"isPersistent": false,
			"x": 63,
			"y": 85,
			"width": 355,
			"height": 277,
			"visible": false
		},
		{
			"listName": "@Broadcast",
			"contents": [9872, 4960, 0, "@TICK"],
			"isPersistent": false,
			"x": 45,
			"y": 106,
			"width": 437,
			"height": 256,
			"visible": false
		},
		{
			"listName": "@PlayerData",
			"contents": [],
			"isPersistent": false,
			"x": 367,
			"y": 52,
			"width": 115,
			"height": 310,
			"visible": false
		},
		{
			"listName": "@PlayerNames",
			"contents": ["trifant007",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"21",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				0,
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"0",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				""],
			"isPersistent": false,
			"x": 71,
			"y": 40,
			"width": 411,
			"height": 322,
			"visible": false
		},
		{
			"listName": "@PlayerOffset",
			"contents": [1, 2, 3, 4, 5, 6, 7, 8, 9],
			"isPersistent": false,
			"x": 395,
			"y": 111,
			"width": 89,
			"height": 251,
			"visible": false
		},
		{
			"listName": "@Place",
			"contents": ["-1", "-1", "-1", "-1", "-1", "-1", "-1", "-1", "-1", "-1"],
			"isPersistent": false,
			"x": 295,
			"y": 38,
			"width": 187,
			"height": 324,
			"visible": false
		},
		{
			"listName": "_Chat",
			"contents": ["",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"0",
				"0",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				""],
			"isPersistent": false,
			"x": 146,
			"y": 115,
			"width": 312,
			"height": 220,
			"visible": false
		},
		{
			"listName": "_inv",
			"contents": ["211",
				"1",
				"212",
				"1",
				"213",
				"1",
				"124",
				"1",
				"47",
				"5",
				"155",
				"1",
				"0",
				"0",
				"31",
				"8",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0"],
			"isPersistent": false,
			"x": 42.95,
			"y": 40.45,
			"width": 439,
			"height": 321,
			"visible": false
		},
		{
			"listName": "_TileData",
			"contents": ["1. Tile ID",
				"2. Name",
				"3. Solid (-1=Places other type, 0=No, 0.5=beam, 1=Tree Type, 2=Veg Type, 2.5=Liquid, 3=SitFloor, 3.25=Fence, 3.5=Sit on Table, 4 & 4.5=Door, 5=Wall\/Floor (5.25, 5.375), 5.5=Chain, 6=2wide, 6.5=2x2, 7=Platform, 7.5=2wide Table, 10=Solid, -3=Alive, -3.5=Alive Water)",
				"4. Material (1=Potion, 2=Summon, 3=Mask, 10=Wood, 11=Veg, 20=dirt, 30=Stone, 50=Ore, 60=Metal, 63=Metal Chest, 70=Hellstone, 100=Mob, 1001=Pick, 1002=Axe, 1003=Sword, 1004=Staff, 1098=Bucket, 1099=Net) ",
				"5. Dig Speed",
				"6. Harvest ID",
				"7. Paired ID (0 not paired)",
				"",
				"1",
				"Grass",
				"10",
				"20",
				"22",
				"2",
				"2",
				"",
				"2",
				"Dirt",
				"10",
				"20",
				"22",
				"2",
				"1",
				"",
				"3",
				"Tree",
				"1",
				"10",
				"105",
				"25",
				"0",
				"",
				"4",
				"Tree",
				"1.5",
				"10",
				"105",
				"25",
				"0",
				"",
				"5",
				"Tree",
				"1.5",
				"10",
				"105",
				"25",
				"0",
				"",
				"6",
				"Tree",
				"1.5",
				"10",
				"105",
				"25",
				"0",
				"",
				"7",
				"Tree",
				"1.5",
				"10",
				"105",
				"25",
				"0",
				"",
				"8",
				"Tree",
				"1.5",
				"10",
				"105",
				"25",
				"0",
				"",
				"9",
				"Tree",
				"1.5",
				"10",
				"105",
				"25",
				"0",
				"",
				"10",
				"Tree",
				"1.5",
				"10",
				"105",
				"25",
				"0",
				"",
				"11",
				"Tree",
				"1.5",
				"10",
				"105",
				"25",
				"0",
				"",
				"12",
				"Tree",
				"1.5",
				"10",
				"105",
				"25",
				"0",
				"",
				"13",
				"Tree",
				"1.5",
				"10",
				"105",
				"25",
				"0",
				"",
				"14",
				"Tree",
				"1.5",
				"10",
				"105",
				"25",
				"0",
				"",
				"15",
				"Tree",
				"1.5",
				"10",
				"105",
				"25",
				"0",
				"",
				"16",
				"Tree",
				"1.5",
				"10",
				"105",
				"25",
				"0",
				"",
				"17",
				"Tree",
				"1.5",
				"10",
				"105",
				"25",
				"0",
				"",
				"18",
				"Tree",
				"1.5",
				"10",
				"105",
				"25",
				"0",
				"",
				"19",
				"Tree",
				"1.5",
				"10",
				"105",
				"25",
				"0",
				"",
				"20",
				"Stone",
				"10",
				"40",
				"35",
				"21",
				"21",
				"",
				"21",
				"Stone",
				"10",
				"40",
				"35",
				"21",
				"20",
				"",
				"22",
				"Iron Pickaxe",
				"69",
				"1001",
				"5",
				"2",
				"0",
				"",
				"23",
				"Iron Axe",
				"0",
				"1002",
				"5",
				"4",
				"0",
				"",
				"24",
				"Wood",
				"10",
				"12",
				"20",
				"25",
				"25",
				"",
				"25",
				"Wood",
				"10",
				"12",
				"20",
				"25",
				"24",
				"",
				"26",
				"Sand",
				"10",
				"30",
				"15",
				"27",
				"27",
				"",
				"27",
				"Sand",
				"10",
				"30",
				"15",
				"27",
				"26",
				"",
				"28",
				"Iron Ore",
				"10",
				"50",
				"65",
				"29",
				"29",
				"",
				"29",
				"Iron Ore",
				"10",
				"50",
				"65",
				"29",
				"28",
				"",
				"30",
				"Bed",
				"-1",
				"12",
				"0",
				"43",
				"0",
				"",
				"31",
				"Acorn",
				"-1",
				"11",
				"0",
				"32",
				"0",
				"",
				"32",
				"Sapling",
				"2",
				"11",
				"1",
				"31",
				"0",
				"",
				"33",
				"Door Top",
				"4.5",
				"12",
				"65",
				"35",
				"0",
				"",
				"34",
				"Door Bottom",
				"4",
				"12",
				"65",
				"35",
				"0",
				"",
				"35",
				"Wooden Door",
				"-1",
				"0",
				"0",
				"34",
				"0",
				"",
				"36",
				"Platform",
				"7",
				"12",
				"25",
				"36",
				"0",
				"",
				"37",
				"Work Bench",
				"3",
				"12",
				"45",
				"37",
				"0",
				"",
				"38",
				"Furnace",
				"3",
				"12",
				"90",
				"38",
				"0",
				"",
				"39",
				"Iron Bar",
				"-1",
				"60",
				"0",
				"40",
				"0",
				"",
				"40",
				"Iron Bar",
				"10",
				"60",
				"120",
				"39",
				"0",
				"",
				"41",
				"Stone Brick",
				"10",
				"40",
				"90",
				"42",
				"42",
				"",
				"42",
				"Stone Brick",
				"10",
				"40",
				"90",
				"42",
				"41",
				"",
				"43",
				"Bed",
				"6",
				"12",
				"60",
				"30",
				"0",
				"",
				"44",
				"Bed",
				"6",
				"12",
				"60",
				"30",
				"0",
				"",
				"45",
				"Chair",
				"3",
				"12",
				"15",
				"46",
				"0",
				"",
				"46",
				"Chair",
				"3",
				"12",
				"15",
				"46",
				"0",
				"",
				"47",
				"Torch",
				"5",
				"12",
				"15",
				"47",
				"0",
				"",
				"48",
				"Torch (left)",
				"5.25",
				"12",
				"15",
				"47",
				"0",
				"",
				"49",
				"Torch (right)",
				"5.375",
				"12",
				"15",
				"47",
				"0",
				"",
				"50",
				"Sand Brick",
				"10",
				"40",
				"90",
				"51",
				"51",
				"",
				"51",
				"Sand Brick",
				"10",
				"40",
				"90",
				"51",
				"50",
				"",
				"52",
				"Chandelier",
				"5.5",
				"60",
				"60",
				"52",
				"0",
				"",
				"53",
				"Bench",
				"3",
				"12",
				"25",
				"53",
				"0",
				"",
				"54",
				"Dresser",
				"3",
				"12",
				"60",
				"54",
				"0",
				"",
				"55",
				"Table",
				"-1",
				"12",
				"45",
				"276",
				"0",
				"",
				"56",
				"Barrel",
				"3",
				"12",
				"45",
				"56",
				"0",
				"",
				"57",
				"Chest",
				"3",
				"13",
				"60",
				"57",
				"0",
				"",
				"58",
				"Sign",
				"3",
				"12",
				"120",
				"58",
				"0",
				"",
				"59",
				"Anvil",
				"3",
				"60",
				"120",
				"59",
				"0",
				"",
				"60",
				"Sawmill",
				"3",
				"12",
				"120",
				"60",
				"0",
				"",
				"61",
				"Chain",
				"-1",
				"0",
				"0",
				"134",
				"0",
				"",
				"62",
				"Grandfather Clock",
				"-1",
				"12",
				"0",
				"64",
				"0",
				"",
				"63",
				"Grandfather Clock",
				"3",
				"12",
				"160",
				"62",
				"0",
				"",
				"64",
				"Grandfather Clock",
				"3",
				"12",
				"160",
				"62",
				"0",
				"",
				"65",
				"Cloud",
				"10",
				"21",
				"10",
				"66",
				"66",
				"",
				"66",
				"Cloud",
				"10",
				"21",
				"10",
				"66",
				"65",
				"",
				"67",
				"Glass",
				"10",
				"22",
				"10",
				"68",
				"68",
				"",
				"68",
				"Glass",
				"10",
				"22",
				"10",
				"68",
				"67",
				"",
				"69",
				"Ice Block",
				"10",
				"22",
				"10",
				"70",
				"70",
				"",
				"70",
				"Ice Block",
				"10",
				"22",
				"10",
				"70",
				"69",
				"",
				"71",
				"Clay",
				"10",
				"24",
				"28",
				"72",
				"72",
				"",
				"72",
				"Clay",
				"10",
				"24",
				"28",
				"72",
				"71",
				"",
				"73",
				"Brick",
				"10",
				"40",
				"90",
				"74",
				"74",
				"",
				"74",
				"Brick",
				"10",
				"40",
				"90",
				"74",
				"73",
				"",
				"75",
				"Gold Ore",
				"10",
				"50",
				"45",
				"76",
				"76",
				"",
				"76",
				"Gold Ore",
				"10",
				"50",
				"45",
				"76",
				"75",
				"",
				"77",
				"Gold Bar",
				"0",
				"60",
				"0",
				"0",
				"0",
				"",
				"78",
				"Gold Brick",
				"10",
				"60",
				"220",
				"79",
				"79",
				"",
				"79",
				"Gold Brick",
				"10",
				"60",
				"220",
				"79",
				"78",
				"",
				"80",
				"Silver Ore",
				"10",
				"50",
				"45",
				"81",
				"81",
				"",
				"81",
				"Silver Ore",
				"10",
				"50",
				"45",
				"81",
				"80",
				"",
				"82",
				"Silver Bar",
				"0",
				"60",
				"0",
				"0",
				"0",
				"",
				"83",
				"Silver Brick",
				"10",
				"60",
				"220",
				"84",
				"84",
				"",
				"84",
				"Silver Brick",
				"10",
				"60",
				"220",
				"84",
				"83",
				"",
				"85",
				"Seed",
				"2",
				"11",
				"0",
				"0",
				"0",
				"",
				"86",
				"Plant",
				"2",
				"12",
				"1",
				"85",
				"0",
				"",
				"87",
				"Plant",
				"2",
				"12",
				"1",
				"85",
				"0",
				"",
				"88",
				"Plant",
				"2",
				"12",
				"1",
				"85",
				"0",
				"",
				"89",
				"Plant",
				"2",
				"12",
				"1",
				"85",
				"0",
				"",
				"90",
				"Plant",
				"2",
				"12",
				"1",
				"85",
				"0",
				"",
				"91",
				"Plant",
				"2",
				"12",
				"1",
				"85",
				"0",
				"",
				"92",
				"Plant",
				"2",
				"12",
				"1",
				"85",
				"0",
				"",
				"93",
				"Plant",
				"2",
				"12",
				"1",
				"85",
				"0",
				"",
				"94",
				"Mushroom",
				"2",
				"12",
				"1",
				"94",
				"0",
				"",
				"95",
				"Plant",
				"2",
				"12",
				"1",
				"85",
				"0",
				"",
				"96",
				"Fence",
				"3.25",
				"12",
				"60",
				"96",
				"0",
				"",
				"97",
				"Iron Fence",
				"3.25",
				"60",
				"120",
				"97",
				"0",
				"",
				"98",
				"Gold Chandelier",
				"5.5",
				"60",
				"120",
				"98",
				"0",
				"",
				"99",
				"Candelabra",
				"3.5",
				"60",
				"90",
				"99",
				"0",
				"",
				"100",
				"Gold Chest",
				"3",
				"63",
				"120",
				"100",
				"0",
				"",
				"101",
				"Bath Tub",
				"-1",
				"60",
				"90",
				"105",
				"0",
				"",
				"102",
				"Trash Can",
				"3",
				"60",
				"90",
				"102",
				"0",
				"",
				"103",
				"Toilet",
				"3",
				"60",
				"90",
				"103",
				"0",
				"",
				"104",
				"Cooking Pot",
				"3",
				"60",
				"90",
				"104",
				"0",
				"",
				"105",
				"Bath Tub",
				"6",
				"60",
				"90",
				"101",
				"0",
				"",
				"106",
				"Bath Tub",
				"6",
				"60",
				"90",
				"101",
				"0",
				"",
				"107",
				"Builder Potion",
				"0",
				"1",
				"0",
				"0",
				"0",
				"",
				"108",
				"Mining Potion",
				"0",
				"1",
				"0",
				"0",
				"0",
				"",
				"109",
				"Swiftness Potion",
				"0",
				"1",
				"0",
				"0",
				"0",
				"",
				"110",
				"Diamond Ore",
				"10",
				"50",
				"65",
				"111",
				"0",
				"",
				"111",
				"Diamond",
				"0",
				"0",
				"0",
				"0",
				"0",
				"",
				"112",
				"Diamond Slab",
				"10",
				"60",
				"150",
				"113",
				"113",
				"",
				"113",
				"Diamond Slab",
				"10",
				"60",
				"150",
				"113",
				"112",
				"",
				"114",
				"Stone Slab",
				"10",
				"40",
				"90",
				"114",
				"0",
				"",
				"115",
				"Sand Slab",
				"10",
				"40",
				"90",
				"115",
				"0",
				"",
				"116",
				"Pot Plant",
				"3",
				"12",
				"45",
				"116",
				"0",
				"",
				"117",
				"Bookcase",
				"6.5",
				"12",
				"160",
				"121",
				"0",
				"",
				"118",
				"Bookcase",
				"6.5",
				"12",
				"160",
				"121",
				"0",
				"",
				"119",
				"Bookcase",
				"6.5",
				"12",
				"160",
				"121",
				"0",
				"",
				"120",
				"Bookcase",
				"6.5",
				"12",
				"160",
				"121",
				"0",
				"",
				"121",
				"Bookcase",
				"-1",
				"0",
				"0",
				"118",
				"0",
				"",
				"122",
				"Sky Chest",
				"3",
				"13",
				"60",
				"122",
				"0",
				"",
				"123",
				"Heavy Work Bench",
				"3",
				"12",
				"70",
				"123",
				"0",
				"",
				"124",
				"Bug Net",
				"0",
				"1099",
				"1",
				"6",
				"0",
				"",
				"125",
				"Bunny",
				"-3",
				"100",
				"0",
				"1",
				"0",
				"",
				"126",
				"Beam",
				"0.5",
				"12",
				"30",
				"127",
				"127",
				"",
				"127",
				"Beam",
				"0.5",
				"12",
				"30",
				"127",
				"126",
				"",
				"128",
				"Sofa",
				"-1",
				"12",
				"0",
				"129",
				"0",
				"",
				"129",
				"Sofa",
				"6",
				"12",
				"60",
				"128",
				"0",
				"",
				"130",
				"Sofa",
				"6",
				"12",
				"60",
				"128",
				"0",
				"",
				"131",
				"Piano",
				"-1",
				"12",
				"0",
				"132",
				"0",
				"",
				"132",
				"Piano",
				"6",
				"12",
				"60",
				"131",
				"0",
				"",
				"133",
				"Piano",
				"6",
				"12",
				"60",
				"131",
				"0",
				"",
				"134",
				"Chain",
				"5.5",
				"60",
				"40",
				"61",
				"0",
				"",
				"135",
				"Frog",
				"-3",
				"100",
				"0",
				"2",
				"0",
				"",
				"136",
				"Slime",
				"-3",
				"100",
				"0",
				"3",
				"0",
				"",
				"137",
				"Wooden Sword",
				"0",
				"1003",
				"5",
				"8",
				"0",
				"",
				"138",
				"Iron Sword",
				"0",
				"1003",
				"10",
				"10",
				"0",
				"",
				"139",
				"Gel",
				"0",
				"0",
				"0",
				"0",
				"0",
				"",
				"140",
				"Platinum Ore",
				"10",
				"50",
				"120",
				"141",
				"141",
				"",
				"141",
				"Platinum Ore",
				"10",
				"50",
				"120",
				"141",
				"140",
				"",
				"142",
				"Platinum Bar",
				"0",
				"60",
				"0",
				"0",
				"0",
				"",
				"143",
				"Gold Pickaxe",
				"69",
				"1001",
				"7",
				"12",
				"0",
				"",
				"144",
				"Gold Axe",
				"0",
				"1002",
				"7",
				"14",
				"0",
				"",
				"145",
				"Gold Sword",
				"0",
				"1003",
				"13",
				"16",
				"0",
				"",
				"146",
				"Platinum Pickaxe",
				"70",
				"1001",
				"9",
				"18",
				"0",
				"",
				"147",
				"Platinum Axe",
				"0",
				"1002",
				"9",
				"20",
				"0",
				"",
				"148",
				"Platinum Sword",
				"0",
				"1003",
				"16",
				"22",
				"0",
				"",
				"149",
				"Demon Eye",
				"-3",
				"100",
				"0",
				"5",
				"0",
				"",
				"150",
				"Lens",
				"0",
				"0",
				"0",
				"0",
				"0",
				"",
				"151",
				"Zombie",
				"-3",
				"100",
				"0",
				"6",
				"0",
				"",
				"152",
				"Easter Egg",
				"0",
				"0",
				"0",
				"0",
				"0",
				"",
				"153",
				"Chocolate",
				"10",
				"20",
				"40",
				"154",
				"154",
				"",
				"154",
				"Chocolate",
				"10",
				"20",
				"40",
				"154",
				"153",
				"",
				"155",
				"Land Claim Sign",
				"3",
				"12",
				"60",
				"155",
				"0",
				"",
				"156",
				"Crab",
				"-3",
				"100",
				"0",
				"7",
				"0",
				"",
				"157",
				"Molten Pickaxe",
				"70",
				"1001",
				"15",
				"24",
				"0",
				"",
				"158",
				"Blue Phaseblade",
				"0",
				"1003",
				"20",
				"26",
				"0",
				"",
				"159",
				"Diamond Staff",
				"0",
				"1004",
				"12",
				"28",
				"0",
				"",
				"160",
				"Water",
				"2.5",
				"5",
				"16",
				"215",
				"0",
				"",
				"161",
				"Water 15\/16",
				"2.5",
				"5",
				"15",
				"215",
				"0",
				"",
				"162",
				"Water 14\/16",
				"2.5",
				"5",
				"14",
				"215",
				"0",
				"",
				"163",
				"Water 13\/16",
				"2.5",
				"5",
				"13",
				"215",
				"0",
				"",
				"164",
				"Water 12\/16",
				"2.5",
				"5",
				"12",
				"215",
				"0",
				"",
				"165",
				"Water 11\/16",
				"2.5",
				"5",
				"11",
				"215",
				"0",
				"",
				"166",
				"Water 10\/16",
				"2.5",
				"5",
				"10",
				"215",
				"0",
				"",
				"167",
				"Water 9\/16",
				"2.5",
				"5",
				"9",
				"215",
				"0",
				"",
				"168",
				"Water 8\/16",
				"2.5",
				"5",
				"8",
				"215",
				"0",
				"",
				"169",
				"Water 7\/16",
				"2.5",
				"5",
				"7",
				"215",
				"0",
				"",
				"170",
				"Water 6\/16",
				"2.5",
				"5",
				"6",
				"215",
				"0",
				"",
				"171",
				"Water 5\/16",
				"2.5",
				"5",
				"5",
				"215",
				"0",
				"",
				"172",
				"Water 4\/16",
				"2.5",
				"5",
				"4",
				"215",
				"0",
				"",
				"173",
				"Water 3\/16",
				"2.5",
				"5",
				"3",
				"215",
				"0",
				"",
				"174",
				"Water 2\/16",
				"2.5",
				"5",
				"2",
				"215",
				"0",
				"",
				"175",
				"Water 1\/16",
				"2.5",
				"5",
				"1",
				"215",
				"0",
				"",
				"176",
				"Goldfish",
				"-3.5",
				"100",
				"0",
				"8",
				"0",
				"",
				"177",
				"Jellyfish",
				"-3.5",
				"100",
				"0",
				"9",
				"0",
				"",
				"178",
				"Lava",
				"2.5",
				"5",
				"16",
				"178",
				"0",
				"",
				"179",
				"Lava 15\/16",
				"2.5",
				"5",
				"15",
				"178",
				"0",
				"",
				"180",
				"Lava 14\/16",
				"2.5",
				"5",
				"14",
				"178",
				"0",
				"",
				"181",
				"Lava 13\/16",
				"2.5",
				"5",
				"13",
				"178",
				"0",
				"",
				"182",
				"Lava 12\/16",
				"2.5",
				"5",
				"12",
				"178",
				"0",
				"",
				"183",
				"Lava 11\/16",
				"2.5",
				"5",
				"11",
				"178",
				"0",
				"",
				"184",
				"Lava 10\/16",
				"2.5",
				"5",
				"10",
				"178",
				"0",
				"",
				"185",
				"Lava 9\/16",
				"2.5",
				"5",
				"9",
				"178",
				"0",
				"",
				"186",
				"Lava 8\/16",
				"2.5",
				"5",
				"8",
				"178",
				"0",
				"",
				"187",
				"Lava 7\/16",
				"2.5",
				"5",
				"7",
				"178",
				"0",
				"",
				"188",
				"Lava 6\/16",
				"2.5",
				"5",
				"6",
				"178",
				"0",
				"",
				"189",
				"Lava 5\/16",
				"2.5",
				"5",
				"5",
				"178",
				"0",
				"",
				"190",
				"Lava 4\/16",
				"2.5",
				"5",
				"4",
				"178",
				"0",
				"",
				"191",
				"Lava 3\/16",
				"2.5",
				"5",
				"3",
				"178",
				"0",
				"",
				"192",
				"Lava 2\/16",
				"2.5",
				"5",
				"2",
				"178",
				"0",
				"",
				"193",
				"Lava 1\/16",
				"2.5",
				"5",
				"1",
				"178",
				"0",
				"",
				"194",
				"Obsidian",
				"10",
				"50",
				"120",
				"194",
				"0",
				"",
				"195",
				"Lesser Healing Potion",
				"0",
				"1",
				"0",
				"0",
				"0",
				"",
				"196",
				"Healing Potion",
				"0",
				"1",
				"0",
				"0",
				"0",
				"",
				"197",
				"Greater Healing Potion",
				"0",
				"1",
				"0",
				"0",
				"0",
				"",
				"198",
				"Featherfall Potion",
				"0",
				"1",
				"0",
				"0",
				"0",
				"",
				"199",
				"Spelunker Potion",
				"0",
				"1",
				"0",
				"0",
				"0",
				"",
				"200",
				"Obsidian Skin Potion",
				"0",
				"1",
				"0",
				"0",
				"0",
				"",
				"201",
				"Gills Potion",
				"0",
				"1",
				"0",
				"0",
				"0",
				"",
				"202",
				"Purple Slime",
				"-3",
				"100",
				"0",
				"10",
				"0",
				"",
				"203",
				"Bunny Slime",
				"-3",
				"100",
				"0",
				"12",
				"0",
				"",
				"204",
				"Dungeon Slime",
				"-3",
				"100",
				"0",
				"14",
				"0",
				"",
				"205",
				"Lava Slime",
				"-3",
				"100",
				"0",
				"15",
				"0",
				"",
				"206",
				"Pyranha",
				"-3.5",
				"100",
				"0",
				"16",
				"0",
				"",
				"207",
				"Shark",
				"-3.5",
				"100",
				"0",
				"17",
				"0",
				"",
				"208",
				"Shark Fin",
				"0",
				"0",
				"0",
				"0",
				"0",
				"",
				"209",
				"Hook",
				"0",
				"0",
				"0",
				"0",
				"0",
				"",
				"210",
				"Zombie Arm",
				"0",
				"0",
				"0",
				"0",
				"0",
				"",
				"211",
				"Copper Pickaxe",
				"69",
				"1001",
				"3",
				"30",
				"0",
				"",
				"212",
				"Copper Sword",
				"0",
				"1003",
				"7",
				"32",
				"0",
				"",
				"213",
				"Copper Axe",
				"0",
				"1002",
				"4",
				"34",
				"0",
				"",
				"214",
				"Bucket",
				"0",
				"1098",
				"20",
				"36",
				"0",
				"",
				"215",
				"Water Bucket",
				"-1",
				"0",
				"0",
				"160",
				"0",
				"",
				"216",
				"Lava Bucket",
				"-1",
				"0",
				"0",
				"178",
				"0",
				"",
				"217",
				"Hellstone",
				"10",
				"70",
				"140",
				"218",
				"218",
				"",
				"218",
				"Hellstone",
				"10",
				"70",
				"140",
				"218",
				"217",
				"",
				"219",
				"Hellstone Bar",
				"0",
				"0",
				"0",
				"0",
				"0",
				"",
				"220",
				"Vine",
				"2",
				"12",
				"1",
				"0",
				"0",
				"",
				"221",
				"Hellforge",
				"3",
				"71",
				"120",
				"221",
				"0",
				"",
				"222",
				"Bat",
				"-3",
				"100",
				"0",
				"18",
				"0",
				"",
				"223",
				"Lava Bat",
				"-3",
				"100",
				"0",
				"19",
				"0",
				"",
				"224",
				"Water Chest",
				"3",
				"63",
				"120",
				"224",
				"0",
				"",
				"225",
				"Obsidian Chest",
				"3",
				"63",
				"160",
				"225",
				"0",
				"",
				"226",
				"Copper Coin",
				"0",
				"0",
				"0",
				"0",
				"0",
				"",
				"227",
				"Silver Coin",
				"0",
				"0",
				"0",
				"0",
				"0",
				"",
				"228",
				"Gold Coin",
				"0",
				"0",
				"0",
				"0",
				"0",
				"",
				"229",
				"Topaz Stone",
				"10",
				"50",
				"65",
				"230",
				"0",
				"",
				"230",
				"Topaz",
				"0",
				"0",
				"0",
				"0",
				"0",
				"",
				"231",
				"Ruby Stone",
				"10",
				"50",
				"65",
				"232",
				"0",
				"",
				"232",
				"Ruby",
				"0",
				"0",
				"0",
				"0",
				"0",
				"",
				"233",
				"Emerald Stone",
				"10",
				"50",
				"65",
				"234",
				"0",
				"",
				"234",
				"Emerald",
				"0",
				"0",
				"0",
				"0",
				"0",
				"",
				"235",
				"Sapphire Stone",
				"10",
				"50",
				"65",
				"236",
				"0",
				"",
				"236",
				"Sapphire",
				"0",
				"0",
				"0",
				"0",
				"0",
				"",
				"237",
				"Amethyst Stone",
				"10",
				"50",
				"65",
				"238",
				"0",
				"",
				"238",
				"Amethyst",
				"0",
				"0",
				"0",
				"0",
				"0",
				"",
				"239",
				"Iron Door",
				"-1",
				"0",
				"0",
				"243",
				"0",
				"",
				"240",
				"Glass Door",
				"-1",
				"0",
				"0",
				"245",
				"0",
				"",
				"241",
				"Obsidian Door",
				"-1",
				"0",
				"0",
				"247",
				"0",
				"",
				"242",
				"Iron Door Top",
				"4.5",
				"60",
				"100",
				"239",
				"0",
				"",
				"243",
				"Iron Door Bottom",
				"4",
				"60",
				"100",
				"239",
				"0",
				"",
				"244",
				"Glass Door Top",
				"4.5",
				"20",
				"65",
				"240",
				"0",
				"",
				"245",
				"Glass Door Bottom",
				"4",
				"20",
				"65",
				"240",
				"0",
				"",
				"246",
				"Obsidian Door Top",
				"4.5",
				"60",
				"160",
				"241",
				"0",
				"",
				"247",
				"Obsidian Door Bottom",
				"4",
				"60",
				"160",
				"241",
				"0",
				"",
				"248",
				"Glass Kiln",
				"3",
				"60",
				"120",
				"248",
				"0",
				"",
				"249",
				"Butterfly",
				"-3",
				"100",
				"0",
				"20",
				"0",
				"",
				"250",
				"Glass Table",
				"-1",
				"20",
				"45",
				"287",
				"0",
				"",
				"251",
				"Glass Lantern",
				"5.5",
				"20",
				"80",
				"251",
				"0",
				"",
				"252",
				"Glass Chandelier",
				"5.5",
				"20",
				"80",
				"252",
				"0",
				"",
				"253",
				"Pot",
				"3",
				"20",
				"1",
				"0",
				"0",
				"",
				"254",
				"Wooden Sink",
				"3",
				"12",
				"80",
				"254",
				"0",
				"",
				"255",
				"Glass Platform",
				"7",
				"20",
				"40",
				"255",
				"0",
				"",
				"256",
				"Squirrel",
				"-3",
				"100",
				"0",
				"21",
				"0",
				"",
				"257",
				"Mouse",
				"-3",
				"100",
				"0",
				"22",
				"0",
				"",
				"258",
				"Firefly",
				"-3",
				"100",
				"0",
				"23",
				"0",
				"",
				"259",
				"Fiery Greatsword",
				"0",
				"1003",
				"40",
				"38",
				"0",
				"",
				"260",
				"Glass Bed",
				"-1",
				"20",
				"0",
				"261",
				"0",
				"",
				"261",
				"Glass Bed L",
				"6",
				"20",
				"120",
				"260",
				"0",
				"",
				"262",
				"Glass Bed R",
				"6",
				"20",
				"120",
				"260",
				"0",
				"",
				"263",
				"Obsidian Bed",
				"-1",
				"60",
				"0",
				"264",
				"0",
				"",
				"264",
				"Obsidian Bed L",
				"6",
				"60",
				"120",
				"263",
				"0",
				"",
				"265",
				"Obsidian Bed R",
				"6",
				"60",
				"120",
				"263",
				"0",
				"",
				"266",
				"Gold Bed",
				"-1",
				"60",
				"0",
				"267",
				"0",
				"",
				"267",
				"Gold Bed L",
				"6",
				"60",
				"120",
				"266",
				"0",
				"",
				"268",
				"Gold Bed R",
				"6",
				"60",
				"120",
				"266",
				"0",
				"",
				"269",
				"Mushroom Bed",
				"-1",
				"12",
				"0",
				"270",
				"0",
				"",
				"270",
				"Mushroom Bed L",
				"6",
				"12",
				"120",
				"269",
				"0",
				"",
				"271",
				"Mushroom Bed R",
				"6",
				"12",
				"120",
				"269",
				"0",
				"",
				"272",
				"Wooden Crate",
				"3",
				"12",
				"40",
				"272",
				"0",
				"",
				"273",
				"Iron Crate",
				"3",
				"60",
				"100",
				"273",
				"0",
				"",
				"274",
				"Mushroom Block",
				"10",
				"20",
				"45",
				"274",
				"275",
				"",
				"275",
				"Mushroom Block",
				"10",
				"20",
				"45",
				"274",
				"274",
				"",
				"276",
				"Table L",
				"7.5",
				"12",
				"120",
				"55",
				"0",
				"",
				"277",
				"Table R",
				"7.5",
				"12",
				"120",
				"55",
				"0",
				"",
				"278",
				"Iron Table",
				"-1",
				"60",
				"120",
				"279",
				"0",
				"",
				"279",
				"Iron Table L",
				"7.5",
				"60",
				"120",
				"278",
				"0",
				"",
				"280",
				"Iron Table R",
				"7.5",
				"60",
				"120",
				"278",
				"0",
				"",
				"281",
				"Obsidian Table",
				"-1",
				"60",
				"140",
				"282",
				"0",
				"",
				"282",
				"Obsidian Table L",
				"7.5",
				"60",
				"140",
				"281",
				"0",
				"",
				"283",
				"Obsidian Table R",
				"7.5",
				"60",
				"140",
				"281",
				"0",
				"",
				"284",
				"Mushroom Table",
				"-1",
				"20",
				"120",
				"285",
				"0",
				"",
				"285",
				"Mushroom Table L",
				"7.5",
				"20",
				"120",
				"284",
				"0",
				"",
				"286",
				"Mushroom Table R",
				"7.5",
				"20",
				"120",
				"284",
				"0",
				"",
				"287",
				"Glass Table L",
				"7.5",
				"20",
				"120",
				"250",
				"0",
				"",
				"288",
				"Glass Table R",
				"7.5",
				"20",
				"120",
				"250",
				"0",
				"",
				"289",
				"Blue Dungeon Vase",
				"3",
				"20",
				"45",
				"289",
				"0",
				"",
				"290",
				"Green Dungeon Vase",
				"3",
				"20",
				"45",
				"290",
				"0",
				"",
				"291",
				"Pink Dungeon Vase",
				"3",
				"20",
				"45",
				"291",
				"0",
				"",
				"292",
				"Obsidian Vase",
				"3",
				"20",
				"45",
				"292",
				"0",
				"",
				"293",
				"Suspicious Looking Eye",
				"0",
				"2",
				"0",
				"24",
				"0",
				"",
				"294",
				"Demon Altar",
				"3",
				"0",
				"10000",
				"294",
				"0",
				"",
				"295",
				"Demonite Ore",
				"-1",
				"50",
				"160",
				"296",
				"0",
				"",
				"296",
				"Demonite Ore",
				"10",
				"50",
				"160",
				"295",
				"0",
				"",
				"297",
				"Demonite Bar",
				"0",
				"60",
				"0",
				"0",
				"0",
				"",
				"298",
				"Light's Bane",
				"0",
				"1003",
				"30",
				"40",
				"0",
				"",
				"299",
				"Eye of Cthulhu Mask",
				"0",
				"3",
				"0",
				"41",
				"0",
				"",
				"300",
				"Santa Mask",
				"0",
				"3",
				"0",
				"42",
				"0"],
			"isPersistent": false,
			"x": 43,
			"y": 38,
			"width": 412,
			"height": 298,
			"visible": false
		},
		{
			"listName": "_LData",
			"contents": ["54696",
				"12",
				"",
				"",
				"148",
				"1",
				"39",
				"13",
				"47",
				"10",
				"300",
				"1",
				"54157",
				"4",
				"",
				"",
				"54002",
				"12",
				"",
				"",
				"147",
				"1",
				"61",
				"36",
				"195",
				"3",
				"201",
				"2",
				"30178",
				"12",
				"",
				"",
				"159",
				"1",
				"61",
				"39",
				"198",
				"3",
				"300",
				"1",
				"13078",
				"12",
				"",
				"",
				"144",
				"1",
				"61",
				"39",
				"47",
				"8",
				"300",
				"1",
				"14099",
				"10",
				"",
				"",
				"158",
				"1",
				"196",
				"1",
				"47",
				"19",
				"11300",
				"12",
				"",
				"",
				"148",
				"1",
				"61",
				"38",
				"196",
				"1",
				"47",
				"20",
				"9936",
				"12",
				"",
				"",
				"144",
				"1",
				"61",
				"43",
				"200",
				"3",
				"47",
				"8",
				"7557",
				"14",
				"",
				"",
				"144",
				"1",
				"142",
				"7",
				"195",
				"3",
				"201",
				"3",
				"196",
				"1",
				"9972",
				"12",
				"",
				"",
				"146",
				"1",
				"198",
				"2",
				"196",
				"1",
				"300",
				"1",
				"11139",
				"16",
				"",
				"",
				"144",
				"1",
				"61",
				"17",
				"77",
				"9",
				"195",
				"2",
				"196",
				"1",
				"47",
				"17",
				"13561",
				"16",
				"",
				"",
				"159",
				"1",
				"61",
				"22",
				"39",
				"9",
				"196",
				"1",
				"47",
				"13",
				"300",
				"1",
				"4093",
				"10",
				"",
				"",
				"159",
				"1",
				"200",
				"2",
				"196",
				"1",
				"26726",
				"12",
				"",
				"",
				"159",
				"1",
				"196",
				"1",
				"47",
				"7",
				"300",
				"1",
				"8281",
				"14",
				"",
				"",
				"107",
				"1",
				"39",
				"10",
				"195",
				"5",
				"198",
				"1",
				"196",
				"1",
				"1662",
				"14",
				"",
				"",
				"159",
				"1",
				"61",
				"21",
				"142",
				"8",
				"196",
				"1",
				"47",
				"10",
				"4664",
				"16",
				"",
				"",
				"145",
				"1",
				"61",
				"33",
				"39",
				"15",
				"196",
				"1",
				"47",
				"16",
				"300",
				"1",
				"18878",
				"12",
				"",
				"",
				"144",
				"1",
				"77",
				"8",
				"195",
				"4",
				"109",
				"1",
				"16845",
				"18",
				"",
				"",
				"148",
				"1",
				"61",
				"24",
				"39",
				"15",
				"195",
				"5",
				"196",
				"1",
				"47",
				"9",
				"300",
				"1",
				"28090",
				"16",
				"",
				"",
				"146",
				"1",
				"61",
				"39",
				"195",
				"4",
				"196",
				"1",
				"47",
				"13",
				"300",
				"1",
				"21916",
				"16",
				"",
				"",
				"144",
				"1",
				"61",
				"47",
				"195",
				"3",
				"201",
				"2",
				"196",
				"1",
				"47",
				"20",
				"1657",
				"16",
				"",
				"",
				"148",
				"1",
				"142",
				"13",
				"198",
				"1",
				"196",
				"1",
				"47",
				"9",
				"300",
				"1",
				"14295",
				"12",
				"",
				"",
				"148",
				"1",
				"82",
				"8",
				"195",
				"2",
				"47",
				"11",
				"19470",
				"16",
				"",
				"",
				"146",
				"1",
				"61",
				"38",
				"77",
				"14",
				"195",
				"4",
				"196",
				"1",
				"300",
				"1",
				"14814",
				"10",
				"",
				"",
				"143",
				"1",
				"195",
				"3",
				"47",
				"11",
				"22489",
				"10",
				"",
				"",
				"144",
				"1",
				"142",
				"13",
				"196",
				"1",
				"26240",
				"14",
				"",
				"",
				"146",
				"1",
				"61",
				"18",
				"82",
				"8",
				"196",
				"1",
				"47",
				"17",
				"13680",
				"12",
				"",
				"",
				"159",
				"1",
				"195",
				"5",
				"198",
				"3",
				"196",
				"1",
				"14294",
				"14",
				"",
				"",
				"143",
				"1",
				"195",
				"2",
				"109",
				"3",
				"196",
				"1",
				"47",
				"10",
				"26509",
				"12",
				"",
				"",
				"147",
				"1",
				"195",
				"3",
				"201",
				"1",
				"300",
				"1",
				"17357",
				"16",
				"",
				"",
				"145",
				"1",
				"82",
				"7",
				"195",
				"4",
				"201",
				"3",
				"196",
				"1",
				"300",
				"1",
				"6441",
				"14",
				"",
				"",
				"143",
				"1",
				"61",
				"36",
				"195",
				"3",
				"200",
				"3",
				"300",
				"1",
				"26775",
				"10",
				"",
				"",
				"147",
				"1",
				"195",
				"2",
				"47",
				"16",
				"23324",
				"10",
				"",
				"",
				"145",
				"1",
				"61",
				"41",
				"300",
				"1",
				"23037",
				"10",
				"",
				"",
				"107",
				"1",
				"195",
				"2",
				"201",
				"1",
				"16782",
				"10",
				"",
				"",
				"143",
				"1",
				"142",
				"13",
				"195",
				"4",
				"14937",
				"10",
				"",
				"",
				"147",
				"1",
				"61",
				"38",
				"195",
				"3",
				"17807",
				"12",
				"",
				"",
				"146",
				"1",
				"61",
				"47",
				"82",
				"15",
				"195",
				"4",
				"27082",
				"12",
				"",
				"",
				"158",
				"1",
				"195",
				"2",
				"196",
				"1",
				"300",
				"1",
				"19153",
				"16",
				"",
				"",
				"146",
				"1",
				"61",
				"33",
				"109",
				"1",
				"196",
				"1",
				"47",
				"11",
				"300",
				"1",
				"23358",
				"14",
				"",
				"",
				"158",
				"1",
				"61",
				"30",
				"195",
				"3",
				"196",
				"1",
				"300",
				"1",
				"14774",
				"16",
				"",
				"",
				"144",
				"1",
				"61",
				"24",
				"82",
				"5",
				"195",
				"5",
				"200",
				"2",
				"47",
				"8",
				"37905",
				"16",
				"DONNIEISAWESOME",
				"",
				"256",
				"2",
				"125",
				"1",
				"152",
				"2",
				"135",
				"4",
				"210",
				"1",
				"139",
				"2",
				"39306",
				"4",
				"DONNIEISAWESOME",
				"Claimed Land",
				"53084",
				"4",
				"lionblase",
				"Claimed Land",
				"44219",
				"4",
				"nomnoms54321",
				"Claimed Land",
				"43187",
				"4",
				"nomnoms54321",
				"Nomnoms54321's house: not to far from here",
				"43310",
				"4",
				"jkx9",
				"Claimed Land"],
			"isPersistent": false,
			"x": 152,
			"y": 19,
			"width": 330,
			"height": 343,
			"visible": false
		},
		{
			"listName": "_Mob",
			"contents": ["2007",
				"m2007 k",
				"8530",
				"m8530 k",
				"506",
				"m506 k",
				"3003",
				"m3003 w 1 1 1128 1140 15 -38 4 -91 -28 -77 -1 -99 -20 32 96 30 98 89 61 -85 -6 -26 23",
				"4251",
				"m4251 w 1 6 1150 1340 10 -49 9 -44 -3 -82 -14 -46 -8 57 46 17 77 13 44 -90 16 -67 -2 -77 40 -76 28",
				"0",
				"",
				"0",
				"",
				"0",
				"",
				"0",
				"",
				"0",
				"",
				"0",
				"",
				"0",
				"",
				"0",
				"",
				"0",
				"",
				"0",
				"",
				"0",
				""],
			"isPersistent": false,
			"x": 32,
			"y": 34,
			"width": 450,
			"height": 328,
			"visible": false
		},
		{
			"listName": "NextLiquid",
			"contents": [],
			"isPersistent": false,
			"x": 338,
			"y": 23,
			"width": 144,
			"height": 339,
			"visible": false
		},
		{
			"listName": "_Light",
			"contents": [],
			"isPersistent": false,
			"x": 349,
			"y": 7,
			"width": 133,
			"height": 355,
			"visible": false
		},
		{
			"listName": "LightMod",
			"contents": [],
			"isPersistent": false,
			"x": 19,
			"y": 84,
			"width": 400,
			"height": 278,
			"visible": false
		}],
	"scripts": [[38,
			171,
			[["whenIReceive", "animate"],
				["call",
					"Set Bright Depth %n time %n",
					["*",
						["rounded", ["+", ["-", ["readVariable", "SCROLL_Y"], ["getAttribute:of:", "sea level", "Setup Level"]], 14]],
						10],
					["getAttribute:of:", "Day Night", "Player"]]]],
		[40.6,
			326.4,
			[["procDef", "Set Bright Depth %n time %n", ["depth", "time"], [1, 1], true],
				["doIf",
					["=",
						["&",
							[">", ["getParam", "time", "r"], "1.1"],
							["<", ["getParam", "time", "r"], "1.9"]],
						["=", ["backgroundIndex"], "1"]],
					[["nextScene"]]],
				["doIfElse",
					["<", ["getParam", "time", "r"], "1"],
					[["call", "Set Bright %n %n", ["getParam", "depth", "r"], 1], ["setVar:to:", "BRIGHT", "1"]],
					[["doIfElse",
							["<", ["getParam", "time", "r"], "1.1"],
							[["call",
									"Set Bright %n %n",
									["getParam", "depth", "r"],
									["\/",
										["rounded", ["*", ["-", 1.1, ["getParam", "time", "r"]], 100]],
										10]],
								["setVar:to:",
									"BRIGHT",
									["+",
										["*",
											["rounded", ["*", ["-", 1.1, ["getParam", "time", "r"]], 100]],
											0.04],
										0.6]]],
							[["doIfElse",
									["<", ["getParam", "time", "r"], "1.2"],
									[["call",
											"Set Bright %n %n",
											["getParam", "depth", "r"],
											["\/",
												["rounded", ["*", ["-", ["getParam", "time", "r"], 1.1], 100]],
												10]],
										["setVar:to:", "BRIGHT", "0.6"]],
									[["doIfElse",
											["<", ["getParam", "time", "r"], "1.8"],
											[["call", "Set Bright %n %n", ["getParam", "depth", "r"], 1], ["setVar:to:", "BRIGHT", "0.6"]],
											[["doIfElse",
													["<", ["getParam", "time", "r"], "1.9"],
													[["call",
															"Set Bright %n %n",
															["getParam", "depth", "r"],
															["\/",
																["rounded", ["*", ["-", 1.9, ["getParam", "time", "r"]], 100]],
																10]],
														["setVar:to:", "BRIGHT", "0.5"]],
													[["call",
															"Set Bright %n %n",
															["getParam", "depth", "r"],
															["\/",
																["rounded", ["*", ["-", ["getParam", "time", "r"], 1.9], 100]],
																10]],
														["setVar:to:",
															"BRIGHT",
															["+",
																["*",
																	["rounded", ["*", ["-", ["getParam", "time", "r"], 1.9], 100]],
																	0.04],
																0.6]]]]]]]]]]]]]],
		[625,
			361.4,
			[["procDef", "Set Bright %n %n", ["depth", "bright"], [1, 1], true],
				["doIfElse",
					["<", ["getParam", "depth", "r"], "0"],
					[["setGraphicEffect:to:", "brightness", -100]],
					[["doIfElse",
							[">", ["getParam", "depth", "r"], "100"],
							[["setGraphicEffect:to:", "brightness", ["-", ["*", ["getParam", "bright", "r"], 100], 100]]],
							[["setGraphicEffect:to:",
									"brightness",
									["-", ["*", ["getParam", "bright", "r"], ["getParam", "depth", "r"]], 100]]]]]]]],
		[584.6,
			949.4,
			[["doIfElse",
					["|",
						["<", ["getParam", "depth", "r"], "50"],
						[">", ["getParam", "time", "r"], "1.05"]],
					[["setVar:to:", "BRIGHT", 0]],
					[["setVar:to:", "BRIGHT", "1"]]]]],
		[42,
			36,
			[["whenGreenFlag"], ["startScene", "sky"], ["setGraphicEffect:to:", "brightness", 0], ["clearPenTrails"]]],
		[265, 125, [["rounded", ["-", ["readVariable", "SCROLL_Y"], 44.5]]]]],
	"scriptComments": [[841, 95, 164, 145, true, -1, "Time:\r\r0 = 7am\r1 = 7pm\r1.999 = midnight\r"]],
	"costumes": [{
			"costumeName": "sky",
			"baseLayerID": 640,
			"baseLayerMD5": "89ded5fcb60e4751caa7f671e3b4cef6.png",
			"bitmapResolution": 2,
			"rotationCenterX": 480,
			"rotationCenterY": 360
		},
		{
			"costumeName": "night sky",
			"baseLayerID": 641,
			"baseLayerMD5": "b98f86d550a61552ce186ee7d984e2ae.png",
			"bitmapResolution": 2,
			"rotationCenterX": 480,
			"rotationCenterY": 360
		}],
	"currentCostumeIndex": 0,
	"penLayerMD5": "5c81a336fab8be57adc039a8a2b33ca9.png",
	"penLayerID": 0,
	"tempoBPM": 60,
	"videoAlpha": 0.5,
	"children": [{
			"objName": "Sun2",
			"variables": [{
					"name": "ghost",
					"value": 0,
					"isPersistent": false
				},
				{
					"name": "nxtGhost",
					"value": "0",
					"isPersistent": false
				}],
			"scripts": [[20,
					256,
					[["whenIReceive", "animate"],
						["doIfElse",
							["<", ["getAttribute:of:", "Day Night", "Player"], "1"],
							[["gotoX:y:", ["*", 500, ["-", ["getAttribute:of:", "Day Night", "Player"], 0.5]], 110],
								["doIf", ["not", ["=", ["costumeIndex"], "1"]], [["lookLike:", "Sun"]]]],
							[["gotoX:y:", ["*", 500, ["-", ["getAttribute:of:", "Day Night", "Player"], 1.5]], 110],
								["doIf", ["not", ["=", ["costumeIndex"], "2"]], [["lookLike:", "Moon"]]]]],
						["setVar:to:",
							"nxtGhost",
							["-",
								100,
								["*",
									["rounded", ["+", ["-", ["readVariable", "SCROLL_Y"], ["getAttribute:of:", "sea level", "Setup Level"]], 14]],
									10]]],
						["doIfElse",
							[">", ["readVariable", "nxtGhost"], "100"],
							[["setVar:to:", "nxtGhost", "100"]],
							[["doIf", ["<", ["readVariable", "nxtGhost"], "0"], [["setVar:to:", "nxtGhost", "0"]]]]],
						["doIfElse",
							["=", ["readVariable", "nxtGhost"], ["readVariable", "ghost"]],
							null,
							[["setVar:to:", "ghost", ["readVariable", "nxtGhost"]], ["setGraphicEffect:to:", "ghost", ["readVariable", "ghost"]]]]]],
				[25,
					34,
					[["whenGreenFlag"],
						["setSizeTo:", 200],
						["goBackByLayers:", 1001],
						["lookLike:", "Sun"],
						["gotoX:y:", -160, 121],
						["show"],
						["setVar:to:", "ghost", 0]]],
				[361, 29, [["whenIReceive", "Begin Actual Game Loop"], ["goBackByLayers:", 1001], ["show"]]]],
			"sounds": [{
					"soundName": "pop",
					"soundID": 0,
					"md5": "83a9787d4cb6f3b7632b4ddfebf74367.wav",
					"sampleCount": 258,
					"rate": 11025,
					"format": ""
				}],
			"costumes": [{
					"costumeName": "Sun",
					"baseLayerID": 1,
					"baseLayerMD5": "ee090a4eb970e5290e0688cc70c3d62a.png",
					"bitmapResolution": 2,
					"rotationCenterX": 52,
					"rotationCenterY": 52
				},
				{
					"costumeName": "Moon",
					"baseLayerID": 2,
					"baseLayerMD5": "94fc9c94251e61000f220ec782346d88.png",
					"bitmapResolution": 2,
					"rotationCenterX": 24,
					"rotationCenterY": 24
				}],
			"currentCostumeIndex": 0,
			"scratchX": -160,
			"scratchY": 121,
			"scale": 2,
			"direction": 90,
			"rotationStyle": "normal",
			"isDraggable": false,
			"indexInLibrary": 23,
			"visible": true,
			"spriteInfo": {
			}
		},
		{
			"objName": "clouds",
			"variables": [{
					"name": "x",
					"value": 718,
					"isPersistent": false
				},
				{
					"name": "y",
					"value": 132,
					"isPersistent": false
				},
				{
					"name": "mul",
					"value": 12,
					"isPersistent": false
				}],
			"scripts": [[18,
					112,
					[["whenIReceive", "Clone Sprites"],
						["setVar:to:", "mul", "6"],
						["setVar:to:", "y", "160"],
						["lookLike:", ["+", 1, 0]],
						["createCloneOf", "_myself_"],
						["changeVar:by:", "mul", 3],
						["changeVar:by:", "y", -18],
						["nextCostume"],
						["createCloneOf", "_myself_"],
						["changeVar:by:", "mul", 3],
						["changeVar:by:", "y", -10],
						["nextCostume"],
						["call", "init"]]],
				[20, 21, [["whenIReceive", "Back_clouds"], ["goBackByLayers:", 1000]]],
				[348,
					302,
					[["whenIReceive", "animate"],
						["changeVar:by:", "x", ["*", -0.05, ["getAttribute:of:", "_Tick", "Multiplayer"]]],
						["call", "Set Bright %n", ["getAttribute:of:", "Day Night", "Player"]]]],
				[344, 32, [["whenCloned"], ["call", "init"]]],
				[347.75,
					130.85,
					[["procDef", "init", [], [], true], ["setVar:to:", "x", ["randomFrom:to:", 0, 1000]]]],
				[582, 28, [["whenIReceive", "Hide All"], ["gotoX:y:", 185, 138], ["show"]]],
				[347.8,
					458.1,
					[["procDef", "Set Bright %n", ["time"], [1], true],
						["xpos:",
							["-",
								["%",
									["computeFunction:of:",
										"floor",
										["*", ["-", ["readVariable", "x"], ["readVariable", "SCROLL_X"]], ["readVariable", "mul"]]],
									600],
								300]],
						["ypos:",
							["computeFunction:of:",
								"floor",
								["*", ["-", ["readVariable", "y"], ["readVariable", "SCROLL_Y"]], ["readVariable", "mul"]]]],
						["doIfElse",
							["<", ["getParam", "time", "r"], "1"],
							[["setGraphicEffect:to:", "brightness", 0]],
							[["doIfElse",
									["<", ["getParam", "time", "r"], "1.1"],
									[["setGraphicEffect:to:",
											"brightness",
											["*",
												["rounded", ["*", ["-", 1, ["getParam", "time", "r"]], 100]],
												10]]],
									[["doIfElse",
											["<", ["getParam", "time", "r"], "1.9"],
											[["setGraphicEffect:to:", "brightness", -100]],
											[["setGraphicEffect:to:",
													"brightness",
													["*",
														["rounded", ["*", ["-", ["getParam", "time", "r"], 2], 100]],
														10]]]]]]]]]]],
			"sounds": [{
					"soundName": "pop",
					"soundID": 0,
					"md5": "83a9787d4cb6f3b7632b4ddfebf74367.wav",
					"sampleCount": 258,
					"rate": 11025,
					"format": ""
				}],
			"costumes": [{
					"costumeName": "cloud2",
					"baseLayerID": 3,
					"baseLayerMD5": "a63e88ad1fed1d6489418f070e5d7b67.png",
					"bitmapResolution": 2,
					"rotationCenterX": 176,
					"rotationCenterY": 60
				},
				{
					"costumeName": "cloud1",
					"baseLayerID": 4,
					"baseLayerMD5": "ca5d8476d478844e52332ae90db868d6.png",
					"bitmapResolution": 2,
					"rotationCenterX": 158,
					"rotationCenterY": 78
				},
				{
					"costumeName": "cloud3",
					"baseLayerID": 5,
					"baseLayerMD5": "e7cf6cf2170229d7789915e2d49828bb.png",
					"bitmapResolution": 2,
					"rotationCenterX": 72,
					"rotationCenterY": 48
				}],
			"currentCostumeIndex": 2,
			"scratchX": 185,
			"scratchY": 138,
			"scale": 1,
			"direction": 90,
			"rotationStyle": "normal",
			"isDraggable": false,
			"indexInLibrary": 7,
			"visible": true,
			"spriteInfo": {
			}
		},
		{
			"objName": "Tiles",
			"variables": [{
					"name": "x",
					"value": 139,
					"isPersistent": false
				},
				{
					"name": "y",
					"value": 149,
					"isPersistent": false
				},
				{
					"name": "index",
					"value": -8,
					"isPersistent": false
				},
				{
					"name": "tile #",
					"value": 0,
					"isPersistent": false
				},
				{
					"name": "t",
					"value": -1.2228571428571429,
					"isPersistent": false
				},
				{
					"name": "light",
					"value": 0,
					"isPersistent": false
				}],
			"scripts": [[35.1,
					353,
					[["procDef", "Clone Tiles %n %n", ["win sx", "win sy"], [1, 1], true],
						["setVar:to:", "x", ["computeFunction:of:", "floor", ["readVariable", "SCROLL_X"]]],
						["setVar:to:", "y", ["computeFunction:of:", "floor", ["readVariable", "SCROLL_Y"]]],
						["changeVar:by:", "x", ["computeFunction:of:", "floor", ["\/", ["getParam", "win sx", "r"], -2]]],
						["changeVar:by:", "y", ["computeFunction:of:", "floor", ["\/", ["getParam", "win sy", "r"], -2]]],
						["setVar:to:", "tile #", 0],
						["setVar:to:", "index", "0"],
						["doRepeat",
							["+", ["getParam", "win sy", "r"], 1],
							[["doRepeat",
									["+", ["getParam", "win sx", "r"], 1],
									[["createCloneOf", "_myself_"], ["changeVar:by:", "x", 1], ["changeVar:by:", "index", 1]]],
								["changeVar:by:", "x", ["-", -1, ["getParam", "win sx", "r"]]],
								["changeVar:by:", "y", 1]]],
						["setVar:to:", "index", "-1"],
						["setVar:to:", "light", 0],
						["doRepeat", 7, [["createCloneOf", "_myself_"], ["changeVar:by:", "index", -1]]]]],
				[33,
					976,
					[["whenCloned"],
						["doIf", [">", ["readVariable", "index"], "-1"], [["call", "translate %n %n", 0, 0]]]]],
				[533,
					59,
					[["whenIReceive", "animate"],
						["doIfElse",
							[">", ["readVariable", "index"], "-1"],
							[["call", "Draw"]],
							[["doIf",
									[">", ["readVariable", "inv_change"], "0"],
									[["doIfElse",
											[">", ["getAttribute:of:", "Mode", "Player"], "0"],
											[["call", "Draw Inventory %n %n", 999, ["-", 0, ["readVariable", "index"]]]],
											[["doIf", ["<", ["readVariable", "index"], "-8"], [["deleteClone"]]],
												["call", "Draw Inventory %n %n", ["getAttribute:of:", "ToolMode", "Cursor"], ["-", 0, ["readVariable", "index"]]]]]]],
								["doIf",
									["=", ["getAttribute:of:", "ToolDrag", "Cursor"], ["readVariable", "index"]],
									[["gotoX:y:", ["-", ["mouseX"], 10], ["-", ["mouseY"], 10]]]]]]]],
				[536.9,
					581.4,
					[["procDef", "Draw", [], [], true],
						["doUntil",
							["not", ["<", ["-", ["readVariable", "x"], ["readVariable", "SCROLL_X"]], "-5.5"]],
							[["call", "translate %n %n", 12, 0]]],
						["doUntil",
							["<", ["-", ["readVariable", "x"], ["readVariable", "SCROLL_X"]], "5.5"],
							[["call", "translate %n %n", -12, 0]]],
						["doUntil",
							["not", ["<", ["-", ["readVariable", "y"], ["readVariable", "SCROLL_Y"]], "-4"]],
							[["call", "translate %n %n", 0, 9]]],
						["doUntil",
							["<", ["-", ["readVariable", "y"], ["readVariable", "SCROLL_Y"]], "4"],
							[["call", "translate %n %n", 0, -9]]],
						["doIfElse",
							[">", ["readVariable", "index"], "0"],
							[["setVar:to:", "tile #", ["getLine:ofList:", ["readVariable", "index"], "_Level"]],
								["doIfElse",
									[">", ["readVariable", "tile #"], "0"],
									[["gotoX:y:",
											["computeFunction:of:", "floor", ["*", ["-", ["readVariable", "x"], ["readVariable", "SCROLL_X"]], 40]],
											["computeFunction:of:", "floor", ["*", ["-", ["readVariable", "y"], ["readVariable", "SCROLL_Y"]], 40]]],
										["doIfElse",
											["=", ["readVariable", "tile #"], ["costumeIndex"]],
											null,
											[["lookLike:", ["readVariable", "tile #"]]]],
										["doIfElse",
											["|", ["<", ["readVariable", "tile #"], "178"], [">", ["readVariable", "tile #"], "193"]],
											[["call",
													"light %n %n",
													["*",
														["getLine:ofList:", ["-", ["*", ["readVariable", "index"], 2], 1], "_Light"],
														["readVariable", "BRIGHT"]],
													["getLine:ofList:", ["*", ["readVariable", "index"], 2], "_Light"]]],
											[["call", "light %n %n", 110, 110]]],
										["show"]],
									[["hide"]]]],
							[["hide"]]]]],
				[35.6,
					1195.6,
					[["procDef", "translate %n %n", ["tx", "ty"], [1, 1], true],
						["changeVar:by:", "x", ["getParam", "tx", "r"]],
						["changeVar:by:", "y", ["getParam", "ty", "r"]],
						["doIfElse",
							["|",
								["<", ["readVariable", "x"], "0"],
								["not", ["<", ["readVariable", "x"], ["readVariable", "MAP_WIDTH"]]]],
							[["setVar:to:", "index", "0"]],
							[["doIfElse",
									["|",
										["<", ["readVariable", "y"], "0"],
										["not", ["<", ["readVariable", "y"], ["readVariable", "MAP_HEIGHT"]]]],
									[["setVar:to:", "index", "0"]],
									[["setVar:to:",
											"index",
											["+",
												["+", ["*", ["readVariable", "y"], ["readVariable", "MAP_WIDTH"]], ["readVariable", "x"]],
												1]]]]]]]],
				[1207,
					54.5,
					[["procDef", "Draw Inventory %n %n", ["selID", "invID"], [1, 1], true],
						["doIf",
							["&", ["=", ["readVariable", "inv_change"], "2"], ["=", ["readVariable", "index"], "-8"]],
							[["doIfElse",
									["=", ["getAttribute:of:", "Mode", "Player"], "1"],
									[["setSizeTo:", 120],
										["doRepeat",
											2,
											[["doRepeat", 8, [["changeVar:by:", "index", -1], ["createCloneOf", "_myself_"]]]]],
										["doRepeat", 20, [["changeVar:by:", "index", -1], ["createCloneOf", "_myself_"]]],
										["setVar:to:", "index", "-8"]],
									[["doIfElse",
											["=", ["getAttribute:of:", "Mode", "Player"], "2"],
											[["setSizeTo:", 120],
												["doRepeat",
													4,
													[["doRepeat", 8, [["changeVar:by:", "index", -1], ["createCloneOf", "_myself_"]]]]],
												["setVar:to:", "index", "-8"]],
											null]]]]],
						["doIfElse",
							["not", ["=", ["getLine:ofList:", ["*", ["readVariable", "index"], -2], "_inv"], "0"]],
							[["doIfElse",
									["=", ["getLine:ofList:", ["*", ["readVariable", "index"], -2], "_inv"], "-1"],
									[["setGraphicEffect:to:", "ghost", 70], ["setGraphicEffect:to:", "brightness", -50]],
									[["setGraphicEffect:to:", "ghost", 0], ["setGraphicEffect:to:", "brightness", 0]]],
								["show"],
								["comeToFront"],
								["doIfElse",
									[">", ["readVariable", "index"], "-25"],
									[["ypos:",
											["-",
												124,
												["*",
													["computeFunction:of:", "floor", ["\/", ["-", ["getParam", "invID", "r"], 1], 8]],
													32]]],
										["doIfElse",
											["<", ["getParam", "invID", "r"], ["getParam", "selID", "r"]],
											[["setSizeTo:", 120],
												["xpos:",
													["-",
														["*", ["%", ["-", ["getParam", "invID", "r"], 1], 8], 32],
														202]]],
											[["doIfElse",
													["=", ["getParam", "invID", "r"], ["getParam", "selID", "r"]],
													[["setSizeTo:", 160],
														["xpos:",
															["-",
																["*", ["%", ["-", ["getParam", "invID", "r"], 1], 8], 32],
																200]],
														["changeYposBy:", -3]],
													[["setSizeTo:", 120],
														["xpos:",
															["-",
																["*", ["%", ["-", ["getParam", "invID", "r"], 1], 8], 32],
																192]]]]]]],
									[["doIfElse",
											["=", ["getAttribute:of:", "Mode", "Player"], "1"],
											[["xpos:",
													["-",
														["*", ["%", ["-", ["getParam", "invID", "r"], 1], 4], 32],
														202]],
												["ypos:",
													["-",
														192,
														["*",
															["computeFunction:of:", "floor", ["\/", ["-", ["getParam", "invID", "r"], 1], 4]],
															32]]]],
											[["xpos:",
													["-",
														["*", ["%", ["-", ["getParam", "invID", "r"], 1], 8], 32],
														202]],
												["ypos:",
													["-",
														105,
														["*",
															["computeFunction:of:", "floor", ["\/", ["-", ["getParam", "invID", "r"], 1], 8]],
															32]]]]]]],
								["lookLike:", ["getLine:ofList:", ["-", ["*", ["readVariable", "index"], -2], 1], "_inv"]]],
							[["hide"]]]]],
				[537,
					1488.3,
					[["procDef", "light %n %n", ["l1", "l2"], [1, 1], true],
						["doIfElse",
							["|",
								[">", ["getParam", "l1", "r"], "100"],
								[">", ["getParam", "l2", "r"], "100"]],
							[["doIfElse",
									["=", "100", ["readVariable", "light"]],
									null,
									[["setVar:to:", "light", "100"], ["setGraphicEffect:to:", "brightness", 0]]]],
							[["doIfElse",
									[">", ["getParam", "l1", "r"], ["getParam", "l2", "r"]],
									[["doIfElse",
											["=", ["getParam", "l1", "r"], ["readVariable", "light"]],
											null,
											[["setVar:to:", "light", ["getParam", "l1", "r"]],
												["setGraphicEffect:to:", "brightness", ["-", ["readVariable", "light"], 100]]]]],
									[["doIfElse",
											["=", ["getParam", "l2", "r"], ["readVariable", "light"]],
											null,
											[["setVar:to:", "light", ["getParam", "l2", "r"]],
												["setGraphicEffect:to:", "brightness", ["-", ["readVariable", "light"], 100]]]]]]]]]],
				[37,
					127,
					[["whenIReceive", "Clone Sprites"],
						["setVar:to:", "TILE_SIZE", "40"],
						["setVar:to:", "light", "100"],
						["hide"],
						["lookLike:", "grass"],
						["setSizeTo:", 253],
						["goBackByLayers:", 1000],
						["call", "Clone Tiles %n %n", 11, 8]]],
				[36, 25, [["whenIReceive", "Hide All"], ["hide"]]],
				[1731.7,
					52.4,
					[["procDef", "STAMP %n", ["expand"], [1], true],
						["broadcast:", "Hide All"],
						["clearPenTrails"],
						["setVar:to:", "index", ["*", ["readVariable", "MAP_WIDTH"], ["readVariable", "MAP_HEIGHT"]]],
						["setVar:to:",
							"t",
							["\/", ["*", 428, ["getParam", "expand", "r"]], ["readVariable", "MAP_WIDTH"]]],
						["ypos:", ["-", ["*", ["readVariable", "MAP_HEIGHT"], ["readVariable", "t"]], 140]],
						["lookLike:", "BIG"],
						["setSizeTo:", ["computeFunction:of:", "ceiling", ["*", ["readVariable", "t"], 10]]],
						["setVar:to:", "t", ["-", 0, ["readVariable", "t"]]],
						["doRepeat",
							["readVariable", "MAP_HEIGHT"],
							[["xpos:", 214],
								["doRepeat",
									["readVariable", "MAP_WIDTH"],
									[["changeVar:by:", "index", -1],
										["setVar:to:", "tile #", ["getLine:ofList:", ["readVariable", "index"], "_Level"]],
										["doIf",
											[">", ["readVariable", "tile #"], "0"],
											[["doIfElse",
													["=", ["readVariable", "tile #"], ["costumeIndex"]],
													null,
													[["lookLike:", ["readVariable", "tile #"]]]],
												["stampCostume"]]],
										["changeXposBy:", ["readVariable", "t"]]]],
								["changeYposBy:", ["readVariable", "t"]]]]]]],
			"costumes": [{
					"costumeName": "grass",
					"baseLayerID": 6,
					"baseLayerMD5": "999a77dc64a8c4c37e29d2d26ad45737.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "dirt",
					"baseLayerID": 7,
					"baseLayerMD5": "85c0fe775a65f8d4272fc329073dc613.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "tree1",
					"baseLayerID": 8,
					"baseLayerMD5": "044f7524b81dc340011b92166b227ab3.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "tree2",
					"baseLayerID": 9,
					"baseLayerMD5": "b9ef48185a94cbf108f6748fe0b8f8bc.png",
					"bitmapResolution": 2,
					"rotationCenterX": -16,
					"rotationCenterY": 32
				},
				{
					"costumeName": "tree10",
					"baseLayerID": 10,
					"baseLayerMD5": "b34c1a812b0d2a7a77a5dbf659a38d5e.png",
					"bitmapResolution": 2,
					"rotationCenterX": -18,
					"rotationCenterY": 28
				},
				{
					"costumeName": "tree11",
					"baseLayerID": 11,
					"baseLayerMD5": "1bdd4a9310dbffc1cc1b8d96fc8a3596.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "tree12",
					"baseLayerID": 12,
					"baseLayerMD5": "78a9cea1747bc7b095cdfcb952a7a3bd.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "tree1i3",
					"baseLayerID": 13,
					"baseLayerMD5": "7ccbea4943ce2d48fcd4a1f50491c9d9.png",
					"bitmapResolution": 2,
					"rotationCenterX": -16,
					"rotationCenterY": 32
				},
				{
					"costumeName": "tree14",
					"baseLayerID": 14,
					"baseLayerMD5": "89ec1473da8832d3162c819a7a55a4ea.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 30
				},
				{
					"costumeName": "tree20",
					"baseLayerID": 15,
					"baseLayerMD5": "cf5fb8545664b66b10a22e3e95bbeff2.png",
					"bitmapResolution": 2,
					"rotationCenterX": -16,
					"rotationCenterY": 32
				},
				{
					"costumeName": "tree21",
					"baseLayerID": 16,
					"baseLayerMD5": "a008b73290df48bdd642503c72f27dff.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "tree22",
					"baseLayerID": 17,
					"baseLayerMD5": "45eae168ce2422b57d8744af14c620cc.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "tree30",
					"baseLayerID": 18,
					"baseLayerMD5": "3374b869244f880c19c19bc1d9dfdd15.png",
					"bitmapResolution": 2,
					"rotationCenterX": -16,
					"rotationCenterY": 32
				},
				{
					"costumeName": "tree31",
					"baseLayerID": 19,
					"baseLayerMD5": "c18b1620d7c3e6fbd88a26ed9ac1d72f.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "tree32",
					"baseLayerID": 20,
					"baseLayerMD5": "689c644a40ae0fd79ddfe08b3a2409ae.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "tree40",
					"baseLayerID": 21,
					"baseLayerMD5": "eabe692d80ef8f051de304b6f7097575.png",
					"bitmapResolution": 2,
					"rotationCenterX": -24,
					"rotationCenterY": 4
				},
				{
					"costumeName": "tree41",
					"baseLayerID": 22,
					"baseLayerMD5": "f0025dc271a77c7167b65256b2ba329f.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 12
				},
				{
					"costumeName": "tree42",
					"baseLayerID": 23,
					"baseLayerMD5": "5828335f81b5a99028f91769c4a6e156.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 12
				},
				{
					"costumeName": "tree50",
					"baseLayerID": 24,
					"baseLayerMD5": "e99ef984eb5bf2e4f38c222a597b3699.png",
					"bitmapResolution": 2,
					"rotationCenterX": -16,
					"rotationCenterY": 20
				},
				{
					"costumeName": "stone",
					"baseLayerID": 25,
					"baseLayerMD5": "b1404d2ce1202a401f36e6a099794f65.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "stone2",
					"baseLayerID": 26,
					"baseLayerMD5": "43ae2019898d42c071aab7effff526d8.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "Iron_Pickaxe",
					"baseLayerID": 27,
					"baseLayerMD5": "5ccbea0f874664d49b44b67cb0897cd5.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "Iron_Axe",
					"baseLayerID": 28,
					"baseLayerMD5": "8a3de2f9955f6a17be0d6fdcd482e63d.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 28
				},
				{
					"costumeName": "wood2_top",
					"baseLayerID": 29,
					"baseLayerMD5": "80654e0d9c4df06235296d92750c4f67.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "wood2",
					"baseLayerID": 30,
					"baseLayerMD5": "8bb2ffb3c27ff6894c690fd3a108c7f4.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "sand_top",
					"baseLayerID": 31,
					"baseLayerMD5": "976bc9c0a37d724a029f6cdc4d305b68.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "sand",
					"baseLayerID": 32,
					"baseLayerMD5": "c8c333cec04d6744ff9afe5fd2dcc5b7.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "iron_top",
					"baseLayerID": 33,
					"baseLayerMD5": "2f8e97a479e4d647836698e32876cc74.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "iron",
					"baseLayerID": 34,
					"baseLayerMD5": "c78e498cfc37a4ec2b2b0f282eaaeb6d.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "Bed_item",
					"baseLayerID": 35,
					"baseLayerMD5": "e681dedca85199b201c5a4a79c6bb5f6.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 26
				},
				{
					"costumeName": "Acorn",
					"baseLayerID": 36,
					"baseLayerMD5": "94d7603239dbc1fd7a754aca99a94cd7.png",
					"bitmapResolution": 2,
					"rotationCenterX": -6,
					"rotationCenterY": 25
				},
				{
					"costumeName": "sapling",
					"baseLayerID": 37,
					"baseLayerMD5": "036761fb86f00fd046294f258917a747.png",
					"bitmapResolution": 2,
					"rotationCenterX": -10,
					"rotationCenterY": 32
				},
				{
					"costumeName": "door-closed",
					"baseLayerID": 38,
					"baseLayerMD5": "922ee80d60ea66f5edc3f5bd2f4f999b.png",
					"bitmapResolution": 2,
					"rotationCenterX": -8,
					"rotationCenterY": 32
				},
				{
					"costumeName": "door-closed2",
					"baseLayerID": 39,
					"baseLayerMD5": "d7782ccce3484fc72a7ca41190b9de30.png",
					"bitmapResolution": 2,
					"rotationCenterX": -8,
					"rotationCenterY": 32
				},
				{
					"costumeName": "door",
					"baseLayerID": 40,
					"baseLayerMD5": "d80b3c5b4f9b385000b06974fbe5ebd7.png",
					"bitmapResolution": 2,
					"rotationCenterX": -7,
					"rotationCenterY": 32
				},
				{
					"costumeName": "Platform",
					"baseLayerID": 41,
					"baseLayerMD5": "2312ad91f2dad4a34958ea0ac8f0236b.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "Work_Bench",
					"baseLayerID": 42,
					"baseLayerMD5": "1c7a1d7d38f1d9d7b4d3227f197beb40.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 18
				},
				{
					"costumeName": "Furnace",
					"baseLayerID": 43,
					"baseLayerMD5": "b1c8817a8a273e2a34cfc2d289dc5dfb.png",
					"bitmapResolution": 2,
					"rotationCenterX": -2,
					"rotationCenterY": 26
				},
				{
					"costumeName": "Iron_Bar",
					"baseLayerID": 44,
					"baseLayerMD5": "b2ddf5a3b334d557932f4cd51ce5c799.png",
					"bitmapResolution": 2,
					"rotationCenterX": -2,
					"rotationCenterY": 28
				},
				{
					"costumeName": "Iron_wall",
					"baseLayerID": 45,
					"baseLayerMD5": "2586ca49309954bb371ecd6d41bc2d32.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "Stone-Wall-Top",
					"baseLayerID": 46,
					"baseLayerMD5": "0d0275d6b50e583d2d3b74ae4557abe8.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "Stone-Wall",
					"baseLayerID": 47,
					"baseLayerMD5": "a23e76e4e521a80d07429f819e74a1bd.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "bed_a",
					"baseLayerID": 48,
					"baseLayerMD5": "9123c9b572f4d69bd49308b818b65895.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "bed_b",
					"baseLayerID": 49,
					"baseLayerMD5": "985eb6ec935f5b12866f47ab8cf0da7e.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 22
				},
				{
					"costumeName": "chair_left",
					"baseLayerID": 50,
					"baseLayerMD5": "4eb4a45670bcf59d0b6c79f850082d84.png",
					"bitmapResolution": 2,
					"rotationCenterX": -8,
					"rotationCenterY": 32
				},
				{
					"costumeName": "chair_right",
					"baseLayerID": 51,
					"baseLayerMD5": "f4a5dc82a52116edb343a4f28e14608c.png",
					"bitmapResolution": 2,
					"rotationCenterX": -8,
					"rotationCenterY": 32
				},
				{
					"costumeName": "torch",
					"baseLayerID": 52,
					"baseLayerMD5": "9d710f2e694d204fdf35678850653beb.png",
					"bitmapResolution": 2,
					"rotationCenterX": -12,
					"rotationCenterY": 20
				},
				{
					"costumeName": "torch_left",
					"baseLayerID": 53,
					"baseLayerMD5": "06b1b29e3307a2017bf30c8cf2d17412.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 22
				},
				{
					"costumeName": "torch_right",
					"baseLayerID": 54,
					"baseLayerMD5": "942de10e0f4b9230c288a14b5b0d9461.png",
					"bitmapResolution": 2,
					"rotationCenterX": -18,
					"rotationCenterY": 22
				},
				{
					"costumeName": "SandBrick_top",
					"baseLayerID": 55,
					"baseLayerMD5": "10c4baf94acdb92667e169de65b5bd18.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "SandBrick",
					"baseLayerID": 56,
					"baseLayerMD5": "db26b75db48d7ab59afb04ad81e8300e.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "chandelier",
					"baseLayerID": 57,
					"baseLayerMD5": "8340a207fe7b19bfaced26c0b55174ef.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "Bench1",
					"baseLayerID": 58,
					"baseLayerMD5": "df4fc9a34598d1ef97b55c0ccf885591.png",
					"bitmapResolution": 2,
					"rotationCenterX": -2,
					"rotationCenterY": 22
				},
				{
					"costumeName": "Terraria_Dresser",
					"baseLayerID": 59,
					"baseLayerMD5": "0fc740369fba932676951573582ca8e2.png",
					"bitmapResolution": 2,
					"rotationCenterX": -2,
					"rotationCenterY": 24
				},
				{
					"costumeName": "table3",
					"baseLayerID": 60,
					"baseLayerMD5": "2f9adacdfd7457715ab80818d9bf2641.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 27
				},
				{
					"costumeName": "Barrel11",
					"baseLayerID": 61,
					"baseLayerMD5": "4f2c9446340e93baa05e4b4cdc608bb2.png",
					"bitmapResolution": 2,
					"rotationCenterX": -6,
					"rotationCenterY": 26
				},
				{
					"costumeName": "chest",
					"baseLayerID": 62,
					"baseLayerMD5": "6d2752f72c580f3ae8f1f3aa088acc24.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 28
				},
				{
					"costumeName": "sign",
					"baseLayerID": 63,
					"baseLayerMD5": "d3f3b97ddfd39313076326c33a0c6b9a.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "anvil",
					"baseLayerID": 64,
					"baseLayerMD5": "50c520f7a426063d2be2609304375774.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 18
				},
				{
					"costumeName": "sawmill",
					"baseLayerID": 65,
					"baseLayerMD5": "20641905497d1c5e1302b08581e79c3f.png",
					"bitmapResolution": 2,
					"rotationCenterX": -2,
					"rotationCenterY": 28
				},
				{
					"costumeName": "chain",
					"baseLayerID": 66,
					"baseLayerMD5": "973cfab893b08ddf06613b58348d3067.png",
					"bitmapResolution": 2,
					"rotationCenterX": -8,
					"rotationCenterY": 28
				},
				{
					"costumeName": "Grandfather_Clock",
					"baseLayerID": 67,
					"baseLayerMD5": "c474ee57b38ab795345340a7e1d0b537.png",
					"bitmapResolution": 2,
					"rotationCenterX": -8,
					"rotationCenterY": 30
				},
				{
					"costumeName": "Grandfather_Clock_top",
					"baseLayerID": 68,
					"baseLayerMD5": "2ed18779b8a70065804eaffd18b31b05.png",
					"bitmapResolution": 2,
					"rotationCenterX": -4,
					"rotationCenterY": 32
				},
				{
					"costumeName": "Grandfather_Clock_bot",
					"baseLayerID": 69,
					"baseLayerMD5": "97c836591b8512448aa569de31ed5d9d.png",
					"bitmapResolution": 2,
					"rotationCenterX": -4,
					"rotationCenterY": 32
				},
				{
					"costumeName": "cloud_top",
					"baseLayerID": 70,
					"baseLayerMD5": "6ffb7a317d70e9705bdc14efcdb174d9.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "cloud",
					"baseLayerID": 71,
					"baseLayerMD5": "46cc19d78ec558d73722bc3f6837b916.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "Glass2Top",
					"baseLayerID": 72,
					"baseLayerMD5": "c8ea3173b1ef2227181f958694f37ffa.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "Glass2",
					"baseLayerID": 73,
					"baseLayerMD5": "be0d1a18812781d5866ed205f57f1308.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "ice_top",
					"baseLayerID": 74,
					"baseLayerMD5": "15b1939f450d4a1ba2012d89c4a85811.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "ice",
					"baseLayerID": 75,
					"baseLayerMD5": "ed08a693942e01001f14dba6b0ac3aca.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "Clay_top",
					"baseLayerID": 76,
					"baseLayerMD5": "e9b34f779f41d40e0c00374d0ce91b57.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "Clay",
					"baseLayerID": 77,
					"baseLayerMD5": "5b069f2bcc0405b6b3c749fe3e3ea6e2.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "Brick_top",
					"baseLayerID": 78,
					"baseLayerMD5": "4030086eda5f1108e06882b28317edc8.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "Brick",
					"baseLayerID": 79,
					"baseLayerMD5": "93db0a3d7b551281f98c94152d5a74d5.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "gold_top",
					"baseLayerID": 80,
					"baseLayerMD5": "a34b65bfaeabd6614fdf2d9420c74433.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "gold",
					"baseLayerID": 81,
					"baseLayerMD5": "3f4fbacc5dae9b8407dd4e2c5fe3e451.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "GoldBar",
					"baseLayerID": 82,
					"baseLayerMD5": "a5cee8d3bf547224993c74396dfba297.png",
					"bitmapResolution": 2,
					"rotationCenterX": -2,
					"rotationCenterY": 28
				},
				{
					"costumeName": "GoldBrick_top",
					"baseLayerID": 83,
					"baseLayerMD5": "b6b37939b71d4923ff9de68458631cac.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "GoldBrick",
					"baseLayerID": 84,
					"baseLayerMD5": "ca0e8af046bc12032872589c8435f618.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "Silver_top",
					"baseLayerID": 85,
					"baseLayerMD5": "8a30b8ecd2e9ac56d9498c79e418b4b4.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "Silver",
					"baseLayerID": 86,
					"baseLayerMD5": "78f4db6f8d1d5a400678070f49177d67.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "SilverBar",
					"baseLayerID": 87,
					"baseLayerMD5": "b1c0027aeb2f0a0fd2845065194aef07.png",
					"bitmapResolution": 2,
					"rotationCenterX": -2,
					"rotationCenterY": 28
				},
				{
					"costumeName": "SilverBrick_top",
					"baseLayerID": 88,
					"baseLayerMD5": "ed0b7f813782bff1d8fa31df98e07fc5.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "SilverBrick",
					"baseLayerID": 89,
					"baseLayerMD5": "14795ef1c542b2a8f14480f637429d83.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "grass-seeds",
					"baseLayerID": 90,
					"baseLayerMD5": "cf2f8c366c9bd47cb428e375d869a7cd.png",
					"bitmapResolution": 2,
					"rotationCenterX": -6,
					"rotationCenterY": 24
				},
				{
					"costumeName": "Plants_1",
					"baseLayerID": 91,
					"baseLayerMD5": "7d906b0972651ff89b3a535df34d7980.png",
					"bitmapResolution": 2,
					"rotationCenterX": -4,
					"rotationCenterY": 18
				},
				{
					"costumeName": "Plants_2",
					"baseLayerID": 92,
					"baseLayerMD5": "65230535de264b962a39d6bf6dade300.png",
					"bitmapResolution": 2,
					"rotationCenterX": -6,
					"rotationCenterY": 20
				},
				{
					"costumeName": "Plants_3",
					"baseLayerID": 93,
					"baseLayerMD5": "0be6ce30ffd311bd6fbe6690c94088cc.png",
					"bitmapResolution": 2,
					"rotationCenterX": -2,
					"rotationCenterY": 20
				},
				{
					"costumeName": "Plants_4",
					"baseLayerID": 94,
					"baseLayerMD5": "73a28b23733571457d5cce425fe351be.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 20
				},
				{
					"costumeName": "Plants_5",
					"baseLayerID": 95,
					"baseLayerMD5": "87b672fe15d5297691229eec059ac96c.png",
					"bitmapResolution": 2,
					"rotationCenterX": -2,
					"rotationCenterY": 18
				},
				{
					"costumeName": "Plants_6",
					"baseLayerID": 96,
					"baseLayerMD5": "c183b119e27082e50341f02ef5bc9b54.png",
					"bitmapResolution": 2,
					"rotationCenterX": -8,
					"rotationCenterY": 20
				},
				{
					"costumeName": "Plants_8",
					"baseLayerID": 97,
					"baseLayerMD5": "76bbf0c8022ec78a85a69acd70a0b470.png",
					"bitmapResolution": 2,
					"rotationCenterX": -8,
					"rotationCenterY": 18
				},
				{
					"costumeName": "Plants_9",
					"baseLayerID": 98,
					"baseLayerMD5": "2b7dbb32e82c8a9298eca8656abe5fe5.png",
					"bitmapResolution": 2,
					"rotationCenterX": -8,
					"rotationCenterY": 20
				},
				{
					"costumeName": "Plants_7",
					"baseLayerID": 99,
					"baseLayerMD5": "fd1c3027c652d3f80fc88b951fdf798e.png",
					"bitmapResolution": 2,
					"rotationCenterX": -8,
					"rotationCenterY": 20
				},
				{
					"costumeName": "Plants_10",
					"baseLayerID": 100,
					"baseLayerMD5": "b6b9d7b9df3dd5fd93651ceba4b38970.png",
					"bitmapResolution": 2,
					"rotationCenterX": -2,
					"rotationCenterY": 32
				},
				{
					"costumeName": "fence",
					"baseLayerID": 101,
					"baseLayerMD5": "82d70787a7bbf33ea6283e54d30aa876.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 30
				},
				{
					"costumeName": "fence_iron",
					"baseLayerID": 102,
					"baseLayerMD5": "5f5a7b8930dff12b75ef6a61463a694c.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 26
				},
				{
					"costumeName": "chandelier_gold",
					"baseLayerID": 103,
					"baseLayerMD5": "702bdf88ec6b77e9ba938202dbe3eba4.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "candelabra",
					"baseLayerID": 104,
					"baseLayerMD5": "73a188fa2b302ef11985e40453ec68b8.png",
					"bitmapResolution": 2,
					"rotationCenterX": -4,
					"rotationCenterY": 28
				},
				{
					"costumeName": "chest_gold",
					"baseLayerID": 105,
					"baseLayerMD5": "2ff95983ed7dc51bcb4e7d1756a4697f.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 28
				},
				{
					"costumeName": "bath",
					"baseLayerID": 106,
					"baseLayerMD5": "22d9c509a4af87292b1219550630cf65.png",
					"bitmapResolution": 2,
					"rotationCenterX": -2,
					"rotationCenterY": 22
				},
				{
					"costumeName": "trash",
					"baseLayerID": 107,
					"baseLayerMD5": "7e0a8e92b781c1d601753ffc6a65716e.png",
					"bitmapResolution": 2,
					"rotationCenterX": -2,
					"rotationCenterY": 32
				},
				{
					"costumeName": "toilet",
					"baseLayerID": 108,
					"baseLayerMD5": "1da5229c834264ff27a5ad8c6671a9cb.png",
					"bitmapResolution": 2,
					"rotationCenterX": -8,
					"rotationCenterY": 32
				},
				{
					"costumeName": "cooks_pot",
					"baseLayerID": 109,
					"baseLayerMD5": "6f70583c573d64da2e54f42644313120.png",
					"bitmapResolution": 2,
					"rotationCenterX": -4,
					"rotationCenterY": 26
				},
				{
					"costumeName": "bath1",
					"baseLayerID": 110,
					"baseLayerMD5": "e866a793519d408a793dcfb40bd95c84.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 22
				},
				{
					"costumeName": "bath2",
					"baseLayerID": 111,
					"baseLayerMD5": "9e9895973706459a31d0ade74d6efe57.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "Builder_Potion",
					"baseLayerID": 112,
					"baseLayerMD5": "423c026cd86c560bbe5e14336e6cc4a5.png",
					"bitmapResolution": 2,
					"rotationCenterX": -6,
					"rotationCenterY": 28
				},
				{
					"costumeName": "Mining_Potion",
					"baseLayerID": 113,
					"baseLayerMD5": "bcb1f778a04bc2d680b1f9484f4d763e.png",
					"bitmapResolution": 2,
					"rotationCenterX": -6,
					"rotationCenterY": 28
				},
				{
					"costumeName": "Swiftness_Potion",
					"baseLayerID": 114,
					"baseLayerMD5": "e512da1f74f01e0215e6371d0bb2f26f.png",
					"bitmapResolution": 2,
					"rotationCenterX": -10,
					"rotationCenterY": 28
				},
				{
					"costumeName": "diamond_block",
					"baseLayerID": 115,
					"baseLayerMD5": "42459e1aed561f0b5e48f69353e93693.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "Diamond",
					"baseLayerID": 116,
					"baseLayerMD5": "c0f53c58897ef2722a0b76a4ac8e7cc9.png",
					"bitmapResolution": 2,
					"rotationCenterX": -8,
					"rotationCenterY": 22
				},
				{
					"costumeName": "diamond_sparkle_top",
					"baseLayerID": 117,
					"baseLayerMD5": "6b925cf51b72cfde3194461a1f467ec3.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "diamond_sparkle",
					"baseLayerID": 118,
					"baseLayerMD5": "19231269abb4e5c6813a4e5e8fb29547.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "stone_slab",
					"baseLayerID": 119,
					"baseLayerMD5": "d3fc897040ca9047cede8e93e2873063.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "sand_slab",
					"baseLayerID": 120,
					"baseLayerMD5": "58103cc7b95cfe676df042bb5a573d05.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "plant_in_pot",
					"baseLayerID": 121,
					"baseLayerMD5": "aabc16e798259c69acf0484556ef5a14.png",
					"bitmapResolution": 2,
					"rotationCenterX": -4,
					"rotationCenterY": 32
				},
				{
					"costumeName": "bookcase1",
					"baseLayerID": 122,
					"baseLayerMD5": "bdcdf283287b49cdad21bbacb55f49b4.png",
					"bitmapResolution": 2,
					"rotationCenterX": -8,
					"rotationCenterY": 32
				},
				{
					"costumeName": "bookcase2",
					"baseLayerID": 123,
					"baseLayerMD5": "f7da4112f2c62f8175638653da1b2f80.png",
					"bitmapResolution": 2,
					"rotationCenterX": -8,
					"rotationCenterY": 32
				},
				{
					"costumeName": "bookcase3",
					"baseLayerID": 124,
					"baseLayerMD5": "660a62a19b7a3e0b9cf803ce5e6b572c.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "bookcase4",
					"baseLayerID": 125,
					"baseLayerMD5": "2482df961e37cf2baaa59760554134b6.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "bookcase_item",
					"baseLayerID": 126,
					"baseLayerMD5": "ff334c9b8c12a766d9e04d67b6d93a32.png",
					"bitmapResolution": 2,
					"rotationCenterX": -8,
					"rotationCenterY": 30
				},
				{
					"costumeName": "Skyware_Chest",
					"baseLayerID": 127,
					"baseLayerMD5": "26d12371abe4bae639e2715db8586250.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 26
				},
				{
					"costumeName": "Heavy_Work_Bench",
					"baseLayerID": 128,
					"baseLayerMD5": "fd10ec891ded8c60071189e1cddd2a42.png",
					"bitmapResolution": 2,
					"rotationCenterX": -2,
					"rotationCenterY": 24
				},
				{
					"costumeName": "Bug_Net",
					"baseLayerID": 129,
					"baseLayerMD5": "7197d876228a7730ade75a211d854fa7.png",
					"bitmapResolution": 2,
					"rotationCenterX": 2,
					"rotationCenterY": 34
				},
				{
					"costumeName": "rabbit1",
					"baseLayerID": 130,
					"baseLayerMD5": "2f3c462b5e8ce9c4eecba58fd65c3483.png",
					"bitmapResolution": 2,
					"rotationCenterX": -2,
					"rotationCenterY": 28
				},
				{
					"costumeName": "beam_top",
					"baseLayerID": 131,
					"baseLayerMD5": "4d8024b500756cf7784f840732cf0833.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "beam",
					"baseLayerID": 132,
					"baseLayerMD5": "c01129a7283a29e7631d5654c8f0d653.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "sofa0",
					"baseLayerID": 133,
					"baseLayerMD5": "d244c8150335f94dcc3ca73cb68c162a.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 28
				},
				{
					"costumeName": "sofa1",
					"baseLayerID": 134,
					"baseLayerMD5": "a785915aeb4a43e251efd49011fc9594.png",
					"bitmapResolution": 2,
					"rotationCenterX": -8,
					"rotationCenterY": 26
				},
				{
					"costumeName": "sofa2",
					"baseLayerID": 135,
					"baseLayerMD5": "498a673070f4e9536993eaac077ae153.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 26
				},
				{
					"costumeName": "piano",
					"baseLayerID": 136,
					"baseLayerMD5": "6638baf6ff43bbf14b647dfebace4770.png",
					"bitmapResolution": 2,
					"rotationCenterX": -2,
					"rotationCenterY": 26
				},
				{
					"costumeName": "piano1",
					"baseLayerID": 137,
					"baseLayerMD5": "092c66038386435a3685649d580ed62b.png",
					"bitmapResolution": 2,
					"rotationCenterX": -8,
					"rotationCenterY": 32
				},
				{
					"costumeName": "piano2",
					"baseLayerID": 138,
					"baseLayerMD5": "7716b61cde552cef26c57d6a4d0cd695.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "chain2",
					"baseLayerID": 139,
					"baseLayerMD5": "2c026634f54bc4f799daa73d7628a95c.png",
					"bitmapResolution": 2,
					"rotationCenterX": -12,
					"rotationCenterY": 32
				},
				{
					"costumeName": "frog1",
					"baseLayerID": 140,
					"baseLayerMD5": "4354c5895e3350a2a5bc50ad78595089.png",
					"bitmapResolution": 2,
					"rotationCenterX": -8,
					"rotationCenterY": 22
				},
				{
					"costumeName": "slime-green-1",
					"baseLayerID": 141,
					"baseLayerMD5": "698359608402d9d9a07c3685dd9c0b06.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 25
				},
				{
					"costumeName": "sword-wooden",
					"baseLayerID": 142,
					"baseLayerMD5": "6bd3f8eef60311e1e2b0c12385bb8c06.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "Broadsword-Iron",
					"baseLayerID": 143,
					"baseLayerMD5": "e571bffc4d611cd13ddccd713cf81ff7.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "gel",
					"baseLayerID": 144,
					"baseLayerMD5": "d196bfd105485f57a3ff48b795bef642.png",
					"bitmapResolution": 2,
					"rotationCenterX": -8,
					"rotationCenterY": 22
				},
				{
					"costumeName": "Platinum_top",
					"baseLayerID": 145,
					"baseLayerMD5": "4ff579223bf793bf4c9dabec0c3e2db3.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "Platinum",
					"baseLayerID": 146,
					"baseLayerMD5": "60e50d6ebf7e41fc32d1dc8d9bba49ae.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "Platinum-Bar",
					"baseLayerID": 147,
					"baseLayerMD5": "72007efc967af5a85d8fd369479599d9.png",
					"bitmapResolution": 2,
					"rotationCenterX": -2,
					"rotationCenterY": 28
				},
				{
					"costumeName": "Gold_Pickaxe",
					"baseLayerID": 148,
					"baseLayerMD5": "688bd2302eb0d26afaa5b5e92f7d9fe9.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "Gold_Axe",
					"baseLayerID": 149,
					"baseLayerMD5": "5305563e3e3b27a1c617eebfd82e2557.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 28
				},
				{
					"costumeName": "sword-golden",
					"baseLayerID": 150,
					"baseLayerMD5": "83964bca92b4c73510b681516f621b1a.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "Platinum_Pickaxe3",
					"baseLayerID": 151,
					"baseLayerMD5": "66978225153b252ee792e5265280d6a7.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "Platinum_Axe2",
					"baseLayerID": 152,
					"baseLayerMD5": "d25ba44d84d6392d3158dc442ad31359.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 28
				},
				{
					"costumeName": "sword-platinum3",
					"baseLayerID": 153,
					"baseLayerMD5": "5227f90d439a0ba87eeea81689b0a69c.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "Demon_Eye",
					"baseLayerID": 154,
					"baseLayerMD5": "9ea36789adf1c2d54f32a270cdbdff3d.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 28
				},
				{
					"costumeName": "lens",
					"baseLayerID": 155,
					"baseLayerMD5": "22dad5725a1e38bc94f2fe55faf47274.png",
					"bitmapResolution": 2,
					"rotationCenterX": -8,
					"rotationCenterY": 26
				},
				{
					"costumeName": "zombie_01",
					"baseLayerID": 156,
					"baseLayerMD5": "3d4a56c7c04dd34b014e7d67e0ee04bb.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 37
				},
				{
					"costumeName": "easter-egg",
					"baseLayerID": 157,
					"baseLayerMD5": "460895f4c711d134062d53530979a336.png",
					"bitmapResolution": 2,
					"rotationCenterX": -6,
					"rotationCenterY": 28
				},
				{
					"costumeName": "chocolate_top",
					"baseLayerID": 158,
					"baseLayerMD5": "e2bae4f63c60666851110d8fcf80e27b.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "chocolate",
					"baseLayerID": 159,
					"baseLayerMD5": "55702da8676c74ca38c3703560171ca9.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "sign_home",
					"baseLayerID": 160,
					"baseLayerMD5": "7c56db34d6f468018453dda609c17797.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "crab",
					"baseLayerID": 161,
					"baseLayerMD5": "31af06cd44bba1d398317eb2c9723b99.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 24
				},
				{
					"costumeName": "Molten_Pickaxe",
					"baseLayerID": 162,
					"baseLayerMD5": "76f34da83a98178088d5ef6814c5a08f.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "Blue_Phaseblade",
					"baseLayerID": 163,
					"baseLayerMD5": "d6a33a6e80bda2736d6976c1b921f8e7.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 0,
					"rotationCenterY": 17
				},
				{
					"costumeName": "Diamond_Staff",
					"baseLayerID": 164,
					"baseLayerMD5": "176f707c9c21a63378a54b1b7ce02e72.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 0,
					"rotationCenterY": 16
				},
				{
					"costumeName": "water",
					"baseLayerID": 165,
					"baseLayerMD5": "ea23f6f073207349bfc579003762a600.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "water15",
					"baseLayerID": 166,
					"baseLayerMD5": "85b0fa6cabf05179c6998a6e8efa97e5.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 30
				},
				{
					"costumeName": "water14",
					"baseLayerID": 167,
					"baseLayerMD5": "f369b6e40b6e69f641942e072ea32f5f.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 28
				},
				{
					"costumeName": "water13",
					"baseLayerID": 168,
					"baseLayerMD5": "92779e7e1de3b408765114b7d0f44674.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 26
				},
				{
					"costumeName": "water12",
					"baseLayerID": 169,
					"baseLayerMD5": "15a6a112d5f7b798d26f24940cbae579.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 24
				},
				{
					"costumeName": "water11",
					"baseLayerID": 170,
					"baseLayerMD5": "1ec5c96f38a1868e57b5dcfe0787e2f4.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 22
				},
				{
					"costumeName": "water10",
					"baseLayerID": 171,
					"baseLayerMD5": "5f6ca2a19776ad9c544e2e94601becd1.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 20
				},
				{
					"costumeName": "water09",
					"baseLayerID": 172,
					"baseLayerMD5": "93010e195c92d48708a7a294871b8c38.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 18
				},
				{
					"costumeName": "water08",
					"baseLayerID": 173,
					"baseLayerMD5": "1dc1a0c452262f559964b7f929e86b46.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 16
				},
				{
					"costumeName": "water07",
					"baseLayerID": 174,
					"baseLayerMD5": "659bdde372a848889c599712c3950121.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 14
				},
				{
					"costumeName": "water06",
					"baseLayerID": 175,
					"baseLayerMD5": "a8d68a4aa6f1181e2b3097bacdc8a4aa.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 12
				},
				{
					"costumeName": "water05",
					"baseLayerID": 176,
					"baseLayerMD5": "1fd7d0ff843db5afc074b754c2b6f3ce.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 10
				},
				{
					"costumeName": "water04",
					"baseLayerID": 177,
					"baseLayerMD5": "91437335497c5829d43faa0235825a3f.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 8
				},
				{
					"costumeName": "water03",
					"baseLayerID": 178,
					"baseLayerMD5": "e00e47020ccf4d71145db8ec2fb83f17.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 6
				},
				{
					"costumeName": "water02",
					"baseLayerID": 179,
					"baseLayerMD5": "5d0c9d13362d7da3874caad89b3d1dcb.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 4
				},
				{
					"costumeName": "water01",
					"baseLayerID": 180,
					"baseLayerMD5": "e2c0c0a3cf9c896b0af8920863fe58f7.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 2
				},
				{
					"costumeName": "goldfish2",
					"baseLayerID": 181,
					"baseLayerMD5": "960a58b283894332071a33f624701d8b.png",
					"bitmapResolution": 2,
					"rotationCenterX": -2,
					"rotationCenterY": 28
				},
				{
					"costumeName": "jellyfish2",
					"baseLayerID": 182,
					"baseLayerMD5": "b819a67acb365651612f404df30e79fc.png",
					"bitmapResolution": 2,
					"rotationCenterX": -4,
					"rotationCenterY": 28
				},
				{
					"costumeName": "lava1",
					"baseLayerID": 183,
					"baseLayerMD5": "04df5085b067c2a4b44b100f71462543.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "lava2",
					"baseLayerID": 184,
					"baseLayerMD5": "c5423526f8c329342f5356a9f5494187.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 30
				},
				{
					"costumeName": "lava3",
					"baseLayerID": 185,
					"baseLayerMD5": "3c52408e5a58de5439cb3b88f2f7b515.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 28
				},
				{
					"costumeName": "lava4",
					"baseLayerID": 186,
					"baseLayerMD5": "1ee4d306950f35c9bc33a0ec4eac6f44.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 26
				},
				{
					"costumeName": "lava5",
					"baseLayerID": 187,
					"baseLayerMD5": "a2c17a4d0bf6ca81b19eac9e93787a5b.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 24
				},
				{
					"costumeName": "lava6",
					"baseLayerID": 188,
					"baseLayerMD5": "56ee7b2e4fb9571edb8e5d9260762313.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 22
				},
				{
					"costumeName": "lava7",
					"baseLayerID": 189,
					"baseLayerMD5": "9f22b5c9fd2ff87d3c44f3027bee370c.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 20
				},
				{
					"costumeName": "lava8",
					"baseLayerID": 190,
					"baseLayerMD5": "572604a60277b935306fce40ed8435fb.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 18
				},
				{
					"costumeName": "lava9",
					"baseLayerID": 191,
					"baseLayerMD5": "4089e2175dbe7eb24ed57d93332fcf46.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 16
				},
				{
					"costumeName": "lava10",
					"baseLayerID": 192,
					"baseLayerMD5": "e3b59d956f0e93361ad548319f062c62.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 14
				},
				{
					"costumeName": "lava11",
					"baseLayerID": 193,
					"baseLayerMD5": "6316e3f4a45811e4be79994475a72c04.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 12
				},
				{
					"costumeName": "lava12",
					"baseLayerID": 194,
					"baseLayerMD5": "984ec5f669c303b4928e30e50f0a4398.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 10
				},
				{
					"costumeName": "lava13",
					"baseLayerID": 195,
					"baseLayerMD5": "e1f35d9cc51d49f2c847ce238f8a1dd0.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 8
				},
				{
					"costumeName": "lava14",
					"baseLayerID": 196,
					"baseLayerMD5": "5c5cf4a089056ae6e45bf3195c8f6c1b.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 6
				},
				{
					"costumeName": "lava15",
					"baseLayerID": 197,
					"baseLayerMD5": "1bb492ff43e41b94ca19ccc5783bc9cd.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 4
				},
				{
					"costumeName": "lava16",
					"baseLayerID": 198,
					"baseLayerMD5": "f9ba7a3e67f04d234a44bfb9bfc513d1.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 2
				},
				{
					"costumeName": "Obsidian",
					"baseLayerID": 199,
					"baseLayerMD5": "5aefc841a0fe64399932f124fb52f401.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "Lesser_Healing_Potion",
					"baseLayerID": 200,
					"baseLayerMD5": "2d1f80466ea0288a00e2e01df19ed01b.png",
					"bitmapResolution": 2,
					"rotationCenterX": -6,
					"rotationCenterY": 28
				},
				{
					"costumeName": "Healing_Potion",
					"baseLayerID": 201,
					"baseLayerMD5": "b41078dce3c6539ef300a326326d4986.png",
					"bitmapResolution": 2,
					"rotationCenterX": -6,
					"rotationCenterY": 28
				},
				{
					"costumeName": "Greater_Healing_Potion",
					"baseLayerID": 202,
					"baseLayerMD5": "af1b63ffe0d823c58769e3e133441222.png",
					"bitmapResolution": 2,
					"rotationCenterX": -6,
					"rotationCenterY": 30
				},
				{
					"costumeName": "Featherfall_Potion",
					"baseLayerID": 203,
					"baseLayerMD5": "bab5280f82dd0f98455b68ff40a67452.png",
					"bitmapResolution": 2,
					"rotationCenterX": -6,
					"rotationCenterY": 30
				},
				{
					"costumeName": "Spelunker_Potion",
					"baseLayerID": 204,
					"baseLayerMD5": "8e5bd74eedef0bde11eaad8add496592.png",
					"bitmapResolution": 2,
					"rotationCenterX": -5,
					"rotationCenterY": 30
				},
				{
					"costumeName": "Obsidian_Skin_Potion",
					"baseLayerID": 205,
					"baseLayerMD5": "cb54d25cceb2ee742d9aa45388bdf434.png",
					"bitmapResolution": 2,
					"rotationCenterX": -6,
					"rotationCenterY": 30
				},
				{
					"costumeName": "Gills_Potion",
					"baseLayerID": 206,
					"baseLayerMD5": "d8b35522881855e725d5dfd7fab608a2.png",
					"bitmapResolution": 2,
					"rotationCenterX": -10,
					"rotationCenterY": 30
				},
				{
					"costumeName": "slime-purple",
					"baseLayerID": 207,
					"baseLayerMD5": "26d28677d8bcb8e126282fc9ff6087ca.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 26
				},
				{
					"costumeName": "bunny-slime",
					"baseLayerID": 208,
					"baseLayerMD5": "9ae8a630958822e9dab634502a271cca.png",
					"bitmapResolution": 2,
					"rotationCenterX": 4,
					"rotationCenterY": 28
				},
				{
					"costumeName": "slime-blue",
					"baseLayerID": 209,
					"baseLayerMD5": "04044dd3f4f1cc3d8863b88bc0c14da3.png",
					"bitmapResolution": 2,
					"rotationCenterX": 6,
					"rotationCenterY": 30
				},
				{
					"costumeName": "lava-slime",
					"baseLayerID": 210,
					"baseLayerMD5": "1e7fe85e1670de004ff98e36a676bbcd.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 26
				},
				{
					"costumeName": "pyranha",
					"baseLayerID": 211,
					"baseLayerMD5": "ee322f40273c3e7e5bcef517c78f399f.png",
					"bitmapResolution": 2,
					"rotationCenterX": -2,
					"rotationCenterY": 26
				},
				{
					"costumeName": "shark",
					"baseLayerID": 212,
					"baseLayerMD5": "d0fc4457f9ab20ae3ee8e4e2cb8b9c31.png",
					"bitmapResolution": 2,
					"rotationCenterX": 2,
					"rotationCenterY": 28
				},
				{
					"costumeName": "Shark_Fin",
					"baseLayerID": 213,
					"baseLayerMD5": "1d0970aa070774f81952389afff18f39.png",
					"bitmapResolution": 2,
					"rotationCenterX": -6,
					"rotationCenterY": 24
				},
				{
					"costumeName": "Hook",
					"baseLayerID": 214,
					"baseLayerMD5": "009a024c55dd26f34b2680bde7782263.png",
					"bitmapResolution": 2,
					"rotationCenterX": -6,
					"rotationCenterY": 26
				},
				{
					"costumeName": "Zombie_Arm",
					"baseLayerID": 215,
					"baseLayerMD5": "b6b22cb0ab0f8c52bdd625a7c85c0520.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "copper_Pickaxe",
					"baseLayerID": 216,
					"baseLayerMD5": "7289839e835facd576f8a13ae027cfb3.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "Copper_Broadsword",
					"baseLayerID": 217,
					"baseLayerMD5": "2494e6ec470ee384aa900cfd91659d76.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "Copper_Axe",
					"baseLayerID": 218,
					"baseLayerMD5": "c31734f8ee6abdbd893f26903cc43de5.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 30
				},
				{
					"costumeName": "Empty_Bucket",
					"baseLayerID": 219,
					"baseLayerMD5": "c1c019725d155b620bd85b3aa9f40117.png",
					"bitmapResolution": 2,
					"rotationCenterX": -4,
					"rotationCenterY": 26
				},
				{
					"costumeName": "Water_Bucket",
					"baseLayerID": 220,
					"baseLayerMD5": "8de3e6a031f3b6eef93f714da59b4adb.png",
					"bitmapResolution": 2,
					"rotationCenterX": -4,
					"rotationCenterY": 26
				},
				{
					"costumeName": "Lava_Bucket",
					"baseLayerID": 221,
					"baseLayerMD5": "67334c8d636206caae0655fa179b6888.png",
					"bitmapResolution": 2,
					"rotationCenterX": -4,
					"rotationCenterY": 26
				},
				{
					"costumeName": "hellstone_top",
					"baseLayerID": 222,
					"baseLayerMD5": "d5a91258ee425582eb87531d6dc2c76b.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "hellstone",
					"baseLayerID": 223,
					"baseLayerMD5": "690f395a201d0dc6b70eec32f56e2c9b.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "Hellstone_Bar",
					"baseLayerID": 224,
					"baseLayerMD5": "47de68f6f9fc80e81874419b1c15ec1c.png",
					"bitmapResolution": 2,
					"rotationCenterX": -2,
					"rotationCenterY": 28
				},
				{
					"costumeName": "vine",
					"baseLayerID": 225,
					"baseLayerMD5": "5d4880d53217d0458b5dc7d6e572e6de.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "Hellforge",
					"baseLayerID": 226,
					"baseLayerMD5": "b3c6dc6a56652d0565c7dbafabb77297.png",
					"bitmapResolution": 2,
					"rotationCenterX": -2,
					"rotationCenterY": 26
				},
				{
					"costumeName": "bat",
					"baseLayerID": 227,
					"baseLayerMD5": "632216ce59020a2a0d65cc12013d2db4.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 26
				},
				{
					"costumeName": "lava-bat2",
					"baseLayerID": 228,
					"baseLayerMD5": "bbbd37e0dd809b474c7a3f4525192a65.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "Water_Chest",
					"baseLayerID": 229,
					"baseLayerMD5": "727f1b05846d7ab82c41aec1cd19e6c2.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 28
				},
				{
					"costumeName": "Obsidian_Chest",
					"baseLayerID": 230,
					"baseLayerMD5": "cc8b57d686e7217662533f58fc2924a9.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 28
				},
				{
					"costumeName": "Item_71",
					"baseLayerID": 231,
					"baseLayerMD5": "d924d708b8741cf682f61eeebc9b9ac1.png",
					"bitmapResolution": 2,
					"rotationCenterX": -10,
					"rotationCenterY": 24
				},
				{
					"costumeName": "Item_72",
					"baseLayerID": 232,
					"baseLayerMD5": "f9e227ce850acf090658c6d3c5cc97fd.png",
					"bitmapResolution": 2,
					"rotationCenterX": -10,
					"rotationCenterY": 24
				},
				{
					"costumeName": "Item_73",
					"baseLayerID": 233,
					"baseLayerMD5": "045246124660ac85503987986dea2620.png",
					"bitmapResolution": 2,
					"rotationCenterX": -10,
					"rotationCenterY": 24
				},
				{
					"costumeName": "topaz_stone",
					"baseLayerID": 234,
					"baseLayerMD5": "d5d7630277329e13946f7d62511997bd.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "Item_180",
					"baseLayerID": 235,
					"baseLayerMD5": "fa21d51954d66ff1bf37c76fae4081e1.png",
					"bitmapResolution": 2,
					"rotationCenterX": -8,
					"rotationCenterY": 22
				},
				{
					"costumeName": "ruby_stone",
					"baseLayerID": 236,
					"baseLayerMD5": "e1399ea741b4347f45998a23dd6cdb89.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "Item_178",
					"baseLayerID": 237,
					"baseLayerMD5": "4189a76abe14b00be99c4ed738e4cf92.png",
					"bitmapResolution": 2,
					"rotationCenterX": -10,
					"rotationCenterY": 24
				},
				{
					"costumeName": "emerald_stone",
					"baseLayerID": 238,
					"baseLayerMD5": "75f394e61b015d62b7c7f357886ae548.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "Item_179",
					"baseLayerID": 239,
					"baseLayerMD5": "dbd66e1773325fc143d3607d3ca93b3c.png",
					"bitmapResolution": 2,
					"rotationCenterX": -8,
					"rotationCenterY": 24
				},
				{
					"costumeName": "sapphire_stone",
					"baseLayerID": 240,
					"baseLayerMD5": "eaa9915d45a2a5b1954b55ff2711b1a1.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "Item_177",
					"baseLayerID": 241,
					"baseLayerMD5": "f70345659ec46586884ad6122a686210.png",
					"bitmapResolution": 2,
					"rotationCenterX": -8,
					"rotationCenterY": 24
				},
				{
					"costumeName": "amethyst_stone",
					"baseLayerID": 242,
					"baseLayerMD5": "60fdf985135f836046a41aaa30661db5.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "Item_181",
					"baseLayerID": 243,
					"baseLayerMD5": "eb6593ecd65b87f27e3655e38765b304.png",
					"bitmapResolution": 2,
					"rotationCenterX": -8,
					"rotationCenterY": 24
				},
				{
					"costumeName": "Iron_Door",
					"baseLayerID": 244,
					"baseLayerMD5": "44f1fbae468f5f84e13eb858838e10f7.png",
					"bitmapResolution": 2,
					"rotationCenterX": -8,
					"rotationCenterY": 32
				},
				{
					"costumeName": "Glass_Door",
					"baseLayerID": 245,
					"baseLayerMD5": "194f424296fda24dc0fbedaff46d73c4.png",
					"bitmapResolution": 2,
					"rotationCenterX": -6,
					"rotationCenterY": 32
				},
				{
					"costumeName": "Obsidian_Door",
					"baseLayerID": 246,
					"baseLayerMD5": "1e9d5593c06e1048c4bf84b44ab7a852.png",
					"bitmapResolution": 2,
					"rotationCenterX": -8,
					"rotationCenterY": 32
				},
				{
					"costumeName": "door-closed-iron",
					"baseLayerID": 247,
					"baseLayerMD5": "34cb16017f6481c6b9c4f5b49927784f.png",
					"bitmapResolution": 2,
					"rotationCenterX": -10,
					"rotationCenterY": 32
				},
				{
					"costumeName": "door-closed-iron2",
					"baseLayerID": 248,
					"baseLayerMD5": "29bb025769b054965e530d0bcf6de0b0.png",
					"bitmapResolution": 2,
					"rotationCenterX": -6,
					"rotationCenterY": 32
				},
				{
					"costumeName": "door-closed-glass",
					"baseLayerID": 249,
					"baseLayerMD5": "7967543bf8ae6ce84ae4f7737239e575.png",
					"bitmapResolution": 2,
					"rotationCenterX": -10,
					"rotationCenterY": 32
				},
				{
					"costumeName": "door-closed-glass2",
					"baseLayerID": 250,
					"baseLayerMD5": "6934c86495cad980507878be8e30d076.png",
					"bitmapResolution": 2,
					"rotationCenterX": -8,
					"rotationCenterY": 32
				},
				{
					"costumeName": "door-closed-obsidian2",
					"baseLayerID": 251,
					"baseLayerMD5": "2a72307a9043493c5f870df3d76e6b5c.png",
					"bitmapResolution": 2,
					"rotationCenterX": -6,
					"rotationCenterY": 32
				},
				{
					"costumeName": "door-closed-obsidian",
					"baseLayerID": 252,
					"baseLayerMD5": "6850a344d4ffe3da7afc4a96ecce3f61.png",
					"bitmapResolution": 2,
					"rotationCenterX": -6,
					"rotationCenterY": 32
				},
				{
					"costumeName": "Glass_Kiln",
					"baseLayerID": 253,
					"baseLayerMD5": "6148e9a52ec7fe266a68993c24c25742.png",
					"bitmapResolution": 2,
					"rotationCenterX": -1,
					"rotationCenterY": 32
				},
				{
					"costumeName": "Monarch_Butterfly",
					"baseLayerID": 254,
					"baseLayerMD5": "d0492b0d8129e5637dc527192ab723e2.png",
					"bitmapResolution": 2,
					"rotationCenterX": -4,
					"rotationCenterY": 26
				},
				{
					"costumeName": "Glass_Table",
					"baseLayerID": 255,
					"baseLayerMD5": "1e0546ba52c6453da3ffe2b58cdf17d4.png",
					"bitmapResolution": 2,
					"rotationCenterX": -2,
					"rotationCenterY": 22
				},
				{
					"costumeName": "Glass_Lantern",
					"baseLayerID": 256,
					"baseLayerMD5": "075216cd7e9285194fc74e69a2825631.png",
					"bitmapResolution": 2,
					"rotationCenterX": -8,
					"rotationCenterY": 32
				},
				{
					"costumeName": "Glass_Chandelier",
					"baseLayerID": 257,
					"baseLayerMD5": "b3400d9c6fc33c37de87730aeba1f5e5.png",
					"bitmapResolution": 2,
					"rotationCenterX": -2,
					"rotationCenterY": 32
				},
				{
					"costumeName": "Pot",
					"baseLayerID": 258,
					"baseLayerMD5": "8682ca885284e03da37245e0014850d1.png",
					"bitmapResolution": 2,
					"rotationCenterX": -4,
					"rotationCenterY": 26
				},
				{
					"costumeName": "Wooden_Sink",
					"baseLayerID": 259,
					"baseLayerMD5": "b526d81c852f83cb24d7a8682ef03314.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 30
				},
				{
					"costumeName": "Glass_Platform",
					"baseLayerID": 260,
					"baseLayerMD5": "1e07f6e86d2ad1762d99a3bb59aa1c2c.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "SquirrelW",
					"baseLayerID": 261,
					"baseLayerMD5": "67e7b45ae0c7a204f8c5931e07e18531.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 30
				},
				{
					"costumeName": "Mouse",
					"baseLayerID": 262,
					"baseLayerMD5": "8a97182e24416328506400690692652a.png",
					"bitmapResolution": 2,
					"rotationCenterX": -6,
					"rotationCenterY": 26
				},
				{
					"costumeName": "FireflyB",
					"baseLayerID": 263,
					"baseLayerMD5": "d145c18072a7cf1062ebc5e2a168832e.png",
					"bitmapResolution": 2,
					"rotationCenterX": -6,
					"rotationCenterY": 26
				},
				{
					"costumeName": "Fiery_Greatsword",
					"baseLayerID": 264,
					"baseLayerMD5": "b99934f3e3f92b5bb539358cddd2fa72.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 1,
					"rotationCenterY": 17
				},
				{
					"costumeName": "glass_bed",
					"baseLayerID": 265,
					"baseLayerMD5": "5452c8599b96b5c764804b7a5ff47a6f.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 26
				},
				{
					"costumeName": "Placed_Beds",
					"baseLayerID": 266,
					"baseLayerMD5": "be930f96fe9130f17969c9828312eb33.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 24
				},
				{
					"costumeName": "Placed_Beds3",
					"baseLayerID": 267,
					"baseLayerMD5": "763397d74c957e248bcb4d9911d39b31.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 22
				},
				{
					"costumeName": "bed_obsidian",
					"baseLayerID": 268,
					"baseLayerMD5": "be63831e2183055ac65c80689773a1b7.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 28
				},
				{
					"costumeName": "Placed_Beds2",
					"baseLayerID": 269,
					"baseLayerMD5": "adf4fb8ed54dc34064bf10df2943367e.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 34
				},
				{
					"costumeName": "Placed_Beds4",
					"baseLayerID": 270,
					"baseLayerMD5": "8304c57f23fe80eba09799627c83c0e2.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 30
				},
				{
					"costumeName": "gold_bed",
					"baseLayerID": 271,
					"baseLayerMD5": "4c4d0ce324af6d44397fcd742b86f781.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 0,
					"rotationCenterY": 13
				},
				{
					"costumeName": "Placed_Beds5",
					"baseLayerID": 272,
					"baseLayerMD5": "397638d8747152125602a89bb2d8afae.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "Placed_Beds6",
					"baseLayerID": 273,
					"baseLayerMD5": "c2ebfd58a017ecc996e4b1d9a8bfcda1.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "Mushroom_Bed",
					"baseLayerID": 274,
					"baseLayerMD5": "0a11e04427a014d82f1d4c391fc1f561.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 26
				},
				{
					"costumeName": "Placed_Beds7",
					"baseLayerID": 275,
					"baseLayerMD5": "32d33e8c42843a16e6039fddcd2e3f26.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "Placed_Beds8",
					"baseLayerID": 276,
					"baseLayerMD5": "cad0c9a3af2668b3f2bb5844b447e66b.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 22
				},
				{
					"costumeName": "Wooden_Crate",
					"baseLayerID": 277,
					"baseLayerMD5": "47136392c8ce2e8f63cafb524e540e08.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "Iron_Crate",
					"baseLayerID": 278,
					"baseLayerMD5": "38939150955d78469c151c18231243a3.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "mushroom_t",
					"baseLayerID": 279,
					"baseLayerMD5": "515a6eb940e386a4493f2dbeef73e5d3.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "mushroom",
					"baseLayerID": 280,
					"baseLayerMD5": "84038069bae3faadcdadbf931f4fbd30.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "table4",
					"baseLayerID": 281,
					"baseLayerMD5": "f6e763d3c84f6bc5027976a56eaf2cc5.png",
					"bitmapResolution": 2,
					"rotationCenterX": -2,
					"rotationCenterY": 32
				},
				{
					"costumeName": "table2",
					"baseLayerID": 282,
					"baseLayerMD5": "d6edf356ba9495284820447ccf58981c.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "Iron_Table(2)",
					"baseLayerID": 283,
					"baseLayerMD5": "597f21627570d353f713b23761e4a562.png",
					"bitmapResolution": 2,
					"rotationCenterX": -2,
					"rotationCenterY": 26
				},
				{
					"costumeName": "Iron_Table",
					"baseLayerID": 284,
					"baseLayerMD5": "ca6ff9e684336579036576d2584711c5.png",
					"bitmapResolution": 2,
					"rotationCenterX": -2,
					"rotationCenterY": 32
				},
				{
					"costumeName": "Iron_Table2",
					"baseLayerID": 285,
					"baseLayerMD5": "cff934007326c033e385aa466e5b0abb.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "Obsidian_Table (1)",
					"baseLayerID": 286,
					"baseLayerMD5": "530f6150ebfd7e6e63f63f1b4beaa09f.png",
					"bitmapResolution": 2,
					"rotationCenterX": -2,
					"rotationCenterY": 26
				},
				{
					"costumeName": "Obsidian_Table",
					"baseLayerID": 287,
					"baseLayerMD5": "3ede712232c337ad19567c24ec5e357f.png",
					"bitmapResolution": 2,
					"rotationCenterX": -2,
					"rotationCenterY": 32
				},
				{
					"costumeName": "Obsidian_Table2",
					"baseLayerID": 288,
					"baseLayerMD5": "24750b2f3fe99a3c84ba9b5fdbb1e2ed.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "Mushroom_Table (1)",
					"baseLayerID": 289,
					"baseLayerMD5": "a38efa831215d00e579548480c3b77b6.png",
					"bitmapResolution": 2,
					"rotationCenterX": -2,
					"rotationCenterY": 26
				},
				{
					"costumeName": "Mushroom_Table",
					"baseLayerID": 290,
					"baseLayerMD5": "1f38015084fcf554da103e7628a8579b.png",
					"bitmapResolution": 2,
					"rotationCenterX": -4,
					"rotationCenterY": 34
				},
				{
					"costumeName": "Mushroom_Table2",
					"baseLayerID": 291,
					"baseLayerMD5": "f94dfbbe048416aa8e5257e3f2ae56b0.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 34
				},
				{
					"costumeName": "Glass_Table2",
					"baseLayerID": 292,
					"baseLayerMD5": "f3ca157856434654de61be08585c5cfc.png",
					"bitmapResolution": 2,
					"rotationCenterX": -2,
					"rotationCenterY": 32
				},
				{
					"costumeName": "Glass_Table3",
					"baseLayerID": 293,
					"baseLayerMD5": "011dba80ca5e4a932f4aa34f17e9c186.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "Vases2",
					"baseLayerID": 294,
					"baseLayerMD5": "757ca1ff61e3842186ea0c6fe15e6c98.png",
					"bitmapResolution": 2,
					"rotationCenterX": 2,
					"rotationCenterY": 46
				},
				{
					"costumeName": "Vases",
					"baseLayerID": 295,
					"baseLayerMD5": "0aa71c02423a0429c261fa124905bc6f.png",
					"bitmapResolution": 2,
					"rotationCenterX": -2,
					"rotationCenterY": 46
				},
				{
					"costumeName": "Vases3",
					"baseLayerID": 296,
					"baseLayerMD5": "1e2b1b86856e0a333ac187085bc24860.png",
					"bitmapResolution": 2,
					"rotationCenterX": 1,
					"rotationCenterY": 46
				},
				{
					"costumeName": "Vases4",
					"baseLayerID": 297,
					"baseLayerMD5": "89cf45c082aabc54e28ebcf2733e2e91.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 44
				},
				{
					"costumeName": "Suspicious_Looking_Eye",
					"baseLayerID": 298,
					"baseLayerMD5": "660b339de479e055f756c5eeb7d89fa1.png",
					"bitmapResolution": 2,
					"rotationCenterX": -2,
					"rotationCenterY": 26
				},
				{
					"costumeName": "Demon_Altar",
					"baseLayerID": 299,
					"baseLayerMD5": "19ddf3ea1fead7d5da86b97c96df16a7.png",
					"bitmapResolution": 2,
					"rotationCenterX": 8,
					"rotationCenterY": 34
				},
				{
					"costumeName": "Demonite_ore",
					"baseLayerID": 300,
					"baseLayerMD5": "2f978d6428d6ac73764ad25a2973cae6.png",
					"bitmapResolution": 2,
					"rotationCenterX": -8,
					"rotationCenterY": 24
				},
				{
					"costumeName": "Demonite",
					"baseLayerID": 301,
					"baseLayerMD5": "3e4326f9eb0ebb7024bbcb8f3d2c00f3.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 32
				},
				{
					"costumeName": "Demonite_Bar",
					"baseLayerID": 302,
					"baseLayerMD5": "70e53f0941657e69b955bde3459f6f99.png",
					"bitmapResolution": 2,
					"rotationCenterX": -2,
					"rotationCenterY": 28
				},
				{
					"costumeName": "Light's_Bane",
					"baseLayerID": 303,
					"baseLayerMD5": "ed698138aafe3b5a481b1561e8d4563b.png",
					"bitmapResolution": 2,
					"rotationCenterX": 3,
					"rotationCenterY": 34
				},
				{
					"costumeName": "Eye_of_Cthulhu_Mask",
					"baseLayerID": 304,
					"baseLayerMD5": "06a5d27fddeeeeafb6aa3b532422250a.png",
					"bitmapResolution": 2,
					"rotationCenterX": -2,
					"rotationCenterY": 26
				},
				{
					"costumeName": "Santa",
					"baseLayerID": 305,
					"baseLayerMD5": "b026c0ada4b154fc0b599048540bf810.png",
					"bitmapResolution": 2,
					"rotationCenterX": -4,
					"rotationCenterY": 32
				},
				{
					"costumeName": "BIG",
					"baseLayerID": 306,
					"baseLayerMD5": "79a3bf486f7a7099fd2758fc0a2b8707.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 231,
					"rotationCenterY": 174
				}],
			"currentCostumeIndex": 0,
			"scratchX": 32,
			"scratchY": 124,
			"scale": 2.53,
			"direction": 90,
			"rotationStyle": "none",
			"isDraggable": false,
			"indexInLibrary": 2,
			"visible": false,
			"spriteInfo": {
			}
		},
		{
			"objName": "NPC",
			"variables": [{
					"name": "x",
					"value": 156.8874999999997,
					"isPersistent": false
				},
				{
					"name": "y",
					"value": 119.3719725,
					"isPersistent": false
				},
				{
					"name": "ID",
					"value": "0",
					"isPersistent": false
				},
				{
					"name": "player ID",
					"value": "0",
					"isPersistent": false
				},
				{
					"name": "lastX",
					"value": "",
					"isPersistent": false
				},
				{
					"name": "Action",
					"value": 0,
					"isPersistent": false
				},
				{
					"name": "sx",
					"value": 0.1125,
					"isPersistent": false
				},
				{
					"name": "sy",
					"value": 0.04042249999999995,
					"isPersistent": false
				},
				{
					"name": "Time",
					"value": 0,
					"isPersistent": false
				},
				{
					"name": "onfloor",
					"value": 8,
					"isPersistent": false
				},
				{
					"name": "Tile Index",
					"value": 41807,
					"isPersistent": false
				},
				{
					"name": "Tile Is Solid",
					"value": "0",
					"isPersistent": false
				},
				{
					"name": "Typ",
					"value": "0",
					"isPersistent": false
				},
				{
					"name": "?Val",
					"value": "m866 k",
					"isPersistent": false
				},
				{
					"name": "char",
					"value": "",
					"isPersistent": false
				},
				{
					"name": "i3",
					"value": 9,
					"isPersistent": false
				},
				{
					"name": "idx",
					"value": 32,
					"isPersistent": false
				},
				{
					"name": "tx",
					"value": 163.19999999999936,
					"isPersistent": false
				},
				{
					"name": "ty",
					"value": 0,
					"isPersistent": false
				},
				{
					"name": "health",
					"value": 0,
					"isPersistent": false
				},
				{
					"name": "hit wait",
					"value": 0,
					"isPersistent": false
				},
				{
					"name": "OwnerDist",
					"value": 0,
					"isPersistent": false
				},
				{
					"name": "t",
					"value": 89.87406971259918,
					"isPersistent": false
				},
				{
					"name": "Aggressive",
					"value": "-1",
					"isPersistent": false
				},
				{
					"name": "class",
					"value": 1,
					"isPersistent": false
				},
				{
					"name": "base",
					"value": 1,
					"isPersistent": false
				},
				{
					"name": "walkSpeed",
					"value": 1,
					"isPersistent": false
				},
				{
					"name": "szx",
					"value": 0.5185185185185185,
					"isPersistent": false
				},
				{
					"name": "szy",
					"value": 0.48148148148148145,
					"isPersistent": false
				}],
			"scripts": [[1549.3,
					1378.4,
					[["procDef", "Parse Instructions %s last ID %n", ["txt", "lastID"], ["", 1], true],
						["doIf",
							[">", ["readVariable", "health"], "-900"],
							[["setVar:to:", "?Val", ["getParam", "txt", "r"]],
								["setVar:to:", "i3", "2"],
								["call", "Next Token of ?Val"],
								["setVar:to:", "ID", ["readVariable", "char"]],
								["call", "Next Token of ?Val"],
								["call",
									"Spawn %s %b %n",
									["readVariable", "char"],
									["=", ["getParam", "lastID", "r"], ["readVariable", "ID"]],
									["getParam", "lastID", "r"]],
								["setVar:to:", "Time", "0"]]]]],
				[1554.6,
					1696.1,
					[["procDef", "Spawn %s %b %n", ["cmd", "existing", "lastID"], ["", false, 1], true],
						["doIf",
							["&",
								["not", ["getParam", "existing", "b"]],
								[">", ["getParam", "lastID", "r"], "0"]],
							[["call", "Change Mob Count %n", -1]]],
						["call", "Next Token of ?Val"],
						["doIfElse",
							["=", ["getParam", "cmd", "r"], "k"],
							[["call", "Reg Kill %b", ["not", false]]],
							[["setVar:to:", "player ID", ["readVariable", "char"]],
								["doIfElse",
									["|",
										["=", ["getParam", "cmd", "r"], "s"],
										["=", ["getParam", "cmd", "r"], "w"]],
									[["call", "Next Token of ?Val"],
										["doIf",
											["&",
												["getParam", "existing", "b"],
												["not", ["=", ["readVariable", "Typ"], ["readVariable", "char"]]]],
											[["call", "Change Mob Count %n", -1],
												["setVar:to:", "Typ", ["readVariable", "char"]],
												["call", "Init New Type %b", false],
												["call", "Change Mob Count %n", 1]]],
										["setVar:to:", "Typ", ["readVariable", "char"]],
										["call", "Next Token of ?Val"],
										["setVar:to:", "x", ["\/", ["readVariable", "char"], 10]],
										["call", "Next Token of ?Val"],
										["setVar:to:", "y", ["\/", ["readVariable", "char"], 10]],
										["call", "Next Token of ?Val"],
										["setVar:to:", "OwnerDist", ["readVariable", "char"]],
										["doIfElse",
											["=", ["readVariable", "class"], "4"],
											[["call", "Next Token of ?Val"],
												["setVar:to:", "sx", ["\/", ["readVariable", "char"], 10]],
												["call", "Next Token of ?Val"],
												["setVar:to:", "sy", ["\/", ["readVariable", "char"], 10]]],
											[["doIfElse",
													["=", ["getParam", "cmd", "r"], "s"],
													[["call", "Next Token of ?Val"],
														["doIfElse",
															["=", ["readVariable", "char"], ""],
															[["doIfElse",
																	[">", ["readVariable", "x"], ["getAttribute:of:", "x", "Player"]],
																	[["heading:", -90]],
																	[["heading:", 90]]]],
															[["heading:", ["*", ["readVariable", "char"], 90]]]]],
													null]]]],
									null],
								["doIf",
									["not", ["getParam", "existing", "b"]],
									[["call", "Init New Type %b", ["not", false]], ["call", "Change Mob Count %n", 1]]]]]]],
				[1549.4,
					330,
					[["procDef", "Pick Up Block %n %n", ["typ", "count"], [1, 1], true],
						["call", "Find Slot Typ %n %b", ["getParam", "typ", "r"], false],
						["doIfElse",
							[">", ["readVariable", "i3"], "0"],
							[["setLine:ofList:to:",
									["*", ["readVariable", "i3"], 2],
									"_inv",
									["+",
										["getLine:ofList:", ["*", ["readVariable", "i3"], 2], "_inv"],
										["getParam", "count", "r"]]],
								["call", "Pickup Message, item %n count %n", ["getParam", "typ", "r"], ["getParam", "count", "r"]],
								["setVar:to:", "inv_change", "2"]],
							[["call", "Pickup Message, item %n count %n", -1, 0]]]]],
				[1550.3,
					36.35,
					[["procDef", "Next Token of ?Val", [], [], true],
						["setVar:to:", "char", ""],
						["doUntil",
							["|",
								[">", ["readVariable", "i3"], ["stringLength:", ["readVariable", "?Val"]]],
								["=", ["letter:of:", ["readVariable", "i3"], ["readVariable", "?Val"]], " "]],
							[["setVar:to:",
									"char",
									["concatenate:with:", ["readVariable", "char"], ["letter:of:", ["readVariable", "i3"], ["readVariable", "?Val"]]]],
								["changeVar:by:", "i3", 1]]],
						["changeVar:by:", "i3", 1]]],
				[821.4,
					480.8,
					[["procDef", "Draw %n %n", ["x", "y"], [1, 1], true],
						["gotoX:y:", ["getParam", "x", "r"], ["getParam", "y", "r"]],
						["doIfElse",
							["&",
								["=", ["getParam", "x", "r"], ["xpos"]],
								["=", ["getParam", "y", "r"], ["ypos"]]],
							[["doIfElse",
									["<", ["readVariable", "class"], "5"],
									[["doIfElse",
											["<", ["readVariable", "class"], "4"],
											[["doIfElse",
													["=", ["readVariable", "class"], "1"],
													[["doIfElse",
															["<", ["readVariable", "onfloor"], "3"],
															[["lookLike:", ["readVariable", "base"]]],
															[["doIfElse",
																	[">", ["readVariable", "sy"], "0"],
																	[["lookLike:", ["+", ["readVariable", "base"], 1]]],
																	[["lookLike:", ["+", ["readVariable", "base"], 2]]]]]]],
													[["doIfElse",
															["<", ["readVariable", "onfloor"], "3"],
															[["doIfElse",
																	[">", ["+", ["timer"], 0.5], ["readVariable", "Time"]],
																	[["lookLike:",
																			["+",
																				["readVariable", "base"],
																				["%", ["computeFunction:of:", "floor", ["*", ["timer"], 15]], 2]]]],
																	[["lookLike:",
																			["+",
																				["readVariable", "base"],
																				["%", ["computeFunction:of:", "floor", ["*", ["timer"], 5]], 2]]]]]],
															[["lookLike:", ["+", ["readVariable", "base"], 1]]]]]]],
											[["doIfElse",
													["|", ["=", ["readVariable", "Typ"], "5"], ["=", ["readVariable", "Typ"], "24"]],
													[["lookLike:", ["readVariable", "base"]]],
													[["lookLike:",
															["+",
																["readVariable", "base"],
																["computeFunction:of:",
																	"abs",
																	["-", ["%", ["computeFunction:of:", "floor", ["*", ["timer"], 10]], 4], 1]]]]]]]]],
									[["doIfElse",
											["<", ["readVariable", "class"], "7"],
											[["doIfElse",
													["=", ["readVariable", "class"], "5"],
													[["doIfElse",
															[">", ["readVariable", "onfloor"], "0"],
															[["lookLike:", ["+", ["readVariable", "base"], 2]]],
															[["lookLike:",
																	["+",
																		["readVariable", "base"],
																		["computeFunction:of:",
																			"abs",
																			["-",
																				["%", ["computeFunction:of:", "floor", ["\/", ["readVariable", "onfloor"], 6]], 4],
																				1]]]]]]],
													[["doIfElse",
															["=", ["readVariable", "class"], "5.5"],
															[["doIfElse",
																	["=", ["readVariable", "sx"], "0"],
																	[["lookLike:", ["+", ["readVariable", "base"], 4]]],
																	[["doIfElse",
																			[">", ["readVariable", "onfloor"], "0"],
																			[["lookLike:", ["+", ["readVariable", "base"], 2]]],
																			[["lookLike:",
																					["+",
																						["readVariable", "base"],
																						["%", ["computeFunction:of:", "floor", ["\/", ["readVariable", "onfloor"], -2]], 4]]]]]]]],
															[["doIfElse",
																	["=", ["readVariable", "Typ"], "17"],
																	[["lookLike:",
																			["+",
																				["readVariable", "base"],
																				["%", ["computeFunction:of:", "floor", ["\/", ["readVariable", "onfloor"], 6]], 4]]]],
																	[["lookLike:",
																			["+",
																				["readVariable", "base"],
																				["computeFunction:of:",
																					"abs",
																					["-",
																						["%", ["computeFunction:of:", "floor", ["\/", ["readVariable", "onfloor"], 6]], 4],
																						1]]]]]],
																["doIfElse",
																	["=", ["readVariable", "Typ"], "9"],
																	[["changeYposBy:", ["*", 8, ["computeFunction:of:", "sin", ["*", ["readVariable", "onfloor"], 3]]]]],
																	[["changeYposBy:", ["*", 4, ["computeFunction:of:", "sin", ["*", ["readVariable", "onfloor"], 4]]]]]]]]]]],
											[["lookLike:", ["readVariable", "base"]]]]]],
								["show"]],
							[["hide"]]]]],
				[75, 19, [["whenIReceive", "Clone Sprites"], ["call", "init"]]],
				[2397.95,
					382.4,
					[["procDef", "Reg Kill %b", ["dontSend"], [false], true],
						["doIf", [">", ["readVariable", "Aggressive"], "9"], [["think:", ""]]],
						["doIf",
							["not", ["getParam", "dontSend", "b"]],
							[["append:toList:", "0", "@Place"],
								["append:toList:", ["concatenate:with:", "m", ["concatenate:with:", ["readVariable", "ID"], " k"]], "@Place"]]],
						["setVar:to:", "health", "-1000"],
						["setVar:to:", "hit wait", "0"]]],
				[2397.6,
					38.4,
					[["procDef", "Change Mob Count %n", ["amount"], [1], true],
						["doIf",
							[">", ["readVariable", "Aggressive"], "-1"],
							[["doIfElse",
									[">", ["readVariable", "Aggressive"], "0"],
									[["setLine:ofList:to:", 21, "_Chat", ["+", ["getLine:ofList:", 21, "_Chat"], ["getParam", "amount", "r"]]]],
									[["setLine:ofList:to:", 20, "_Chat", ["+", ["getLine:ofList:", 20, "_Chat"], ["getParam", "amount", "r"]]]]],
								["doIf", ["<", ["getParam", "amount", "r"], "0"], [["setVar:to:", "Aggressive", "-1"]]]]]]],
				[2414.4,
					1685,
					[["procDef", "Hop (decide moves) %b", ["hidden?"], [false], true],
						["call", "Claim or Despawn Mob %b", ["getParam", "hidden?", "b"]],
						["doIfElse",
							["=",
								["<", ["readVariable", "x"], ["readVariable", "tx"]],
								[">", ["heading"], "0"]],
							[["call",
									"Check Tile at x: %n y: %n",
									["+", ["readVariable", "x"], ["\/", ["heading"], 90]],
									["readVariable", "y"]],
								["doIfElse",
									[">", ["readVariable", "Typ"], "2"],
									[["call", "Set Walk Speed %n", ["\/", ["heading"], 500]], ["setVar:to:", "sy", "0.6"]],
									[["doIfElse",
											["&", ["=", ["readVariable", "Tile Is Solid"], "3.25"], ["=", ["readVariable", "Typ"], "1"]],
											[["turnRight:", 180],
												["setVar:to:", "tx", ["-", ["*", ["readVariable", "x"], 2], ["readVariable", "tx"]]]],
											[["doIfElse",
													[">", ["readVariable", "Tile Is Solid"], "7.75"],
													[["call",
															"Check Tile at x: %n y: %n",
															["+", ["readVariable", "x"], ["\/", ["heading"], 90]],
															["+", ["readVariable", "y"], 1]],
														["doIfElse",
															[">", ["readVariable", "Tile Is Solid"], "7.75"],
															[["call",
																	"Check Tile at x: %n y: %n",
																	["+", ["readVariable", "x"], ["\/", ["heading"], 90]],
																	["+", ["readVariable", "y"], 2]],
																["doIfElse",
																	[">", ["readVariable", "Tile Is Solid"], "7.75"],
																	[["turnRight:", 180],
																		["setVar:to:", "tx", ["-", ["*", ["readVariable", "x"], 2], ["readVariable", "tx"]]],
																		["call", "Check Tile at x: %n y: %n", ["readVariable", "x"], ["+", ["readVariable", "y"], 0.1]],
																		["doIf",
																			["|",
																				[">", ["readVariable", "Tile Is Solid"], "7.75"],
																				["|",
																					["<", ["readVariable", "x"], "0"],
																					["not", ["<", ["readVariable", "x"], ["readVariable", "MAP_WIDTH"]]]]],
																			[["call", "Reg Kill %b", ["not", ["=", ["getAttribute:of:", "@Player ID", "Multiplayer"], ["readVariable", "player ID"]]]]]],
																		["doIf",
																			["&", ["=", ["readVariable", "class"], "3"], ["=", ["readVariable", "Aggressive"], "1"]],
																			[["setVar:to:", "class", "2"], ["changeVar:by:", "Typ", -1]]]],
																	[["setVar:to:", "sx", ["\/", ["heading"], 900]],
																		["setVar:to:", "onfloor", "5"],
																		["setVar:to:", "sy", "0.7"]]]],
															[["setVar:to:", "sx", ["\/", ["heading"], 600]],
																["setVar:to:", "onfloor", "5"],
																["setVar:to:", "sy", "0.5"]]]],
													[["call",
															"Check Tile at x: %n y: %n",
															["+", ["readVariable", "x"], ["\/", ["heading"], 90]],
															["-", ["readVariable", "y"], 1]],
														["doIf",
															["<", ["readVariable", "Tile Is Solid"], "7"],
															[["call",
																	"Check Tile at x: %n y: %n",
																	["+", ["readVariable", "x"], ["\/", ["heading"], 90]],
																	["-", ["readVariable", "y"], 3]]]],
														["doIfElse",
															["<", ["readVariable", "Tile Is Solid"], "7"],
															[["call",
																	"Check Tile at x: %n y: %n",
																	["+", ["readVariable", "x"], ["\/", ["heading"], 45]],
																	["-", ["readVariable", "y"], 2]],
																["doIfElse",
																	["<", ["readVariable", "Tile Is Solid"], "7"],
																	[["call", "Set Walk Speed %n", ["\/", ["heading"], 800]],
																		["setVar:to:", "onfloor", "5"],
																		["setVar:to:", "sy", "0.3"]],
																	[["call", "Set Walk Speed %n", ["\/", ["heading"], 500]],
																		["setVar:to:", "onfloor", "5"],
																		["setVar:to:", "sy", "0.6"]]]],
															[["doIfElse",
																	["=", ["readVariable", "Typ"], "1"],
																	[["call", "Set Walk Speed %n", ["\/", ["heading"], 800]],
																		["setVar:to:", "onfloor", "5"],
																		["setVar:to:", "sy", "0.3"]],
																	[["doIfElse",
																			["=", ["readVariable", "Typ"], "2"],
																			[["doIfElse",
																					[">", ["computeFunction:of:", "abs", ["-", ["readVariable", "x"], ["readVariable", "tx"]]], "2"],
																					[["call", "Set Walk Speed %n", ["\/", ["heading"], 300]], ["setVar:to:", "sy", "0.5"]],
																					[["call", "Set Walk Speed %n", ["\/", ["heading"], 800]], ["setVar:to:", "sy", "0.3"]]],
																				["setVar:to:", "onfloor", "5"]],
																			null]]]]]]]]]]]],
							[["doIf",
									["not", ["=", ["readVariable", "x"], ["readVariable", "tx"]]],
									[["turnRight:", 180]]],
								["call", "Check Tile at x: %n y: %n", ["readVariable", "x"], ["+", ["readVariable", "y"], 0.1]],
								["doIf",
									["|",
										[">", ["readVariable", "Tile Is Solid"], "7.75"],
										["|",
											["<", ["readVariable", "x"], "0"],
											["not", ["<", ["readVariable", "x"], ["readVariable", "MAP_WIDTH"]]]]],
									[["call", "Reg Kill %b", ["not", ["=", ["getAttribute:of:", "@Player ID", "Multiplayer"], ["readVariable", "player ID"]]]]]]]]]],
				[3361.55,
					69.75,
					[["procDef",
							"init for type %n c#: %n hp: %n agr: %n cls: %n spd: %n siz: %n %n",
							["type", "base", "health", "aggr", "clas", "spd", "sx", "sy"],
							[1, 1, 1, 1, 1, 1, 1, 1],
							true],
						["doIf",
							["=", ["readVariable", "Typ"], ["getParam", "type", "r"]],
							[["setVar:to:", "class", ["+", ["getParam", "clas", "r"], 0]],
								["setVar:to:", "base", ["+", ["getParam", "base", "r"], 0]],
								["setVar:to:", "health", ["+", ["getParam", "health", "r"], 0]],
								["setVar:to:", "Aggressive", ["+", ["getParam", "aggr", "r"], 0]],
								["setVar:to:", "walkSpeed", ["+", ["getParam", "spd", "r"], 0]],
								["setVar:to:", "szx", ["\/", ["getParam", "sx", "r"], 27]],
								["setVar:to:", "szy", ["\/", ["getParam", "sy", "r"], 27]]]]]],
				[3362.15,
					437.25,
					[["procDef", "Set Angle Same Dir %n", ["angle"], [1], true],
						["doIfElse",
							["<", ["heading"], "0"],
							[["heading:", ["-", 0, ["getParam", "angle", "r"]]]],
							[["heading:", ["getParam", "angle", "r"]]]]]],
				[3363,
					667.4,
					[["procDef", "Init New Type %b", ["is spawn"], [false], true],
						["doIfElse",
							["<", ["readVariable", "Typ"], "17"],
							[["doIfElse",
									["<", ["readVariable", "Typ"], "9"],
									[["doIfElse",
											["<", ["readVariable", "Typ"], "5"],
											[["call", "init for type %n c#: %n hp: %n agr: %n cls: %n spd: %n siz: %n %n", 1, 1, 5, 0, 1, 1, 14, 13],
												["call", "init for type %n c#: %n hp: %n agr: %n cls: %n spd: %n siz: %n %n", 2, 4, 5, 0, 1, 1, 9, 8],
												["call", "init for type %n c#: %n hp: %n agr: %n cls: %n spd: %n siz: %n %n", 3, 7, 16, 1, 2, 1, 15, 11],
												["call", "init for type %n c#: %n hp: %n agr: %n cls: %n spd: %n siz: %n %n", 4, 7, 16, 1, 3, 1, 15, 11]],
											[["call", "init for type %n c#: %n hp: %n agr: %n cls: %n spd: %n siz: %n %n", 5, 9, 30, 1, 4, 1, 12, 12],
												["call", "init for type %n c#: %n hp: %n agr: %n cls: %n spd: %n siz: %n %n", 6, 10, 40, 1, 5, 0.14, 17, 25],
												["call", "init for type %n c#: %n hp: %n agr: %n cls: %n spd: %n siz: %n %n", 7, 13, 10, 0.5, 5, 0.05, 16, 13],
												["call", "init for type %n c#: %n hp: %n agr: %n cls: %n spd: %n siz: %n %n", 8, 16, 5, 0, 6, 0.2, 12, 11]]]],
									[["doIfElse",
											["<", ["readVariable", "Typ"], "13"],
											[["call", "init for type %n c#: %n hp: %n agr: %n cls: %n spd: %n siz: %n %n", 9, 19, 40, 1, 6, 0.5, 13, 13],
												["call", "init for type %n c#: %n hp: %n agr: %n cls: %n spd: %n siz: %n %n", 10, 33, 30, 1, 2, 1, 15, 11],
												["call", "init for type %n c#: %n hp: %n agr: %n cls: %n spd: %n siz: %n %n", 11, 33, 30, 1, 3, 1, 15, 11],
												["call", "init for type %n c#: %n hp: %n agr: %n cls: %n spd: %n siz: %n %n", 12, 41, 25, 1, 2, 1, 19, 12]],
											[["call", "init for type %n c#: %n hp: %n agr: %n cls: %n spd: %n siz: %n %n", 13, 41, 25, 1, 3, 1, 19, 12],
												["call", "init for type %n c#: %n hp: %n agr: %n cls: %n spd: %n siz: %n %n", 14, 35, 150, 1.5, 3, 0.6, 21, 15],
												["call", "init for type %n c#: %n hp: %n agr: %n cls: %n spd: %n siz: %n %n", 15, 46, 80, 1.5, 3, 1, 15, 11],
												["call", "init for type %n c#: %n hp: %n agr: %n cls: %n spd: %n siz: %n %n", 16, 30, 55, 1, 6, 0.35, 13, 11]]]]]],
							[["doIfElse",
									["<", ["readVariable", "Typ"], "21"],
									[["call", "init for type %n c#: %n hp: %n agr: %n cls: %n spd: %n siz: %n %n", 17, 37, 200, 1, 6, 0.6, 56, 20],
										["call", "init for type %n c#: %n hp: %n agr: %n cls: %n spd: %n siz: %n %n", 18, 23, 40, 1, 4, 1.5, 13, 8],
										["call", "init for type %n c#: %n hp: %n agr: %n cls: %n spd: %n siz: %n %n", 19, 43, 120, 1, 4, 1.5, 14, 12],
										["call", "init for type %n c#: %n hp: %n agr: %n cls: %n spd: %n siz: %n %n", 20, 48, 1, 0, 4, 1.5, 9, 8]],
									[["call", "init for type %n c#: %n hp: %n agr: %n cls: %n spd: %n siz: %n %n", 21, 51, 8, 0, 5.5, 0.6, 16, 13],
										["call", "init for type %n c#: %n hp: %n agr: %n cls: %n spd: %n siz: %n %n", 22, 56, 3, 0, 5.5, 0.8, 7, 6],
										["call", "init for type %n c#: %n hp: %n agr: %n cls: %n spd: %n siz: %n %n", 23, 61, 1, 0, 4, 0.2, 4, 4],
										["call", "init for type %n c#: %n hp: %n agr: %n cls: %n spd: %n siz: %n %n", 24, 64, 2000, 10, 4, 1, 50, 50]]]]],
						["doIf",
							["getParam", "is spawn", "b"],
							[["setVar:to:", "hit wait", "0"],
								["doIfElse",
									["=", ["readVariable", "class"], "4"],
									[["doIfElse",
											["|", ["=", ["readVariable", "Typ"], "5"], ["=", ["readVariable", "Typ"], "24"]],
											[["setRotationStyle", "all around"]],
											[["setRotationStyle", "left-right"]]],
										["call", "Set Angle Same Dir %n", 90]],
									[["setVar:to:", "ty", 0],
										["setVar:to:", "sx", "0"],
										["setVar:to:", "sy", "0"],
										["doIfElse",
											["=", ["readVariable", "Typ"], "9"],
											[["setRotationStyle", "all around"],
												["call", "Set Angle Same Dir %n", 25],
												["call", "Set Walk Speed %n", ["\/", ["heading"], 500]]],
											[["setRotationStyle", "left-right"],
												["call", "Set Angle Same Dir %n", 90],
												["call", "Set Walk Speed %n", ["\/", ["heading"], 500]]]]]],
								["setVar:to:", "Time", 0]]]]],
				[2397.45,
					819.4,
					[["procDef", "Check Projectiles", [], [], true],
						["call", "Next Token of ?Val"],
						["doIf",
							["<", ["computeFunction:of:", "abs", ["-", ["readVariable", "x"], ["readVariable", "char"]]], "1"],
							[["call", "Next Token of ?Val"],
								["doIf",
									["<",
										["computeFunction:of:", "abs", ["-", ["+", ["readVariable", "y"], 0.5], ["readVariable", "char"]]],
										"1.5"],
									[["call", "Next Token of ?Val"],
										["call", "Next Token of ?Val"],
										["call", "Next Token of ?Val"],
										["call", "Hit mob with tool %n", ["readVariable", "char"]]]]]]]],
				[77,
					689.6,
					[["whenIReceive", "animate"],
						["doIfElse",
							["<", ["readVariable", "health"], "-999"],
							[["changeVar:by:", "hit wait", ["getAttribute:of:", "_Tick", "Multiplayer"]],
								["doIf",
									[">", ["readVariable", "hit wait"], "300"],
									[["call", "Change Mob Count %n", -1],
										["setLine:ofList:to:", ["-", ["readVariable", "idx"], 1], "_Mob", "0"],
										["setLine:ofList:to:", ["readVariable", "idx"], "_Mob", ""],
										["setVar:to:", "ID", 0],
										["setVar:to:", "health", 0],
										["setVar:to:", "Aggressive", "-1"]]],
								["hide"]],
							[["doIf",
									["not", ["=", ["getLine:ofList:", ["readVariable", "idx"], "_Mob"], ""]],
									[["call", "Parse Instructions %s last ID %n", ["getLine:ofList:", ["readVariable", "idx"], "_Mob"], ["readVariable", "ID"]],
										["setLine:ofList:to:", ["readVariable", "idx"], "_Mob", ""]]],
								["doIfElse",
									[">", ["readVariable", "ID"], "0"],
									[["call",
											"Animate %b",
											["&",
												[">", ["getAttribute:of:", "Peaceful?", "Frame"], "0"],
												[">", ["readVariable", "Aggressive"], "0.99"]]]],
									[["hide"]]]]]]],
				[2410.6,
					1372,
					[["procDef", "Hit Away %n %n power %n %n", ["dx", "dy", "power", "lift"], [1, 1, 1, 1], true],
						["doIf",
							["<", ["readVariable", "Aggressive"], "10"],
							[["setVar:to:",
									"t",
									["\/",
										["computeFunction:of:",
											"sqrt",
											["+",
												["*", ["getParam", "dx", "r"], ["getParam", "dx", "r"]],
												["*", ["getParam", "dy", "r"], ["getParam", "dy", "r"]]]],
										["getParam", "power", "r"]]],
								["setVar:to:", "sx", ["\/", ["getParam", "dx", "r"], ["readVariable", "t"]]],
								["setVar:to:",
									"sy",
									["+",
										["\/", ["getParam", "dy", "r"], ["readVariable", "t"]],
										["getParam", "lift", "r"]]]]]]],
				[2408.6,
					4061.6,
					[["procDef", "Hit mob with tool %n", ["power"], [1], false],
						["changeVar:by:", "health", ["-", 0, ["getParam", "power", "r"]]],
						["doIfElse",
							["<", ["readVariable", "health"], "1"],
							[["call", "Reg Kill %b", false],
								["doIfElse",
									["|",
										["=", ["readVariable", "Typ"], "1"],
										["|", ["=", ["readVariable", "Typ"], "12"], ["=", ["readVariable", "Typ"], "13"]]],
									[["doIfElse",
											["=", ["readVariable", "Typ"], "1"],
											[["call", "Make Particle, typ: %n xy: %n %n", 34, ["readVariable", "x"], ["readVariable", "y"]]],
											[["call", "Make Particle, typ: %n xy: %n %n", 17, ["readVariable", "x"], ["readVariable", "y"]],
												["call", "Make Particle, typ: %n xy: %n %n", 18, ["readVariable", "x"], ["readVariable", "y"]],
												["call", "Make Particle, typ: %n xy: %n %n", 1050, ["readVariable", "x"], ["readVariable", "y"]]]]],
									[["doIfElse",
											["=", ["readVariable", "Typ"], "2"],
											[["call", "Make Particle, typ: %n xy: %n %n", 6, ["readVariable", "x"], ["readVariable", "y"]],
												["call", "Make Particle, typ: %n xy: %n %n", 7, ["readVariable", "x"], ["readVariable", "y"]]],
											[["doIfElse",
													["|", ["=", ["readVariable", "class"], "2"], ["=", ["readVariable", "class"], "3"]],
													[["call", "Pick Up Block %n %n", 139, ["randomFrom:to:", 1, 2]],
														["call", "Make Particle, typ: %n xy: %n %n", 6, ["readVariable", "x"], ["readVariable", "y"]],
														["call", "Make Particle, typ: %n xy: %n %n", 7, ["readVariable", "x"], ["readVariable", "y"]],
														["doIfElse",
															["|", ["=", ["readVariable", "Typ"], "3"], ["=", ["readVariable", "Typ"], "4"]],
															[["call", "Make Particle, typ: %n xy: %n %n", 1003, ["readVariable", "x"], ["readVariable", "y"]]],
															[["doIfElse",
																	["|", ["=", ["readVariable", "Typ"], "10"], ["=", ["readVariable", "Typ"], "11"]],
																	[["call", "Make Particle, typ: %n xy: %n %n", 1010, ["readVariable", "x"], ["readVariable", "y"]]],
																	[["doIfElse",
																			["=", ["readVariable", "Typ"], "14"],
																			[["call", "Make Particle, typ: %n xy: %n %n", 1150, ["readVariable", "x"], ["readVariable", "y"]]],
																			[["doIfElse",
																					["=", ["readVariable", "Typ"], "15"],
																					[["call", "Make Particle, typ: %n xy: %n %n", 1120, ["readVariable", "x"], ["readVariable", "y"]]],
																					null]]]]]]]],
													[["doIfElse",
															["=", ["readVariable", "Typ"], "5"],
															[["call", "Pick Up Block %n %n", 150, 1],
																["call", "Make Particle, typ: %n xy: %n %n", 14, ["readVariable", "x"], ["readVariable", "y"]],
																["call", "Make Particle, typ: %n xy: %n %n", 15, ["readVariable", "x"], ["readVariable", "y"]],
																["call", "Make Particle, typ: %n xy: %n %n", 1075, ["readVariable", "x"], ["readVariable", "y"]]],
															[["doIfElse",
																	["=", ["readVariable", "Typ"], "6"],
																	[["doIf",
																			["=", ["randomFrom:to:", 1, 5], "1"],
																			[["call", "Pick Up Block %n %n", 210, 1]]],
																		["call", "Make Particle, typ: %n xy: %n %n", 27, ["readVariable", "x"], ["readVariable", "y"]],
																		["call", "Make Particle, typ: %n xy: %n %n", 28, ["readVariable", "x"], ["readVariable", "y"]],
																		["call", "Make Particle, typ: %n xy: %n %n", 29, ["readVariable", "x"], ["readVariable", "y"]],
																		["call", "Make Particle, typ: %n xy: %n %n", 1060, ["readVariable", "x"], ["readVariable", "y"]]],
																	[["doIfElse",
																			["=", ["readVariable", "Typ"], "7"],
																			[["call", "Make Particle, typ: %n xy: %n %n", 23, ["readVariable", "x"], ["readVariable", "y"]],
																				["call", "Make Particle, typ: %n xy: %n %n", 24, ["readVariable", "x"], ["readVariable", "y"]],
																				["call", "Make Particle, typ: %n xy: %n %n", 1040, ["readVariable", "x"], ["readVariable", "y"]]],
																			[["doIfElse",
																					["=", ["readVariable", "Typ"], "8"],
																					[["call", "Make Particle, typ: %n xy: %n %n", 25, ["readVariable", "x"], ["readVariable", "y"]],
																						["call", "Make Particle, typ: %n xy: %n %n", 26, ["readVariable", "x"], ["readVariable", "y"]]],
																					[["doIfElse",
																							["=", ["readVariable", "Typ"], "9"],
																							[["call", "Make Particle, typ: %n xy: %n %n", 30, ["readVariable", "x"], ["readVariable", "y"]],
																								["call", "Make Particle, typ: %n xy: %n %n", 31, ["readVariable", "x"], ["readVariable", "y"]],
																								["call", "Make Particle, typ: %n xy: %n %n", 1075, ["readVariable", "x"], ["readVariable", "y"]]],
																							[["doIfElse",
																									["=", ["readVariable", "Typ"], "16"],
																									[["doIf",
																											["=", ["randomFrom:to:", 1, 5], "1"],
																											[["call", "Pick Up Block %n %n", 209, 1]]],
																										["call", "Make Particle, typ: %n xy: %n %n", 32, ["readVariable", "x"], ["readVariable", "y"]],
																										["call", "Make Particle, typ: %n xy: %n %n", 33, ["readVariable", "x"], ["readVariable", "y"]],
																										["call", "Make Particle, typ: %n xy: %n %n", 1050, ["readVariable", "x"], ["readVariable", "y"]]],
																									[["doIfElse",
																											["=", ["readVariable", "Typ"], "17"],
																											[["call", "Pick Up Block %n %n", 208, 1],
																												["call", "Make Particle, typ: %n xy: %n %n", 19, ["readVariable", "x"], ["readVariable", "y"]],
																												["call", "Make Particle, typ: %n xy: %n %n", 20, ["readVariable", "x"], ["readVariable", "y"]],
																												["call", "Make Particle, typ: %n xy: %n %n", 21, ["readVariable", "x"], ["readVariable", "y"]],
																												["call", "Make Particle, typ: %n xy: %n %n", 22, ["readVariable", "x"], ["readVariable", "y"]],
																												["call", "Make Particle, typ: %n xy: %n %n", 2004, ["readVariable", "x"], ["readVariable", "y"]]],
																											[["doIfElse",
																													["|", ["=", ["readVariable", "Typ"], "18"], ["=", ["readVariable", "Typ"], "19"]],
																													[["call", "Make Particle, typ: %n xy: %n %n", 16, ["readVariable", "x"], ["readVariable", "y"]],
																														["doIfElse",
																															["=", ["readVariable", "Typ"], "18"],
																															[["call", "Make Particle, typ: %n xy: %n %n", 1090, ["readVariable", "x"], ["readVariable", "y"]]],
																															[["call", "Make Particle, typ: %n xy: %n %n", 2002, ["readVariable", "x"], ["readVariable", "y"]]]]],
																													[["doIfElse",
																															["=", ["readVariable", "Typ"], "20"],
																															[["call", "Make Particle, typ: %n xy: %n %n", 8, ["readVariable", "x"], ["readVariable", "y"]],
																																["call", "Make Particle, typ: %n xy: %n %n", 9, ["readVariable", "x"], ["readVariable", "y"]]],
																															[["doIfElse",
																																	["=", ["readVariable", "Typ"], "21"],
																																	[["call", "Make Particle, typ: %n xy: %n %n", 35, ["readVariable", "x"], ["readVariable", "y"]]],
																																	[["doIfElse",
																																			["=", ["readVariable", "Typ"], "22"],
																																			[["call", "Make Particle, typ: %n xy: %n %n", 36, ["readVariable", "x"], ["readVariable", "y"]]],
																																			[["doIfElse",
																																					["=", ["readVariable", "Typ"], "24"],
																																					[["call", "Pick Up Block %n %n", 295, ["randomFrom:to:", 30, 87]],
																																						["call", "Pick Up Block %n %n", 299, 1],
																																						["call", "Make Particle, typ: %n xy: %n %n", 3003, ["readVariable", "x"], ["readVariable", "y"]],
																																						["call", "Make Particle, typ: %n xy: %n %n", 40, ["readVariable", "x"], ["readVariable", "y"]],
																																						["call", "Make Particle, typ: %n xy: %n %n", 40, ["readVariable", "x"], ["readVariable", "y"]],
																																						["call", "Make Particle, typ: %n xy: %n %n", 41, ["readVariable", "x"], ["readVariable", "y"]],
																																						["call", "Make Particle, typ: %n xy: %n %n", 41, ["readVariable", "x"], ["readVariable", "y"]]],
																																					null]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],
							[["doIfElse",
									["=", ["readVariable", "class"], "4"],
									[["doIfElse",
											["=", ["readVariable", "Typ"], "24"],
											[["think:", ["concatenate:with:", ["rounded", ["\/", ["readVariable", "health"], 20]], "%"]]],
											[["call",
													"Hit Away %n %n power %n %n",
													["-", ["readVariable", "x"], ["getAttribute:of:", "x", "Player"]],
													["-", ["readVariable", "y"], ["+", ["getAttribute:of:", "y", "Player"], 0.8]],
													0.2,
													0.05]]]],
									[["doIfElse",
											["=", ["readVariable", "class"], "6"],
											[["call",
													"Hit Away %n %n power %n %n",
													["-", ["readVariable", "x"], ["getAttribute:of:", "x", "Player"]],
													["-", ["readVariable", "y"], ["+", ["getAttribute:of:", "y", "Player"], 1]],
													0.15,
													0.01]],
											[["doIfElse",
													["|", ["=", ["readVariable", "class"], "2"], ["=", ["readVariable", "class"], "3"]],
													[["call",
															"Hit Away %n %n power %n %n",
															["-", ["readVariable", "x"], ["getAttribute:of:", "x", "Player"]],
															["-", ["readVariable", "y"], ["getAttribute:of:", "y", "Player"]],
															0.35,
															0.6]],
													[["call",
															"Hit Away %n %n power %n %n",
															["-", ["readVariable", "x"], ["getAttribute:of:", "x", "Player"]],
															["-", ["readVariable", "y"], ["getAttribute:of:", "y", "Player"]],
															0.2,
															0.4]]],
												["doIf",
													["&", ["=", ["readVariable", "Aggressive"], "1"], ["=", ["readVariable", "class"], "2"]],
													[["changeVar:by:", "Typ", 1], ["setVar:to:", "class", "3"]]]]]]],
								["setVar:to:", "hit wait", ["+", ["timer"], 0.2]],
								["setVar:to:", "onfloor", "5"]]]]],
				[1561.8,
					3206.2,
					[["procDef", "Send Update", [], [], true],
						["setVar:to:",
							"OwnerDist",
							["+",
								["computeFunction:of:", "abs", ["-", ["readVariable", "x"], ["getAttribute:of:", "x", "Player"]]],
								["*",
									["computeFunction:of:", "abs", ["-", ["readVariable", "y"], ["getAttribute:of:", "y", "Player"]]],
									1.75]]],
						["setVar:to:",
							"?Val",
							["concatenate:with:",
								"m",
								["concatenate:with:",
									["readVariable", "ID"],
									["concatenate:with:", " w ", ["concatenate:with:", ["readVariable", "player ID"], ["concatenate:with:", " ", ["readVariable", "Typ"]]]]]]],
						["setVar:to:",
							"?Val",
							["concatenate:with:",
								["readVariable", "?Val"],
								["concatenate:with:",
									" ",
									["concatenate:with:",
										["rounded", ["*", ["readVariable", "x"], 10]],
										["concatenate:with:", " ", ["rounded", ["*", ["readVariable", "y"], 10]]]]]]],
						["setVar:to:",
							"?Val",
							["concatenate:with:",
								["readVariable", "?Val"],
								["concatenate:with:", " ", ["rounded", ["*", ["-", ["readVariable", "OwnerDist"], 4], 0.6]]]]],
						["doIf",
							["=", ["readVariable", "class"], "4"],
							[["setVar:to:",
									"?Val",
									["concatenate:with:",
										["readVariable", "?Val"],
										["concatenate:with:",
											["concatenate:with:", " ", ["rounded", ["*", ["readVariable", "sx"], 10]]],
											["concatenate:with:", " ", ["rounded", ["*", ["readVariable", "sy"], 10]]]]]]]],
						["setVar:to:", "i3", ["+", ["stringLength:", ["readVariable", "?Val"]], 2]],
						["doIfElse",
							["=", ["readVariable", "class"], "4"],
							[["doIfElse",
									[">", ["readVariable", "Aggressive"], "9"],
									[["call", "Do Boss Lunge"]],
									[["doIfElse",
											["&",
												["=", ["readVariable", "Aggressive"], "1"],
												[">", ["getAttribute:of:", "Breath", "Breath"], "9.5"]],
											[["setVar:to:",
													"?Val",
													["concatenate:with:", ["readVariable", "?Val"], ["concatenate:with:", " ", ["rounded", ["getAttribute:of:", "x", "Player"]]]]],
												["setVar:to:",
													"?Val",
													["concatenate:with:",
														["readVariable", "?Val"],
														["concatenate:with:", " ", ["rounded", ["+", ["getAttribute:of:", "y", "Player"], 1]]]]],
												["setVar:to:", "Time", "99"]],
											[["doIfElse",
													["<", ["readVariable", "x"], "6"],
													[["setVar:to:", "tx", ["randomFrom:to:", 6, 12]]],
													[["doIfElse",
															[">", ["readVariable", "x"], ["-", ["readVariable", "MAP_WIDTH"], 6]],
															[["setVar:to:", "tx", ["rounded", ["-", ["readVariable", "MAP_WIDTH"], ["randomFrom:to:", 6, 12]]]]],
															[["setVar:to:", "tx", ["rounded", ["+", ["readVariable", "x"], ["randomFrom:to:", -6, 6]]]]]]]],
												["setVar:to:", "ty", ["rounded", ["+", ["readVariable", "y"], ["randomFrom:to:", -5, 3]]]],
												["call",
													"Check Tile at x: %n y: %n",
													["readVariable", "tx"],
													["-", ["readVariable", "ty"], ["randomFrom:to:", 1, 4]]],
												["doUntil",
													["&",
														["<", ["readVariable", "Tile Is Solid"], "8"],
														["not", ["=", ["readVariable", "Tile Is Solid"], "2.5"]]],
													[["changeVar:by:", "ty", 1],
														["call",
															"Check Tile at x: %n y: %n",
															["readVariable", "tx"],
															["-", ["readVariable", "ty"], ["randomFrom:to:", 1, 4]]]]],
												["setVar:to:", "?Val", ["concatenate:with:", ["readVariable", "?Val"], ["concatenate:with:", " ", ["readVariable", "tx"]]]],
												["setVar:to:", "?Val", ["concatenate:with:", ["readVariable", "?Val"], ["concatenate:with:", " ", ["readVariable", "ty"]]]],
												["setVar:to:", "Time", "99"]]]]]],
							[["doIfElse",
									["|", [">", ["readVariable", "OwnerDist"], "12"], ["<", ["readVariable", "class"], "3"]],
									[["setVar:to:", "Action", ["randomFrom:to:", 150, 250]],
										["setVar:to:", "tx", ["rounded", ["heading"]]],
										["doUntil",
											["<", ["readVariable", "Action"], "1"],
											[["doIfElse",
													["=",
														[">", ["readVariable", "tx"], "0"],
														[">", ["randomFrom:to:", 1, 6], "1"]],
													[["setVar:to:", "tx", ["randomFrom:to:", 10, 100]]],
													[["setVar:to:", "tx", ["randomFrom:to:", -100, -10]]]],
												["setVar:to:", "?Val", ["concatenate:with:", ["readVariable", "?Val"], ["concatenate:with:", " ", ["readVariable", "tx"]]]],
												["doIfElse",
													["=", ["readVariable", "class"], "2"],
													[["setVar:to:", "Time", ["randomFrom:to:", 35, 60]]],
													[["doIfElse",
															["=", ["readVariable", "class"], "3"],
															[["setVar:to:", "Time", ["randomFrom:to:", 20, 35]]],
															[["setVar:to:",
																	"Time",
																	["+", ["\/", ["readVariable", "tx"], 2], ["randomFrom:to:", 15, 85]]]]]]],
												["setVar:to:",
													"?Val",
													["concatenate:with:", ["readVariable", "?Val"], ["concatenate:with:", " ", ["rounded", ["readVariable", "Time"]]]]],
												["changeVar:by:", "Action", ["-", 0, ["readVariable", "Time"]]]]]],
									[["doIfElse",
											["|",
												["&", ["=", ["readVariable", "class"], "5"], ["<", ["readVariable", "Aggressive"], "1"]],
												["|", ["=", ["readVariable", "class"], "5.5"], ["=", ["readVariable", "class"], "6"]]],
											[["setVar:to:", "Time", "50"],
												["doIfElse",
													["=", ["readVariable", "Typ"], "7"],
													[["setVar:to:",
															"?Val",
															["concatenate:with:", ["readVariable", "?Val"], ["concatenate:with:", " ", ["rounded", ["randomFrom:to:", -30, 30]]]]]],
													[["doIfElse",
															["|", ["=", ["readVariable", "Typ"], "8"], ["=", ["readVariable", "class"], "5.5"]],
															[["setVar:to:",
																	"?Val",
																	["concatenate:with:", ["readVariable", "?Val"], ["concatenate:with:", " ", ["rounded", ["randomFrom:to:", -120, 120]]]]]],
															[["setVar:to:",
																	"?Val",
																	["concatenate:with:",
																		["readVariable", "?Val"],
																		["concatenate:with:",
																			" ",
																			["*", 500, ["-", ["*", ["randomFrom:to:", 0, 1], 2], 1]]]]],
																["setVar:to:", "Time", "100"]]]]],
												["setVar:to:",
													"?Val",
													["concatenate:with:", ["readVariable", "?Val"], ["concatenate:with:", " ", ["rounded", ["readVariable", "Time"]]]]]],
											[["setVar:to:",
													"?Val",
													["concatenate:with:",
														["readVariable", "?Val"],
														["concatenate:with:",
															" ",
															["rounded", ["*", ["-", ["getAttribute:of:", "x", "Player"], ["readVariable", "x"]], 10]]]]],
												["setVar:to:", "Time", "30"],
												["setVar:to:",
													"?Val",
													["concatenate:with:", ["readVariable", "?Val"], ["concatenate:with:", " ", ["rounded", ["readVariable", "Time"]]]]]]]]]]],
						["append:toList:", "0", "@Place"],
						["append:toList:", ["readVariable", "?Val"], "@Place"]]],
				[1943.6,
					2709.1,
					[["doIfElse",
							["=", ["readVariable", "class"], "4"],
							[["call", "Next Token of ?Val"],
								["doIfElse",
									["=", ["readVariable", "char"], ""],
									null,
									[["setVar:to:", "tx", ["readVariable", "char"]],
										["call", "Next Token of ?Val"],
										["setVar:to:", "ty", ["readVariable", "char"]],
										["think:", ["concatenate:with:", ["readVariable", "tx"], ["concatenate:with:", ", ", ["readVariable", "ty"]]]]]]],
							null]]],
				[823.6,
					2482.8,
					[["procDef", "Hit You", [], [], true],
						["doIf",
							["|",
								["<", ["readVariable", "Aggressive"], "10"],
								["=", ["getAttribute:of:", "@Player ID", "Multiplayer"], ["readVariable", "player ID"]]],
							[["doIfElse",
									["<", ["readVariable", "class"], "4"],
									[["doIfElse",
											["=", ["readVariable", "Typ"], "14"],
											[["setVar:to:", "Hit Player", "2"]],
											[["doIfElse",
													["=", ["readVariable", "Typ"], "15"],
													[["setVar:to:", "Hit Player", "1.5"]],
													[["setVar:to:", "Hit Player", "0.6"]]]]]],
									[["doIfElse",
											["=", ["readVariable", "class"], "4"],
											[["setVar:to:", "Hit Player", "0.8"]],
											[["doIfElse",
													["=", ["readVariable", "Typ"], "6"],
													[["setVar:to:", "Hit Player", "1.2"]],
													[["doIfElse",
															["=", ["readVariable", "Typ"], "7"],
															[["setVar:to:", "Hit Player", "0.8"]],
															[["doIfElse",
																	["=", ["readVariable", "Typ"], "9"],
																	[["setVar:to:", "Hit Player", "0.65"]],
																	[["doIfElse",
																			["=", ["readVariable", "Typ"], "17"],
																			[["setVar:to:", "Hit Player", "3"]],
																			[["doIfElse",
																					["=", ["readVariable", "Typ"], "18"],
																					[["setVar:to:", "Hit Player", "1"]],
																					[["setVar:to:", "Hit Player", "1.5"]]]]]]]]]]]]]]],
								["doIfElse",
									["=", ["readVariable", "sx"], "0"],
									[["doIfElse",
											[">", ["readVariable", "x"], ["getAttribute:of:", "x", "Player"]],
											[["setVar:to:", "Hit Player", ["concatenate:with:", ["readVariable", "Hit Player"], " -0.3 0.5 "]]],
											[["setVar:to:", "Hit Player", ["concatenate:with:", ["readVariable", "Hit Player"], " 0.3 0.5 "]]]]],
									[["doIfElse",
											["<", ["readVariable", "sx"], "0"],
											[["setVar:to:", "Hit Player", ["concatenate:with:", ["readVariable", "Hit Player"], " -0.3 0.5 "]]],
											[["setVar:to:", "Hit Player", ["concatenate:with:", ["readVariable", "Hit Player"], " 0.3 0.5 "]]]]]],
								["doIf",
									["=", ["readVariable", "class"], "2"],
									[["doIf", [">", ["getAttribute:of:", "Day Night", "Player"], "1"], [["changeVar:by:", "Typ", 1]]]]]]]]],
				[826.8,
					3875.2,
					[["procDef", "Get Direction %n %n", ["dx", "dy"], [1, 1], true],
						["doIfElse",
							["=", ["getParam", "dy", "r"], "0"],
							[["doIfElse",
									[">", ["getParam", "dx", "r"], "0"],
									[["setVar:to:", "t", "90"]],
									[["setVar:to:", "t", "-90"]]]],
							[["setVar:to:",
									"t",
									["computeFunction:of:", "atan", ["\/", ["getParam", "dx", "r"], ["getParam", "dy", "r"]]]],
								["doIf",
									["<", ["getParam", "dy", "r"], "0"],
									[["doIfElse",
											[">", ["getParam", "dx", "r"], "0"],
											[["changeVar:by:", "t", 180]],
											[["doIfElse",
													["<", ["getParam", "dx", "r"], "0"],
													[["changeVar:by:", "t", -180]],
													[["setVar:to:", "t", "180"]]]]]]]]]]],
				[834.6,
					4649.4,
					[["procDef", "Walk %b", ["hidden?"], [false], true],
						["call", "Claim or Despawn Mob %b", ["getParam", "hidden?", "b"]],
						["doIf",
							[">", ["readVariable", "health"], "0"],
							[["doIf",
									["=", ["readVariable", "player ID"], ["getAttribute:of:", "@Player ID", "Multiplayer"]],
									[["doIfElse",
											["&", ["=", ["readVariable", "class"], "6"], [">", ["readVariable", "Aggressive"], "0"]],
											[["doIf",
													["<", ["getAttribute:of:", "Breath", "Breath"], "9.9"],
													[["doIf",
															["<", ["readVariable", "t"], "15"],
															[["doIfElse",
																	["<", ["readVariable", "y"], ["+", ["getAttribute:of:", "y", "Player"], 0.6]],
																	[["changeVar:by:", "sy", ["*", 0.013, ["readVariable", "walkSpeed"]]]],
																	[["changeVar:by:", "sy", ["*", -0.013, ["readVariable", "walkSpeed"]]]]],
																["doIf",
																	["&",
																		[">", ["readVariable", "t"], "6"],
																		[">", ["timer"], ["readVariable", "ty"]]],
																	[["setVar:to:", "tx", ["getAttribute:of:", "x", "Player"]],
																		["setVar:to:", "ty", ["+", ["timer"], 3]],
																		["doIf",
																			["=",
																				["<", ["readVariable", "tx"], ["readVariable", "x"]],
																				[">", ["heading"], "0"]],
																			[["heading:", ["-", 0, ["heading"]]], ["setVar:to:", "sx", 0]]]]]]]]],
												["doIfElse",
													["=", ["readVariable", "Typ"], "9"],
													[["setVar:to:",
															"sx",
															["\/",
																["+",
																	["*", ["readVariable", "sx"], 20],
																	["*", ["\/", ["heading"], 500], ["readVariable", "walkSpeed"]]],
																21]]],
													[["setVar:to:",
															"sx",
															["\/",
																["+",
																	["*", ["readVariable", "sx"], 10],
																	["*", ["\/", ["heading"], 500], ["readVariable", "walkSpeed"]]],
																11]]]]],
											[["doIf",
													["=", ["readVariable", "Typ"], "6"],
													[["doIfElse",
															["|",
																["<", ["readVariable", "y"], ["*", ["readVariable", "MAP_HEIGHT"], 0.66]],
																["<", ["computeFunction:of:", "abs", ["-", ["getAttribute:of:", "Day Night", "Player"], 1.47]], "0.47"]],
															[["doIf",
																	[">", ["timer"], ["readVariable", "ty"]],
																	[["setVar:to:", "tx", ["getAttribute:of:", "x", "Player"]]]]],
															[["setVar:to:",
																	"tx",
																	["-", ["*", ["readVariable", "x"], 2], ["getAttribute:of:", "x", "Player"]]],
																["doIf", ["<", ["getAttribute:of:", "Day Night", "Player"], "1"], [["call", "Reg Kill %b", false]]]]]]]]]]],
								["doIf",
									["&",
										[">", ["timer"], ["readVariable", "ty"]],
										["=",
											["<", ["readVariable", "tx"], ["readVariable", "x"]],
											[">", ["heading"], "0"]]],
									[["doIfElse",
											["<", ["computeFunction:of:", "abs", ["-", ["readVariable", "tx"], ["readVariable", "x"]]], "1"],
											[["doIf",
													["|",
														["&", [">", ["readVariable", "Typ"], "6"], ["<", ["readVariable", "Typ"], "9"]],
														["=", ["readVariable", "class"], "5.5"]],
													[["setVar:to:", "sx", 0], ["setVar:to:", "onfloor", "0"]]]],
											[["heading:", ["-", 0, ["heading"]]],
												["call", "Set Walk Speed %n", ["\/", ["heading"], 500]]]]]],
								["doRepeat",
									["getAttribute:of:", "_Tick", "Multiplayer"],
									[["changeVar:by:", "x", ["readVariable", "sx"]],
										["call", "Check Tile at x: %n y: %n", ["readVariable", "x"], ["readVariable", "y"]],
										["doIf",
											[">", ["readVariable", "Tile Is Solid"], "7.75"],
											[["doIfElse",
													["&", ["<", ["readVariable", "class"], "6"], ["<", ["readVariable", "onfloor"], "2"]],
													[["call", "Check Tile at x: %n y: %n", ["readVariable", "x"], ["+", ["readVariable", "y"], 1]],
														["doIfElse",
															[">", ["readVariable", "Tile Is Solid"], "7.75"],
															[["doIfElse",
																	["=", ["readVariable", "Typ"], "7"],
																	[["call", "back out x %b", ["<", ["readVariable", "sx"], "0"]],
																		["heading:", ["-", 0, ["heading"]]],
																		["call", "Set Walk Speed %n", ["\/", ["heading"], 500]],
																		["setVar:to:", "tx", ["+", ["readVariable", "x"], ["*", ["readVariable", "sx"], 50]]]],
																	[["call", "Check Tile at x: %n y: %n", ["readVariable", "x"], ["+", ["readVariable", "y"], 2]],
																		["doIfElse",
																			[">", ["readVariable", "Tile Is Solid"], "7.75"],
																			[["call", "back out x %b", ["<", ["readVariable", "sx"], "0"]],
																				["heading:", ["-", 0, ["heading"]]],
																				["call", "Set Walk Speed %n", ["\/", ["heading"], 500]],
																				["setVar:to:", "tx", ["+", ["readVariable", "x"], ["*", ["readVariable", "sx"], 500]]],
																				["setVar:to:", "ty", ["+", ["timer"], ["\/", 2, ["readVariable", "walkSpeed"]]]]],
																			[["call",
																					"Check Tile at x: %n y: %n",
																					["-", ["readVariable", "x"], ["readVariable", "sx"]],
																					["+", ["readVariable", "y"], 1]],
																				["doIfElse",
																					[">", ["readVariable", "Tile Is Solid"], "7.75"],
																					[["call", "back out x %b", ["<", ["readVariable", "sx"], "0"]],
																						["heading:", ["-", 0, ["heading"]]],
																						["call", "Set Walk Speed %n", ["\/", ["heading"], 500]],
																						["setVar:to:", "tx", ["+", ["readVariable", "x"], ["*", ["readVariable", "sx"], 500]]],
																						["setVar:to:", "ty", ["+", ["timer"], ["\/", 2, ["readVariable", "walkSpeed"]]]]],
																					[["setVar:to:", "sy", "0.8"], ["changeVar:by:", "x", ["-", 0, ["readVariable", "sx"]]]]]]]]]],
															[["setVar:to:", "sy", "0.6"], ["call", "back out x %b", ["<", ["readVariable", "sx"], "0"]]]],
														["setVar:to:", "onfloor", "3"]],
													[["call", "back out x %b", ["<", ["readVariable", "sx"], "0"]],
														["doIf",
															["=", ["readVariable", "class"], "6"],
															[["heading:", ["-", 0, ["heading"]]],
																["call", "Set Walk Speed %n", ["\/", ["heading"], 500]],
																["doIfElse",
																	["=", ["readVariable", "Typ"], "9"],
																	[["setVar:to:", "tx", ["+", ["readVariable", "x"], ["*", ["readVariable", "sx"], 5000]]]],
																	[["setVar:to:", "tx", ["+", ["readVariable", "x"], ["*", ["readVariable", "sx"], 500]]]]],
																["setVar:to:", "ty", ["+", ["timer"], ["\/", 2, ["readVariable", "walkSpeed"]]]]]]]]]],
										["doIfElse",
											["=", ["readVariable", "class"], "6"],
											[["setVar:to:",
													"Tile Index",
													["+",
														["+",
															["*", ["computeFunction:of:", "floor", ["+", ["readVariable", "y"], 0.5]], ["readVariable", "MAP_WIDTH"]],
															["computeFunction:of:", "floor", ["readVariable", "x"]]],
														1]],
												["setVar:to:", "Tile Is Solid", ["getLine:ofList:", ["readVariable", "Tile Index"], "_Level"]],
												["doIfElse",
													["&",
														["&", [">", ["readVariable", "Tile Is Solid"], "159"], ["<", ["readVariable", "Tile Is Solid"], "176"]],
														["<",
															["*", ["%", ["+", ["readVariable", "y"], 0.5], 1], 16],
															["-", 176, ["readVariable", "Tile Is Solid"]]]],
													[["setVar:to:", "sy", ["*", ["readVariable", "sy"], 0.85]], ["setVar:to:", "t", "1"]],
													[["setVar:to:", "sy", ["*", ["-", ["readVariable", "sy"], 0.08], 0.95]],
														["setVar:to:", "t", "0"],
														["changeVar:by:", "health", -0.01]]],
												["changeVar:by:", "y", ["readVariable", "sy"]],
												["call", "Check Tile at x: %n y: %n", ["readVariable", "x"], ["readVariable", "y"]],
												["doIfElse",
													[">", ["readVariable", "Tile Is Solid"], "6.75"],
													[["setVar:to:", "y", ["computeFunction:of:", "ceiling", ["readVariable", "y"]]],
														["doIfElse",
															["&", ["=", ["readVariable", "t"], "0"], ["=", ["readVariable", "Typ"], "8"]],
															[["setVar:to:", "sx", "0"],
																["doIfElse",
																	[">", ["readVariable", "onfloor"], "0"],
																	[["setVar:to:", "onfloor", ["randomFrom:to:", -40, -15]],
																		["setVar:to:", "sy", ["randomFrom:to:", 0.2, 0.4]],
																		["setVar:to:", "sx", ["randomFrom:to:", -0.2, 0.2]]],
																	[["setVar:to:", "sy", "-0.1"]]]],
															[["setVar:to:", "sy", "0.1"]]]],
													null],
												["changeVar:by:", "onfloor", 1]],
											[["setVar:to:", "sy", ["*", ["-", ["readVariable", "sy"], 0.08], 0.95]],
												["changeVar:by:", "y", ["readVariable", "sy"]],
												["call", "Check Tile at x: %n y: %n", ["readVariable", "x"], ["readVariable", "y"]],
												["doIf",
													["&",
														["<", ["readVariable", "sy"], "0"],
														["&", [">", ["readVariable", "Tile Is Solid"], "6.75"], ["<", ["readVariable", "Tile Is Solid"], "8"]]],
													[["doIf",
															["<", ["-", ["%", ["readVariable", "y"], 1], ["readVariable", "sy"]], "1"],
															[["setVar:to:", "Tile Is Solid", 0]]]]],
												["doIfElse",
													[">", ["readVariable", "Tile Is Solid"], "6.75"],
													[["doIfElse",
															["<", ["readVariable", "sy"], "0"],
															[["doIfElse",
																	[">", ["readVariable", "onfloor"], "0"],
																	[["setVar:to:", "onfloor", 0]],
																	[["changeVar:by:", "onfloor", -1]]],
																["setVar:to:", "y", ["computeFunction:of:", "ceiling", ["readVariable", "y"]]],
																["doIf",
																	["not", ["=", ["readVariable", "onfloor"], "-1"]],
																	[["call", "Set Walk Speed %n", ["\/", ["heading"], 500]]]]],
															[["setVar:to:", "y", ["+", ["readVariable", "y"], ["*", ["readVariable", "sy"], -1.1]]]]],
														["setVar:to:", "sy", "0"]],
													[["doIfElse",
															["<", ["readVariable", "onfloor"], "2"],
															[["doIf",
																	["|", ["=", ["readVariable", "Typ"], "5"], ["=", ["readVariable", "class"], "5.5"]],
																	[["call", "Check Tile at x: %n y: %n", ["readVariable", "x"], ["-", ["readVariable", "y"], 1]],
																		["doIf",
																			["<", ["readVariable", "Tile Is Solid"], "7"],
																			[["setVar:to:", "onfloor", "3"],
																				["setVar:to:", "sy", "0.6"],
																				["setVar:to:", "sx", ["\/", ["heading"], 650]]]]]]],
															null],
														["changeVar:by:", "onfloor", 1]]]]],
										["doIf", ["<", ["readVariable", "y"], "-15"], [["call", "Reg Kill %b", false]]]]]]]]],
				[77.2,
					4474,
					[["procDef", "Hop X&Y", [], [], true],
						["doRepeat",
							["getAttribute:of:", "_Tick", "Multiplayer"],
							[["changeVar:by:", "x", ["readVariable", "sx"]],
								["call", "Check Tile at x: %n y: %n", ["readVariable", "x"], ["readVariable", "y"]],
								["doIf",
									[">", ["readVariable", "Tile Is Solid"], "7.75"],
									[["call", "back out x %b", ["<", ["readVariable", "sx"], "0"]],
										["doIf",
											["|", ["=", ["readVariable", "class"], "2"], ["=", ["readVariable", "class"], "3"]],
											[["setVar:to:", "sx", ["-", 0, ["readVariable", "sx"]]]]]]],
								["setVar:to:", "sy", ["*", ["-", ["readVariable", "sy"], 0.08], 0.95]],
								["changeVar:by:", "y", ["readVariable", "sy"]],
								["call", "Check Tile at x: %n y: %n", ["readVariable", "x"], ["readVariable", "y"]],
								["doIfElse",
									["<", ["readVariable", "sy"], "0"],
									[["doIf",
											["&", [">", ["readVariable", "Tile Is Solid"], "6.75"], ["<", ["readVariable", "Tile Is Solid"], "8"]],
											[["doIf",
													["<", ["-", ["%", ["readVariable", "y"], 1], ["readVariable", "sy"]], "1"],
													[["setVar:to:", "Tile Is Solid", 0]]]]],
										["doIfElse",
											[">", ["readVariable", "Tile Is Solid"], "6.75"],
											[["doIf",
													["|", ["=", ["readVariable", "class"], "2"], ["=", ["readVariable", "class"], "3"]],
													[["setVar:to:", "tx", ["readVariable", "x"]]]],
												["setVar:to:", "y", ["computeFunction:of:", "ceiling", ["readVariable", "y"]]],
												["setVar:to:", "onfloor", 0],
												["setVar:to:", "ty", ["readVariable", "y"]],
												["doIf",
													["<", ["readVariable", "Time"], ["timer"]],
													[["doIf",
															["<", ["randomFrom:to:", 1, 10], "5"],
															[["setVar:to:", "Time", ["+", ["timer"], ["randomFrom:to:", 0.2, 2.5]]]]]]],
												["doIfElse",
													["=", ["readVariable", "class"], "1"],
													[["doIf",
															[">", ["-", ["readVariable", "ty"], ["readVariable", "y"]], "4"],
															[["call", "Reg Kill %b", false]]]],
													null],
												["setVar:to:", "sx", "0"],
												["setVar:to:", "sy", "0"]],
											[["changeVar:by:", "onfloor", 1],
												["doIf", ["<", ["readVariable", "y"], "-15"], [["call", "Reg Kill %b", false]]]]]],
									[["doIfElse",
											[">", ["readVariable", "Tile Is Solid"], "7.75"],
											[["setVar:to:", "y", ["+", ["readVariable", "y"], ["*", ["readVariable", "sy"], -1.1]]],
												["setVar:to:", "sy", "0"]],
											[["changeVar:by:", "onfloor", 1],
												["doIf", ["<", ["readVariable", "y"], "-15"], [["call", "Reg Kill %b", false]]]]]]]]]]],
				[821,
					55,
					[["procDef", "Check Tile at x: %n y: %n", ["x", "y"], [1, 1], true],
						["doIfElse",
							["|",
								["<", ["getParam", "x", "r"], "0"],
								["not", ["<", ["getParam", "x", "r"], ["readVariable", "MAP_WIDTH"]]]],
							[["setVar:to:", "Tile Index", "0"], ["setVar:to:", "Tile Is Solid", "10"]],
							[["setVar:to:",
									"Tile Index",
									["+",
										["+",
											["*", ["computeFunction:of:", "floor", ["getParam", "y", "r"]], ["readVariable", "MAP_WIDTH"]],
											["computeFunction:of:", "floor", ["getParam", "x", "r"]]],
										1]],
								["setVar:to:", "Tile Is Solid", ["getLine:ofList:", ["readVariable", "Tile Index"], "_Level"]],
								["doIf",
									[">", ["readVariable", "Tile Is Solid"], "0"],
									[["setVar:to:",
											"Tile Is Solid",
											["getLine:ofList:", ["+", 3, ["*", ["readVariable", "Tile Is Solid"], ["readVariable", "TMul"]]], "_TileData"]],
										["doIf",
											["|", ["=", ["readVariable", "Tile Is Solid"], "4"], ["=", ["readVariable", "Tile Is Solid"], "4.5"]],
											[["setVar:to:", "Tile Is Solid", "99"]]]]]]]]],
				[3367.2,
					2273.15,
					[["procDef", "Claim or Despawn Mob %b", ["hidden?"], [false], false],
						["setVar:to:",
							"t",
							["+",
								["computeFunction:of:", "abs", ["-", ["readVariable", "x"], ["getAttribute:of:", "x", "Player"]]],
								["*",
									["computeFunction:of:", "abs", ["-", ["readVariable", "y"], ["getAttribute:of:", "y", "Player"]]],
									1.75]]],
						["doIfElse",
							["=", ["getAttribute:of:", "@Player ID", "Multiplayer"], ["readVariable", "player ID"]],
							[["doIfElse",
									[">", ["readVariable", "Aggressive"], "0"],
									[["doIf",
											["&", [">", ["readVariable", "t"], "45"], ["<", ["readVariable", "Aggressive"], "10"]],
											[["call", "Reg Kill %b", false]]]],
									[["doIf", [">", ["readVariable", "t"], "90"], [["call", "Reg Kill %b", false]]]]]],
							[["doIf",
									["&",
										["<", ["readVariable", "t"], ["readVariable", "OwnerDist"]],
										["not", ["getParam", "hidden?", "b"]]],
									[["doIf",
											["<", ["readVariable", "Aggressive"], "10"],
											[["doIf",
													[">", ["getAttribute:of:", "@Player ID", "Multiplayer"], "0"],
													[["setVar:to:", "player ID", ["getAttribute:of:", "@Player ID", "Multiplayer"]], ["call", "Next Action"]]]]]]]]]]],
				[4168.2,
					241,
					[["procDef", "Pickup Message, item %n count %n", ["typ", "count"], [1, 1], false],
						["doIfElse",
							["=", ["getParam", "typ", "r"], ["getLine:ofList:", 32, "_Chat"]],
							[["setLine:ofList:to:", 32, "_Chat", ""],
								["call",
									"Pickup Message, item %n count %n",
									["getParam", "typ", "r"],
									["+", ["getLine:ofList:", 33, "_Chat"], ["getParam", "count", "r"]]]],
							[["doIfElse",
									["=", ["getParam", "typ", "r"], ["getLine:ofList:", 30, "_Chat"]],
									[["setLine:ofList:to:", 31, "_Chat", ["+", ["getLine:ofList:", 31, "_Chat"], ["getParam", "count", "r"]]]],
									[["setLine:ofList:to:", 32, "_Chat", ["getLine:ofList:", 30, "_Chat"]],
										["setLine:ofList:to:", 33, "_Chat", ["getLine:ofList:", 31, "_Chat"]],
										["setLine:ofList:to:", 30, "_Chat", ["getParam", "typ", "r"]],
										["setLine:ofList:to:", 31, "_Chat", ["getParam", "count", "r"]]]],
								["setLine:ofList:to:", 29, "_Chat", "1"]]]]],
				[4163.6,
					54.95,
					[["procDef", "Make Particle, typ: %n xy: %n %n", ["typ", "x", "y"], [1, 1, 1], true],
						["setLine:ofList:to:",
							24,
							"_Chat",
							["concatenate:with:",
								["getLine:ofList:", 24, "_Chat"],
								["concatenate:with:",
									["concatenate:with:",
										["getParam", "typ", "r"],
										["concatenate:with:",
											" ",
											["concatenate:with:",
												["concatenate:with:",
													["\/", ["rounded", ["*", ["getParam", "x", "r"], 10]], 10],
													" "],
												["\/",
													["rounded", ["*", ["+", ["getParam", "y", "r"], 0.3], 10]],
													10]]]],
									" "]]]]],
				[1554.7,
					644.65,
					[["procDef", "Find Slot Typ %n %b", ["typ", "dontCreate"], [1, false], true],
						["doIfElse",
							[">", ["getParam", "typ", "r"], "0"],
							[["setVar:to:", "i3", "1"],
								["doUntil",
									["|",
										[">", ["readVariable", "i3"], "48"],
										["=", ["getLine:ofList:", ["readVariable", "i3"], "_inv"], ["getParam", "typ", "r"]]],
									[["changeVar:by:", "i3", 2]]],
								["doIfElse",
									[">", ["readVariable", "i3"], "48"],
									[["doIfElse",
											["getParam", "dontCreate", "b"],
											[["setVar:to:", "i3", "0"]],
											[["setVar:to:", "i3", "1"],
												["doUntil",
													["|",
														[">", ["readVariable", "i3"], "48"],
														["=", ["getLine:ofList:", ["readVariable", "i3"], "_inv"], "0"]],
													[["changeVar:by:", "i3", 2]]],
												["doIfElse",
													[">", ["readVariable", "i3"], "48"],
													[["setVar:to:", "i3", "0"]],
													[["setLine:ofList:to:", ["readVariable", "i3"], "_inv", ["getParam", "typ", "r"]],
														["setVar:to:", "i3", ["\/", ["+", ["readVariable", "i3"], 1], 2]],
														["setVar:to:", "inv_change", "2"]]]]]],
									[["setVar:to:", "i3", ["\/", ["+", ["readVariable", "i3"], 1], 2]]]]],
							[["setVar:to:", "i3", "0"]]]]],
				[2413.6,
					7544,
					[["procDef", "Do Boss Lunge", [], [], false],
						["doIfElse",
							["=", ["readVariable", "Aggressive"], "10"],
							[["setVar:to:", "Aggressive", "11"],
								["setVar:to:", "tx", ["+", ["getAttribute:of:", "x", "Player"], ["randomFrom:to:", -6, 6]]],
								["setVar:to:", "ty", ["+", ["getAttribute:of:", "y", "Player"], ["randomFrom:to:", 5, 6]]]],
							[["setVar:to:", "Aggressive", "10"],
								["setVar:to:", "tx", ["getAttribute:of:", "x", "Player"]],
								["setVar:to:", "ty", ["+", ["getAttribute:of:", "y", "Player"], 1]],
								["call",
									"Get Direction %n %n",
									["-", ["readVariable", "tx"], ["readVariable", "x"]],
									["-", ["readVariable", "ty"], ["readVariable", "y"]]],
								["setVar:to:", "sx", ["*", 0.3, ["computeFunction:of:", "sin", ["readVariable", "t"]]]],
								["setVar:to:", "sy", ["*", 0.3, ["computeFunction:of:", "cos", ["readVariable", "t"]]]]]],
						["setVar:to:",
							"?Val",
							["concatenate:with:", ["readVariable", "?Val"], ["concatenate:with:", " ", ["rounded", ["readVariable", "tx"]]]]],
						["setVar:to:",
							"?Val",
							["concatenate:with:", ["readVariable", "?Val"], ["concatenate:with:", " ", ["rounded", ["readVariable", "ty"]]]]],
						["setVar:to:", "Time", ["randomFrom:to:", 70, 90]]]],
				[14.8,
					5999.4,
					[["procDef", "Fly %b", ["hidden?"], [false], true],
						["call", "Claim or Despawn Mob %b", ["getParam", "hidden?", "b"]],
						["doIf",
							[">", ["readVariable", "health"], "0"],
							[["doIf",
									["&",
										[">", ["readVariable", "Aggressive"], "0.9"],
										["&",
											["=", ["readVariable", "player ID"], ["getAttribute:of:", "@Player ID", "Multiplayer"]],
											[">", ["getAttribute:of:", "Breath", "Breath"], "9.5"]]],
									[["doIfElse",
											["|",
												["<", ["readVariable", "y"], ["*", ["readVariable", "MAP_HEIGHT"], 0.66]],
												["<", ["computeFunction:of:", "abs", ["-", ["getAttribute:of:", "Day Night", "Player"], 1.55]], "0.45"]],
											[["doIfElse",
													["<", ["readVariable", "Aggressive"], "10"],
													[["setVar:to:", "tx", ["getAttribute:of:", "x", "Player"]],
														["setVar:to:", "ty", ["+", ["getAttribute:of:", "y", "Player"], 1]]],
													null]],
											[["setVar:to:", "tx", ["getAttribute:of:", "x", "Player"]],
												["setVar:to:", "ty", ["+", ["getAttribute:of:", "y", "Player"], 1000]],
												["doIf", ["<", ["getAttribute:of:", "Day Night", "Player"], "1"], [["call", "Reg Kill %b", false]]]]]]],
								["doRepeat",
									["getAttribute:of:", "_Tick", "Multiplayer"],
									[["doIfElse",
											["|", ["=", ["readVariable", "Typ"], "5"], ["=", ["readVariable", "Typ"], "24"]],
											[["doIfElse",
													["=", ["readVariable", "Typ"], "5"],
													[["call", "Fly Move %n %n", 200, 0.98]],
													[["call", "Fly Move %n %n", 100, 0.96]]]],
											[["doIfElse",
													["|", ["=", ["readVariable", "Typ"], "20"], ["=", ["readVariable", "Typ"], "23"]],
													[["setVar:to:",
															"t",
															["*",
																["computeFunction:of:",
																	"sqrt",
																	["+",
																		["*",
																			["-", ["readVariable", "tx"], ["readVariable", "x"]],
																			["-", ["readVariable", "tx"], ["readVariable", "x"]]],
																		["*",
																			["-", ["readVariable", "ty"], ["readVariable", "y"]],
																			["-", ["readVariable", "ty"], ["readVariable", "y"]]]]],
																200]],
														["doIf",
															[">", ["readVariable", "t"], "140"],
															[["setVar:to:",
																	"sx",
																	["*",
																		["+",
																			["readVariable", "sx"],
																			["\/", ["-", ["readVariable", "tx"], ["readVariable", "x"]], ["readVariable", "t"]]],
																		0.92]],
																["setVar:to:",
																	"sy",
																	["*",
																		["+",
																			["readVariable", "sy"],
																			["\/", ["-", ["readVariable", "ty"], ["readVariable", "y"]], ["readVariable", "t"]]],
																		0.92]]]]],
													[["setVar:to:",
															"t",
															["*",
																["computeFunction:of:",
																	"sqrt",
																	["+",
																		["*",
																			["-", ["readVariable", "tx"], ["readVariable", "x"]],
																			["-", ["readVariable", "tx"], ["readVariable", "x"]]],
																		["*",
																			["-", ["readVariable", "ty"], ["readVariable", "y"]],
																			["-", ["readVariable", "ty"], ["readVariable", "y"]]]]],
																100]],
														["setVar:to:",
															"sx",
															["*",
																["+",
																	["readVariable", "sx"],
																	["\/", ["-", ["readVariable", "tx"], ["readVariable", "x"]], ["readVariable", "t"]]],
																0.98]],
														["setVar:to:",
															"sy",
															["*",
																["+",
																	["readVariable", "sy"],
																	["\/", ["-", ["readVariable", "ty"], ["readVariable", "y"]], ["readVariable", "t"]]],
																0.94]]]]]],
										["doIfElse",
											[">", ["readVariable", "Aggressive"], "9"],
											[["changeVar:by:", "x", ["readVariable", "sx"]], ["changeVar:by:", "y", ["readVariable", "sy"]]],
											[["changeVar:by:", "x", ["readVariable", "sx"]],
												["call", "Check Tile at x: %n y: %n", ["readVariable", "x"], ["readVariable", "y"]],
												["doIf",
													[">", ["readVariable", "Tile Is Solid"], "7.75"],
													[["changeVar:by:", "x", ["*", -1.1, ["readVariable", "sx"]]],
														["doIfElse",
															[">", ["computeFunction:of:", "abs", ["readVariable", "sx"]], "0.03"],
															[["setVar:to:", "sx", ["*", -1.2, ["readVariable", "sx"]]]],
															[["setVar:to:", "sx", ["*", -5, ["readVariable", "sx"]]]]]]],
												["changeVar:by:", "y", ["readVariable", "sy"]],
												["call", "Check Tile at x: %n y: %n", ["readVariable", "x"], ["readVariable", "y"]],
												["doIf",
													[">", ["readVariable", "Tile Is Solid"], "7.75"],
													[["changeVar:by:", "y", ["*", -1.1, ["readVariable", "sy"]]],
														["doIfElse",
															[">", ["computeFunction:of:", "abs", ["readVariable", "sy"]], "0.03"],
															[["setVar:to:", "sy", ["*", -1.2, ["readVariable", "sy"]]]],
															[["setVar:to:", "sy", ["*", -5, ["readVariable", "sy"]]]]]]]]]]],
								["doIfElse",
									["|", ["=", ["readVariable", "Typ"], "5"], ["=", ["readVariable", "Typ"], "24"]],
									[["doIfElse",
											["=", ["readVariable", "Typ"], "5"],
											[["call", "Get Direction %n %n", ["readVariable", "sx"], ["readVariable", "sy"]]],
											[["doIfElse",
													["=", ["readVariable", "player ID"], ["getAttribute:of:", "@Player ID", "Multiplayer"]],
													[["call",
															"Get Direction %n %n",
															["-", ["getAttribute:of:", "x", "Player"], ["readVariable", "x"]],
															["-", ["getAttribute:of:", "y", "Player"], ["readVariable", "y"]]],
														["doIf",
															["=", ["readVariable", "Aggressive"], "10"],
															[["setVar:to:", "tx", ["getAttribute:of:", "x", "Player"]],
																["setVar:to:", "ty", ["+", ["getAttribute:of:", "y", "Player"], 1]]]]],
													[["call",
															"Get Direction %n %n",
															["-", ["readVariable", "tx"], ["readVariable", "x"]],
															["-", ["readVariable", "ty"], ["readVariable", "y"]]]]]]],
										["setVar:to:", "t", ["*", ["rounded", ["\/", ["readVariable", "t"], 15]], 15]],
										["doIf",
											["not", ["=", ["readVariable", "t"], ["heading"]]],
											[["heading:", ["readVariable", "t"]]]]],
									[["doIf",
											["=", [">", ["readVariable", "sx"], "0"], ["<", ["heading"], "0"]],
											[["heading:", ["-", 0, ["heading"]]]]]]]]]]],
				[39.4,
					2990.2,
					[["procDef", "Hit With Tool?", [], [], true],
						["doIf",
							["<",
								["computeFunction:of:", "abs", ["-", ["getLine:ofList:", 25, "_Chat"], ["xpos"]]],
								["+", ["*", ["readVariable", "szx"], 40.5], ["getLine:ofList:", 28, "_Chat"]]],
							[["doIf",
									["<",
										["computeFunction:of:", "abs", ["-", ["getLine:ofList:", 26, "_Chat"], ["ypos"]]],
										["+", ["*", ["readVariable", "szy"], 40.5], ["getLine:ofList:", 28, "_Chat"]]],
									[["setVar:to:", "char", ["getAttribute:of:", "Tool Type", "Tool Swing"]],
										["doIfElse",
											["=", ["readVariable", "char"], "1099"],
											[["doIf",
													["<", ["readVariable", "Aggressive"], "1"],
													[["doIfElse",
															["=", ["readVariable", "Typ"], "1"],
															[["call", "Pick Up Block %n %n", 125, 1], ["call", "Pick Up Block %n %n", 152, ["randomFrom:to:", 1, 2]]],
															[["doIfElse",
																	["=", ["readVariable", "Typ"], "2"],
																	[["call", "Pick Up Block %n %n", 135, 1]],
																	[["doIfElse",
																			["=", ["readVariable", "Typ"], "7"],
																			[["call", "Pick Up Block %n %n", 156, 1]],
																			[["doIfElse",
																					["=", ["readVariable", "Typ"], "8"],
																					[["call", "Pick Up Block %n %n", 176, 1]],
																					[["doIfElse",
																							["=", ["readVariable", "Typ"], "20"],
																							[["call", "Pick Up Block %n %n", 249, 1]],
																							[["doIfElse",
																									["=", ["readVariable", "Typ"], "21"],
																									[["call", "Pick Up Block %n %n", 256, 1]],
																									[["doIfElse",
																											["=", ["readVariable", "Typ"], "22"],
																											[["call", "Pick Up Block %n %n", 257, 1]],
																											[["doIfElse",
																													["=", ["readVariable", "Typ"], "23"],
																													[["call", "Pick Up Block %n %n", 258, 1]],
																													null]]]]]]]]]]]]]]],
														["call", "Reg Kill %b", false]]]],
											[["doIf",
													[">", ["timer"], ["readVariable", "hit wait"]],
													[["doIfElse",
															["=", ["readVariable", "char"], "1001"],
															[["call", "Hit mob with tool %n", ["*", ["getAttribute:of:", "Tool Power", "Tool Swing"], 0.2]]],
															[["doIfElse",
																	["=", ["readVariable", "char"], "1002"],
																	[["call", "Hit mob with tool %n", ["*", ["getAttribute:of:", "Tool Power", "Tool Swing"], 0.5]]],
																	[["doIfElse",
																			["=", ["readVariable", "char"], "1003"],
																			[["call", "Hit mob with tool %n", ["getAttribute:of:", "Tool Power", "Tool Swing"]]],
																			null]]]]]]]]]]]]]]],
				[37,
					1328,
					[["procDef", "Animate %b", ["hidden?"], [false], true],
						["doIf", [">", ["timer"], ["readVariable", "Time"]], [["call", "Next Action"]]],
						["doIfElse",
							["=", ["readVariable", "class"], "4"],
							[["call", "Fly %b", ["getParam", "hidden?", "b"]]],
							[["doIfElse",
									["&", [">", ["readVariable", "class"], "4.9"], ["<", ["readVariable", "class"], "6.9"]],
									[["call", "Walk %b", ["getParam", "hidden?", "b"]]],
									[["doIf",
											["<", ["readVariable", "onfloor"], "3"],
											[["doIfElse",
													["=", ["readVariable", "class"], "3"],
													[["doIf",
															[">", ["computeFunction:of:", "abs", ["-", ["readVariable", "x"], ["readVariable", "tx"]]], "0.1"],
															[["call", "Hop (decide moves) %b", ["getParam", "hidden?", "b"]]]],
														["doIf",
															["<", ["+", ["timer"], 2], ["readVariable", "Time"]],
															[["setVar:to:", "Time", ["+", ["timer"], 2]]]]],
													[["doIf",
															[">", ["computeFunction:of:", "abs", ["-", ["readVariable", "x"], ["readVariable", "tx"]]], "1.5"],
															[["call", "Hop (decide moves) %b", ["getParam", "hidden?", "b"]]]]]]]],
										["call", "Hop X&Y"]]]]],
						["doIf",
							[">", ["readVariable", "health"], "0"],
							[["doIf",
									["not", ["=", "", ["getLine:ofList:", 22, "_Chat"]]],
									[["setVar:to:", "?Val", ["getLine:ofList:", 22, "_Chat"]],
										["setVar:to:", "i3", "1"],
										["call", "Check Projectiles"]]],
								["doIf", [">", ["getAttribute:of:", "Tool Type", "Tool Swing"], "0"], [["call", "Hit With Tool?"]]],
								["doIf",
									[">", ["readVariable", "Aggressive"], "0"],
									[["doIf",
											["&",
												["=", ["readVariable", "Hit Player"], ""],
												["=", ["getAttribute:of:", "Peaceful?", "Frame"], "0"]],
											[["doIf",
													["<",
														["computeFunction:of:", "abs", ["-", ["readVariable", "x"], ["getAttribute:of:", "x", "Player"]]],
														["+", 0.1, ["readVariable", "szx"]]],
													[["doIfElse",
															["|", ["=", ["readVariable", "class"], "4"], ["=", ["readVariable", "Typ"], "9"]],
															[["doIf",
																	["<",
																		["computeFunction:of:",
																			"abs",
																			["-", ["readVariable", "y"], ["+", ["getAttribute:of:", "y", "Player"], 0.8]]],
																		["+", ["readVariable", "szy"], 0.4]],
																	[["doIf",
																			["=", ["readVariable", "class"], "4"],
																			[["call",
																					"Hit Away %n %n power %n %n",
																					["-", ["readVariable", "x"], ["getAttribute:of:", "x", "Player"]],
																					["-", ["readVariable", "y"], ["+", ["getAttribute:of:", "y", "Player"], 0.8]],
																					0.2,
																					0.05]]],
																		["call", "Hit You"]]]],
															[["doIf",
																	["<",
																		["computeFunction:of:",
																			"abs",
																			["-",
																				["+", ["readVariable", "y"], ["readVariable", "szy"]],
																				["+", ["getAttribute:of:", "y", "Player"], 0.8]]],
																		["+", ["readVariable", "szy"], 0.4]],
																	[["call", "Hit You"]]]]]]]]]]]]],
						["doIfElse",
							["&", [">", ["readVariable", "ID"], "0"], [">", ["readVariable", "health"], "0"]],
							[["doIfElse",
									["getParam", "hidden?", "b"],
									[["hide"]],
									[["call",
											"Draw %n %n",
											["computeFunction:of:",
												"floor",
												["*", ["-", ["readVariable", "x"], ["readVariable", "SCROLL_X"]], ["readVariable", "TILE_SIZE"]]],
											["computeFunction:of:",
												"floor",
												["*", ["-", ["readVariable", "y"], ["readVariable", "SCROLL_Y"]], ["readVariable", "TILE_SIZE"]]]]]]],
							[["hide"]]]]],
				[1560.75,
					5613.8,
					[["procDef", "Next Action", [], [], true],
						["call", "Next Token of ?Val"],
						["doIfElse",
							["=", ["readVariable", "char"], ""],
							[["doIfElse",
									["=", ["getAttribute:of:", "@Player ID", "Multiplayer"], ["readVariable", "player ID"]],
									[["call", "Send Update"], ["call", "Next Action"]],
									[["doIfElse",
											["&",
												["=", ["readVariable", "Action"], "-1"],
												["=", ["getAttribute:of:", "@Player ID", "Multiplayer"], ["getAttribute:of:", "@Master ID", "Multiplayer"]]],
											[["setVar:to:", "player ID", ["getAttribute:of:", "@Player ID", "Multiplayer"]],
												["doIfElse",
													["<", ["readVariable", "Aggressive"], "10"],
													[["setVar:to:", "Action", "0"], ["call", "Send Update"], ["call", "Next Action"]],
													[["call", "Reg Kill %b", false]]]],
											[["setVar:to:", "Time", ["+", ["timer"], 20]], ["setVar:to:", "Action", "-1"]]]]]],
							[["doIfElse",
									["=", ["readVariable", "class"], "4"],
									[["setVar:to:", "tx", ["+", ["readVariable", "char"], 0.5]],
										["call", "Next Token of ?Val"],
										["setVar:to:", "ty", ["readVariable", "char"]],
										["doIfElse",
											["=", ["readVariable", "Typ"], "23"],
											[["setVar:to:", "Time", ["+", ["timer"], 15]]],
											[["doIfElse",
													["=", ["readVariable", "Typ"], "24"],
													[["setVar:to:", "Time", ["+", ["timer"], 6]]],
													[["setVar:to:", "Time", ["+", ["timer"], 6]]]]]],
										["setVar:to:", "Action", "0"]],
									[["setVar:to:", "tx", ["+", ["readVariable", "x"], ["\/", ["readVariable", "char"], 10]]],
										["call", "Next Token of ?Val"],
										["setVar:to:", "Time", ["+", ["timer"], ["\/", ["readVariable", "char"], 10]]],
										["setVar:to:", "Action", "0"]]]]]]],
				[443.4,
					6443.15,
					[["procDef", "Fly Move %n %n", ["mul", "fric"], [1, 1], false],
						["setVar:to:",
							"t",
							["*",
								["computeFunction:of:",
									"sqrt",
									["+",
										["*",
											["-", ["readVariable", "tx"], ["readVariable", "x"]],
											["-", ["readVariable", "tx"], ["readVariable", "x"]]],
										["*",
											["-", ["readVariable", "ty"], ["readVariable", "y"]],
											["-", ["readVariable", "ty"], ["readVariable", "y"]]]]],
								["getParam", "mul", "r"]]],
						["setVar:to:",
							"sx",
							["*",
								["+",
									["readVariable", "sx"],
									["\/", ["-", ["readVariable", "tx"], ["readVariable", "x"]], ["readVariable", "t"]]],
								["getParam", "fric", "r"]]],
						["setVar:to:",
							"sy",
							["*",
								["+",
									["readVariable", "sy"],
									["\/", ["-", ["readVariable", "ty"], ["readVariable", "y"]], ["readVariable", "t"]]],
								["getParam", "fric", "r"]]]]],
				[2397.8,
					679,
					[["procDef", "Set Walk Speed %n", ["direction"], [1], true],
						["setVar:to:", "sx", ["*", ["getParam", "direction", "r"], ["readVariable", "walkSpeed"]]]]],
				[75.65,
					94,
					[["procDef", "init", [], [], true],
						["setSizeTo:", 300],
						["heading:", 90],
						["hide"],
						["setVar:to:", "idx", "2"],
						["setVar:to:", "Typ", "0"],
						["setVar:to:", "ID", "0"],
						["setVar:to:", "player ID", "0"],
						["setVar:to:", "Time", 0],
						["setVar:to:", "Action", 0],
						["setVar:to:", "hit wait", 0],
						["setVar:to:", "health", 0],
						["setVar:to:", "OwnerDist", 0],
						["setVar:to:", "ty", 0],
						["setVar:to:", "Aggressive", "-1"],
						["deleteLine:ofList:", "all", "_Mob"],
						["doRepeat",
							15,
							[["createCloneOf", "_myself_"],
								["append:toList:", "0", "_Mob"],
								["append:toList:", "", "_Mob"],
								["changeVar:by:", "idx", 2]]],
						["append:toList:", "0", "_Mob"],
						["append:toList:", "", "_Mob"]]],
				[1562.05,
					6739.4,
					[["procDef", "back out x %b", ["move right?"], [false], true],
						["doIfElse",
							["getParam", "move right?", "b"],
							[["setVar:to:", "x", ["+", ["computeFunction:of:", "ceiling", ["readVariable", "x"]], 0.05]]],
							[["setVar:to:", "x", ["-", ["computeFunction:of:", "floor", ["readVariable", "x"]], 0.05]]]],
						["call", "Check Tile at x: %n y: %n", ["readVariable", "x"], ["readVariable", "y"]],
						["doIf", [">", ["readVariable", "Tile Is Solid"], "7"], [["changeVar:by:", "y", 0.1]]]]],
				[2943.6,
					6447.6,
					[["call", "Pick Up Block %n %n", 295, ["randomFrom:to:", 30, 87]], ["call", "Pick Up Block %n %n", 299, 1]]]],
			"scriptComments": [[1841.3, 1587.9, 150, 200, false, 14, "Next Update - NOW!"],
				[2719.4, 1776.5, 150, 200, false, 353, "Facing the right way?"],
				[254.2, 5072, 197, 51, false, 1929, "This pauses after each jump"],
				[3742.2, 2724.15, 209, 62, false, 2065, "Take Control as we are closer!"],
				[323.8, 6374.4, 150, 200, false, 2258, "Run away at night!"],
				[394.4, 3259.2, 150, 200, false, 2501, "Egg"],
				[282, 25, 267, 566, true, 308, "1 = bunny\r2 = frog\r3 = slime\r4 = angry slime\r5 = demon eye\r6 = zombi\r7 = crab\r8 = Goldfish\r9 = Jellyfish\r10 = Purple Slime\r11 = Aggressive Purple\r12 = Bunny Slime\r13 = Andry Bunny Slime\r14 = Dungeon Slime\r15 = Lava Slime\r16 = Pyranha\r17 = Shark\r18 = Bat\r19 = Lava Bat\r20 = Butterfly\r21 = Squirrel\r22 = Mouse\r23 = Firefly\r24 = Eye of Cthulhu\r\rclass\r1 = hop\r2 = slime\r3 = angry slime\r4 = demon eye\r5 = walk\r6 = swim"],
				[2842.4, 2395.5, 241, 75, false, 434, "Can't reach you so become friendly"],
				[1041.6, 5429.4, 100, 68, false, 1528, "Zombie"],
				[1034.6, 7457.4, 147, 62, false, 1723, "Goldfish or Jellyfish"],
				[1165.6, 7888.9, 200, 59, false, 1774, "Goldfish flip when out of water"],
				[286.4, 4018.2, 150, 200, false, 2536, "pick"],
				[301.4, 4096.2, 150, 200, false, 2542, "Axe"],
				[316.4, 4174.2, 150, 200, false, 2548, "Sword"],
				[297, 2418, 150, 200, false, 2652, "Demon Eye"],
				[3820, 815.4, 150, 200, false, 602, "1.. Bunny"],
				[3827, 921.4, 150, 200, false, 606, "5.. Demon Eye"],
				[3827, 881.4, 189, 166, false, 605, "4.. Green Slime (aggressive)"],
				[3837, 987.4, 150, 200, false, 609, "8.. Goldfish"],
				[3844, 1073.4, 150, 200, false, 613, "9.. Jellyfish"],
				[3841, 1095.4, 150, 200, false, 614, "10.. Purple Slime (p)"],
				[3841, 1117.4, 150, 200, false, 615, "11. Purple Slime (a)"],
				[3841, 1139.4, 150, 200, false, 616, "12. Bunny Slime (p)"],
				[1064.4, 692.8, 150, 200, false, 173, "1.. Hop: Rabbit, Frog"],
				[1064.4, 924.8, 150, 200, false, 187, "2,3.. Slime"],
				[1058.4, 1237.8, 150, 200, false, 218, "4.. Demon Eye"],
				[1036.4, 1413.8, 173, 94, false, 232, "5.. Walk - Zombie, Crab"],
				[3851, 1223.4, 150, 200, false, 619, "15.. Lava Slime (a)"],
				[3110, 1993, 274, 529, true, -1, "1 = bunny\r2 = frog\r3 = slime\r4 = angry slime\r5 = demon eye\r6 = zombi\r7 = crab\r8 = Goldfish\r9 = Jellyfish\r10 = Purple Slime\r11 = Aggressive Purple\r12 = Bunny Slime\r13 = Andry Bunny Slime\r14 = Dungeon Slime\r15 = Lava Slime\r16 = Pyranha\r17 = Shark\r18 = Bat\r19 = Lava Bat\r20 = Butterfly\r21 = Squirrel\r22 = Mouse\r23 = Firefly\r\rclass\r1 = hop\r2 = slime\r3 = angry slime\r4 = demon eye\r5 = walk\r6 = swim"],
				[3841, 1179.4, 150, 200, false, 617, "13. Bunny Slime (a)"],
				[2996, 4076, 301, 544, true, -1, "1 = bunny\r2 = frog\r3 = slime\r4 = angry slime\r5 = demon eye\r6 = zombi\r7 = crab\r8 = Goldfish\r9 = Jellyfish\r10 = Purple Slime\r11 = Aggressive Purple\r12 = Bunny Slime\r13 = Andry Bunny Slime\r14 = Dungeon Slime\r15 = Lava Slime\r16 = Pyranha\r17 = Shark\r18 = Bat\r19 = Lava Bat\r20 = Butterfly\r21 = Squirrel\r22 = Mouse\r23 = Firefly\r\rclass\r1 = hop\r2 = slime\r3 = angry slime\r4 = demon eye\r5 = walk\r6 = swim"],
				[3851, 943.4, 150, 200, false, 607, "6.. Zombie"],
				[3861, 965.4, 150, 200, false, 608, "7.. Crab"],
				[3868, 1201.4, 150, 200, false, 618, "14.. Dungeon Slime (a)"],
				[3858, 1245.4, 150, 200, false, 620, "16.. Pyranha"],
				[1010.6, 3738.8, 150, 200, false, 1419, "Agressive Mode"],
				[3843, 1347.4, 150, 200, false, 624, "17.. Shark"],
				[3806, 837.4, 150, 200, false, 603, "2.. Frog"],
				[3827, 859.4, 179, 187, false, 604, "3.. Green Slime (passive)"],
				[2728.6, 5980.6, 150, 200, false, 927, "Shark Fin"],
				[3829, 1369.4, 150, 200, false, 625, "18.. Bat"],
				[2696.6, 4589.6, 199, 67, false, 807, "todo: Need different colours!"],
				[3843, 1391.4, 150, 200, false, 626, "19.. Lava Bat"],
				[3815, 1413.4, 150, 200, false, 627, "20.. Butterfly"],
				[3839, 1453.4, 150, 200, false, 628, "21.. Squirrel"],
				[1071.6, 6248.4, 150, 200, false, 1613, "Crab - no jumping high"],
				[1073.6, 6891.4, 150, 200, false, 1684, "Jump High!"],
				[1028.6, 7009.4, 150, 200, false, 1688, "Little Jump up"],
				[1064.6, 7153.4, 150, 200, false, 1696, "Swimmers turn around"],
				[1064.4, 1883.8, 150, 200, false, 272, "Class 6 - Swimmers"],
				[1135.6, 8664.9, 199, 56, false, 1832, "Don't set sx back right away"],
				[3825, 1475.4, 150, 200, false, 629, "22.. Mouse"],
				[1203.6, 8883.9, 256, 55, false, 1848, "Zombies & squirrels jump over gaps"],
				[1060.4, 1605.8, 150, 200, false, 250, "5.5.. Scurry - squirrel"],
				[3815, 1497.4, 150, 200, false, 630, "23.. Firefly"],
				[348.8, 6692.9, 150, 200, false, 2278, "Butterfly, firefly"],
				[3847, 1519.4, 150, 200, false, 631, "24.. Eye of Cthulhu"]],
			"sounds": [{
					"soundName": "pop",
					"soundID": 0,
					"md5": "83a9787d4cb6f3b7632b4ddfebf74367.wav",
					"sampleCount": 258,
					"rate": 11025,
					"format": ""
				}],
			"costumes": [{
					"costumeName": "rabbit1",
					"baseLayerID": 130,
					"baseLayerMD5": "2f3c462b5e8ce9c4eecba58fd65c3483.png",
					"bitmapResolution": 2,
					"rotationCenterX": 14,
					"rotationCenterY": 24
				},
				{
					"costumeName": "rabbit2",
					"baseLayerID": 307,
					"baseLayerMD5": "744bf0c254530866edb442cf3a519140.png",
					"bitmapResolution": 2,
					"rotationCenterX": 16,
					"rotationCenterY": 24
				},
				{
					"costumeName": "rabbit3",
					"baseLayerID": 308,
					"baseLayerMD5": "64efeaf66d1890bce7a73cb51f1879a2.png",
					"bitmapResolution": 2,
					"rotationCenterX": 14,
					"rotationCenterY": 26
				},
				{
					"costumeName": "frog1",
					"baseLayerID": 140,
					"baseLayerMD5": "4354c5895e3350a2a5bc50ad78595089.png",
					"bitmapResolution": 2,
					"rotationCenterX": 8,
					"rotationCenterY": 14
				},
				{
					"costumeName": "frog2",
					"baseLayerID": 309,
					"baseLayerMD5": "289603f70519ca76e7e790a49506d2a3.png",
					"bitmapResolution": 2,
					"rotationCenterX": 8,
					"rotationCenterY": 18
				},
				{
					"costumeName": "frog3",
					"baseLayerID": 310,
					"baseLayerMD5": "92343ec2d63913d092d87e6ace62d70d.png",
					"bitmapResolution": 2,
					"rotationCenterX": 8,
					"rotationCenterY": 14
				},
				{
					"costumeName": "slime-green-1",
					"baseLayerID": 141,
					"baseLayerMD5": "698359608402d9d9a07c3685dd9c0b06.png",
					"bitmapResolution": 2,
					"rotationCenterX": 16,
					"rotationCenterY": 22
				},
				{
					"costumeName": "slime-green-2",
					"baseLayerID": 311,
					"baseLayerMD5": "b652b14e127ba0f87acef4b8df38d65d.png",
					"bitmapResolution": 2,
					"rotationCenterX": 14,
					"rotationCenterY": 24
				},
				{
					"costumeName": "Demon_Eye",
					"baseLayerID": 154,
					"baseLayerMD5": "9ea36789adf1c2d54f32a270cdbdff3d.png",
					"bitmapResolution": 2,
					"rotationCenterX": 22,
					"rotationCenterY": 12
				},
				{
					"costumeName": "zombie_01",
					"baseLayerID": 312,
					"baseLayerMD5": "8d7c51f9a8cd6444b84ef33e82fac994.png",
					"bitmapResolution": 2,
					"rotationCenterX": 16,
					"rotationCenterY": 44
				},
				{
					"costumeName": "zombie_02",
					"baseLayerID": 313,
					"baseLayerMD5": "fabadd056aeae709902458b878148c14.png",
					"bitmapResolution": 2,
					"rotationCenterX": 16,
					"rotationCenterY": 44
				},
				{
					"costumeName": "zombie_03",
					"baseLayerID": 314,
					"baseLayerMD5": "250c97f5276bef2b2068b34dd9b93063.png",
					"bitmapResolution": 2,
					"rotationCenterX": 16,
					"rotationCenterY": 44
				},
				{
					"costumeName": "crab_1",
					"baseLayerID": 315,
					"baseLayerMD5": "5f08736e22cd3117330d9a12e25de2ed.png",
					"bitmapResolution": 2,
					"rotationCenterX": 16,
					"rotationCenterY": 24
				},
				{
					"costumeName": "crab_2",
					"baseLayerID": 161,
					"baseLayerMD5": "31af06cd44bba1d398317eb2c9723b99.png",
					"bitmapResolution": 2,
					"rotationCenterX": 16,
					"rotationCenterY": 22
				},
				{
					"costumeName": "crab_3",
					"baseLayerID": 316,
					"baseLayerMD5": "63ec18ab7aadba8ed01fcde7f3c41665.png",
					"bitmapResolution": 2,
					"rotationCenterX": 16,
					"rotationCenterY": 22
				},
				{
					"costumeName": "goldfish",
					"baseLayerID": 317,
					"baseLayerMD5": "1c905bf540677b588b713807b444ccbc.png",
					"bitmapResolution": 2,
					"rotationCenterX": 14,
					"rotationCenterY": 18
				},
				{
					"costumeName": "goldfish2",
					"baseLayerID": 181,
					"baseLayerMD5": "960a58b283894332071a33f624701d8b.png",
					"bitmapResolution": 2,
					"rotationCenterX": 16,
					"rotationCenterY": 18
				},
				{
					"costumeName": "goldfish3",
					"baseLayerID": 318,
					"baseLayerMD5": "cc4a3d754ca3c2269a6e124e7c5b2fcd.png",
					"bitmapResolution": 2,
					"rotationCenterX": 14,
					"rotationCenterY": 18
				},
				{
					"costumeName": "jellyfish",
					"baseLayerID": 319,
					"baseLayerMD5": "aeb3771b722c8917ebf8cad9c0839d6a.png",
					"bitmapResolution": 2,
					"rotationCenterX": 12,
					"rotationCenterY": 14
				},
				{
					"costumeName": "jellyfish2",
					"baseLayerID": 320,
					"baseLayerMD5": "362c53e9461eea8d52b542925a6f6b68.png",
					"bitmapResolution": 2,
					"rotationCenterX": 12,
					"rotationCenterY": 14
				},
				{
					"costumeName": "jellyfish3",
					"baseLayerID": 321,
					"baseLayerMD5": "c909051321f056ae6869fa37166bcb7c.png",
					"bitmapResolution": 2,
					"rotationCenterX": 12,
					"rotationCenterY": 12
				},
				{
					"costumeName": "bat4",
					"baseLayerID": 322,
					"baseLayerMD5": "423ce0744a13eb16957b3fc7348eaca0.png",
					"bitmapResolution": 2,
					"rotationCenterX": 4,
					"rotationCenterY": 0
				},
				{
					"costumeName": "bat",
					"baseLayerID": 227,
					"baseLayerMD5": "632216ce59020a2a0d65cc12013d2db4.png",
					"bitmapResolution": 2,
					"rotationCenterX": 16,
					"rotationCenterY": 10
				},
				{
					"costumeName": "bat2",
					"baseLayerID": 323,
					"baseLayerMD5": "2a3feeee2355f78655aba4b1ec7221f5.png",
					"bitmapResolution": 2,
					"rotationCenterX": 14,
					"rotationCenterY": 6
				},
				{
					"costumeName": "bat3",
					"baseLayerID": 324,
					"baseLayerMD5": "5c4212d626f5e1ddf14789d1b9747549.png",
					"bitmapResolution": 2,
					"rotationCenterX": 8,
					"rotationCenterY": 8
				},
				{
					"costumeName": "bird",
					"baseLayerID": 325,
					"baseLayerMD5": "c136b0a0c9cf426ce71897b8f3a34f70.png",
					"bitmapResolution": 2,
					"rotationCenterX": 6,
					"rotationCenterY": 14
				},
				{
					"costumeName": "bird2",
					"baseLayerID": 326,
					"baseLayerMD5": "f6f95d687c2c094268fd2115400123d5.png",
					"bitmapResolution": 2,
					"rotationCenterX": 14,
					"rotationCenterY": 10
				},
				{
					"costumeName": "bird3",
					"baseLayerID": 327,
					"baseLayerMD5": "7b6e6161bfdcb86ffc03e670b4f27112.png",
					"bitmapResolution": 2,
					"rotationCenterX": 14,
					"rotationCenterY": 6
				},
				{
					"costumeName": "bird4",
					"baseLayerID": 328,
					"baseLayerMD5": "c72d190f950491fe63cce7447309c8ed.png",
					"bitmapResolution": 2,
					"rotationCenterX": 14,
					"rotationCenterY": 8
				},
				{
					"costumeName": "pyrana",
					"baseLayerID": 211,
					"baseLayerMD5": "ee322f40273c3e7e5bcef517c78f399f.png",
					"bitmapResolution": 2,
					"rotationCenterX": 12,
					"rotationCenterY": 20
				},
				{
					"costumeName": "pyrana2",
					"baseLayerID": 329,
					"baseLayerMD5": "9e38e25c37f5520893050bcf962b2a9f.png",
					"bitmapResolution": 2,
					"rotationCenterX": 14,
					"rotationCenterY": 20
				},
				{
					"costumeName": "pyrana3",
					"baseLayerID": 330,
					"baseLayerMD5": "cad41e976ffe952dd2d988e71e8491a9.png",
					"bitmapResolution": 2,
					"rotationCenterX": 12,
					"rotationCenterY": 20
				},
				{
					"costumeName": "slime-purple",
					"baseLayerID": 207,
					"baseLayerMD5": "26d28677d8bcb8e126282fc9ff6087ca.png",
					"bitmapResolution": 2,
					"rotationCenterX": 16,
					"rotationCenterY": 22
				},
				{
					"costumeName": "slime-purple2",
					"baseLayerID": 331,
					"baseLayerMD5": "c466113602821c2068df0c474d2eece2.png",
					"bitmapResolution": 2,
					"rotationCenterX": 14,
					"rotationCenterY": 24
				},
				{
					"costumeName": "slime-blue",
					"baseLayerID": 209,
					"baseLayerMD5": "04044dd3f4f1cc3d8863b88bc0c14da3.png",
					"bitmapResolution": 2,
					"rotationCenterX": 22,
					"rotationCenterY": 30
				},
				{
					"costumeName": "slime-blue2",
					"baseLayerID": 332,
					"baseLayerMD5": "d351ba633a244905f0636ecd0544f44b.png",
					"bitmapResolution": 2,
					"rotationCenterX": 20,
					"rotationCenterY": 32
				},
				{
					"costumeName": "shark",
					"baseLayerID": 333,
					"baseLayerMD5": "989635aebf2bf4cca93b10cb58286160.png",
					"bitmapResolution": 2,
					"rotationCenterX": 58,
					"rotationCenterY": 36
				},
				{
					"costumeName": "shark2",
					"baseLayerID": 334,
					"baseLayerMD5": "59015f65469eb1e2bf5ebd2136426fb3.png",
					"bitmapResolution": 2,
					"rotationCenterX": 42,
					"rotationCenterY": 36
				},
				{
					"costumeName": "shark3",
					"baseLayerID": 333,
					"baseLayerMD5": "989635aebf2bf4cca93b10cb58286160.png",
					"bitmapResolution": 2,
					"rotationCenterX": 58,
					"rotationCenterY": 36
				},
				{
					"costumeName": "shark4",
					"baseLayerID": 335,
					"baseLayerMD5": "4c3df6e38533cc89da137665d1e9e5a0.png",
					"bitmapResolution": 2,
					"rotationCenterX": 48,
					"rotationCenterY": 36
				},
				{
					"costumeName": "bunny-slime",
					"baseLayerID": 208,
					"baseLayerMD5": "9ae8a630958822e9dab634502a271cca.png",
					"bitmapResolution": 2,
					"rotationCenterX": 20,
					"rotationCenterY": 24
				},
				{
					"costumeName": "bunny-slime2",
					"baseLayerID": 336,
					"baseLayerMD5": "9a298ad8eb4d5296cedbe353278ac2c0.png",
					"bitmapResolution": 2,
					"rotationCenterX": 18,
					"rotationCenterY": 24
				},
				{
					"costumeName": "lava-bat2",
					"baseLayerID": 228,
					"baseLayerMD5": "bbbd37e0dd809b474c7a3f4525192a65.png",
					"bitmapResolution": 2,
					"rotationCenterX": 18,
					"rotationCenterY": 18
				},
				{
					"costumeName": "lava-bat3",
					"baseLayerID": 337,
					"baseLayerMD5": "94dff28c89ba452e7504cc3597c128ee.png",
					"bitmapResolution": 2,
					"rotationCenterX": 22,
					"rotationCenterY": 10
				},
				{
					"costumeName": "lava-bat4",
					"baseLayerID": 338,
					"baseLayerMD5": "84121e8d62871664f364cb92587a93b7.png",
					"bitmapResolution": 2,
					"rotationCenterX": 12,
					"rotationCenterY": 12
				},
				{
					"costumeName": "lava-slime",
					"baseLayerID": 210,
					"baseLayerMD5": "1e7fe85e1670de004ff98e36a676bbcd.png",
					"bitmapResolution": 2,
					"rotationCenterX": 16,
					"rotationCenterY": 22
				},
				{
					"costumeName": "lava-slime2",
					"baseLayerID": 339,
					"baseLayerMD5": "6488f99379bebea5f973d476308e95b6.png",
					"bitmapResolution": 2,
					"rotationCenterX": 14,
					"rotationCenterY": 24
				},
				{
					"costumeName": "Butterfly1",
					"baseLayerID": 340,
					"baseLayerMD5": "a5fd11959551d61d0d7e14706dc40f8f.png",
					"bitmapResolution": 2,
					"rotationCenterX": 10,
					"rotationCenterY": 10
				},
				{
					"costumeName": "Butterfly2",
					"baseLayerID": 341,
					"baseLayerMD5": "38ee62168f7c2e3d6fe54671d1b172a3.png",
					"bitmapResolution": 2,
					"rotationCenterX": 6,
					"rotationCenterY": 8
				},
				{
					"costumeName": "Butterfly3",
					"baseLayerID": 342,
					"baseLayerMD5": "220ed2ab828b9374c9361a419ac26cc5.png",
					"bitmapResolution": 2,
					"rotationCenterX": 4,
					"rotationCenterY": 8
				},
				{
					"costumeName": "SquirrelW2",
					"baseLayerID": 343,
					"baseLayerMD5": "42f4c0f7760f7a652926e89f3250574e.png",
					"bitmapResolution": 2,
					"rotationCenterX": 24,
					"rotationCenterY": 22
				},
				{
					"costumeName": "SquirrelW3",
					"baseLayerID": 344,
					"baseLayerMD5": "d15bcb8c4bcad6e4880de435ee0f6353.png",
					"bitmapResolution": 2,
					"rotationCenterX": 24,
					"rotationCenterY": 22
				},
				{
					"costumeName": "SquirrelW4",
					"baseLayerID": 345,
					"baseLayerMD5": "08a071dbc043403d8903dadec385e61e.png",
					"bitmapResolution": 2,
					"rotationCenterX": 24,
					"rotationCenterY": 19
				},
				{
					"costumeName": "SquirrelW5",
					"baseLayerID": 346,
					"baseLayerMD5": "ca8d6dee3771522222b8f506e154db7f.png",
					"bitmapResolution": 2,
					"rotationCenterX": 22,
					"rotationCenterY": 26
				},
				{
					"costumeName": "SquirrelW",
					"baseLayerID": 261,
					"baseLayerMD5": "67e7b45ae0c7a204f8c5931e07e18531.png",
					"bitmapResolution": 2,
					"rotationCenterX": 18,
					"rotationCenterY": 30
				},
				{
					"costumeName": "mouse2",
					"baseLayerID": 347,
					"baseLayerMD5": "a409057e6ed81084f6df133a1c71dc87.png",
					"bitmapResolution": 2,
					"rotationCenterX": 6,
					"rotationCenterY": 4
				},
				{
					"costumeName": "mouse3",
					"baseLayerID": 348,
					"baseLayerMD5": "795b6cab721e33145e23f9cfa21399ca.png",
					"bitmapResolution": 2,
					"rotationCenterX": 6,
					"rotationCenterY": 4
				},
				{
					"costumeName": "mouse4",
					"baseLayerID": 347,
					"baseLayerMD5": "a409057e6ed81084f6df133a1c71dc87.png",
					"bitmapResolution": 2,
					"rotationCenterX": 6,
					"rotationCenterY": 4
				},
				{
					"costumeName": "mouse5",
					"baseLayerID": 349,
					"baseLayerMD5": "fb0052ffdea7074632731a42135c3d12.png",
					"bitmapResolution": 2,
					"rotationCenterX": 6,
					"rotationCenterY": 4
				},
				{
					"costumeName": "mouse",
					"baseLayerID": 350,
					"baseLayerMD5": "633ef31480b1eb0cba42705b0000b821.png",
					"bitmapResolution": 2,
					"rotationCenterX": 6,
					"rotationCenterY": 8
				},
				{
					"costumeName": "Firefly",
					"baseLayerID": 351,
					"baseLayerMD5": "ad229e3dbfc63ec58c652ac0f4909f11.png",
					"bitmapResolution": 2,
					"rotationCenterX": 6,
					"rotationCenterY": 6
				},
				{
					"costumeName": "Firefly2",
					"baseLayerID": 352,
					"baseLayerMD5": "7533f9a21466065781d0e7f03c7e15de.png",
					"bitmapResolution": 2,
					"rotationCenterX": 6,
					"rotationCenterY": 4
				},
				{
					"costumeName": "Firefly3",
					"baseLayerID": 353,
					"baseLayerMD5": "6bd914498888315165a5324e4ce2313c.png",
					"bitmapResolution": 2,
					"rotationCenterX": 6,
					"rotationCenterY": 6
				},
				{
					"costumeName": "Eye-of-Cthulhu",
					"baseLayerID": 354,
					"baseLayerMD5": "d1606fdf99b7aa4d291f4206f69300b6.png",
					"bitmapResolution": 2,
					"rotationCenterX": 92,
					"rotationCenterY": 54
				}],
			"currentCostumeIndex": 0,
			"scratchX": -246,
			"scratchY": -201,
			"scale": 3,
			"direction": 90,
			"rotationStyle": "leftRight",
			"isDraggable": false,
			"indexInLibrary": 10,
			"visible": false,
			"spriteInfo": {
			}
		},
		{
			"objName": "Door",
			"variables": [{
					"name": "isClone",
					"value": 0,
					"isPersistent": false
				},
				{
					"name": "x",
					"value": 269.5,
					"isPersistent": false
				},
				{
					"name": "y",
					"value": 122,
					"isPersistent": false
				},
				{
					"name": "Tile Index",
					"value": 42970,
					"isPersistent": false
				},
				{
					"name": "tmp",
					"value": 0,
					"isPersistent": false
				}],
			"scripts": [[30,
					182,
					[["whenIReceive", "Open Door"],
						["doIf",
							["|",
								["<", ["readVariable", "tmp"], "1"],
								["not", ["=", ["getAttribute:of:", "Tile Index", "Player"], ["readVariable", "Tile Index"]]]],
							[["setVar:to:", "Tile Index", ["getAttribute:of:", "Tile Index", "Player"]],
								["call", "Set Direction %n typ: %n", ["getAttribute:of:", "dir", "Player"], ["getLine:ofList:", ["readVariable", "Tile Index"], "_Level"]]]],
						["setVar:to:",
							"x",
							["+", ["%", ["-", ["readVariable", "Tile Index"], 1], ["readVariable", "MAP_WIDTH"]], 0.5]],
						["setVar:to:",
							"y",
							["computeFunction:of:", "floor", ["\/", ["-", ["readVariable", "Tile Index"], 1], ["readVariable", "MAP_WIDTH"]]]],
						["setVar:to:", "tmp", "20"]]],
				[601,
					182.05,
					[["procDef", "Set Direction %n typ: %n", ["dir", "typ"], [1, 1], true],
						["doIf",
							["not", ["=", ["heading"], ["getParam", "dir", "r"]]],
							[["heading:", ["getParam", "dir", "r"]]]],
						["doIfElse",
							["=", ["getParam", "typ", "r"], "34"],
							[["lookLike:", "door-open"]],
							[["doIfElse",
									["=", ["getParam", "typ", "r"], "243"],
									[["lookLike:", "door-open-iron"]],
									[["doIfElse",
											["=", ["getParam", "typ", "r"], "245"],
											[["lookLike:", "door-open-glass"]],
											[["doIfElse", ["=", ["getParam", "typ", "r"], "247"], [["lookLike:", "door-open-obsidian"]], null]]]]]]]]],
				[26,
					489,
					[["whenIReceive", "animate"],
						["doIf",
							[">", ["readVariable", "tmp"], "0"],
							[["xpos:",
									["computeFunction:of:",
										"floor",
										["*", ["-", ["readVariable", "x"], ["readVariable", "SCROLL_X"]], ["readVariable", "TILE_SIZE"]]]],
								["ypos:",
									["computeFunction:of:",
										"floor",
										["*", ["-", ["readVariable", "y"], ["readVariable", "SCROLL_Y"]], ["readVariable", "TILE_SIZE"]]]],
								["show"],
								["changeVar:by:", "tmp", -1],
								["doIf", ["<", ["readVariable", "tmp"], "1"], [["hide"]]]]]]],
				[32,
					22,
					[["whenIReceive", "Clone Sprites"],
						["hide"],
						["lookLike:", "door-open"],
						["setSizeTo:", 253],
						["setVar:to:", "isClone", 0]]]],
			"sounds": [{
					"soundName": "pop",
					"soundID": 0,
					"md5": "83a9787d4cb6f3b7632b4ddfebf74367.wav",
					"sampleCount": 258,
					"rate": 11025,
					"format": ""
				}],
			"costumes": [{
					"costumeName": "door-open",
					"baseLayerID": 355,
					"baseLayerMD5": "2be54e296826faeee00c28af84d6c27e.png",
					"bitmapResolution": 2,
					"rotationCenterX": 8,
					"rotationCenterY": 64
				},
				{
					"costumeName": "door-open-iron",
					"baseLayerID": 356,
					"baseLayerMD5": "555b16873d09562732c6f3b411819de8.png",
					"bitmapResolution": 2,
					"rotationCenterX": 8,
					"rotationCenterY": 64
				},
				{
					"costumeName": "door-open-glass",
					"baseLayerID": 357,
					"baseLayerMD5": "71a649023186de5982efa95396d089c5.png",
					"bitmapResolution": 2,
					"rotationCenterX": 8,
					"rotationCenterY": 64
				},
				{
					"costumeName": "door-open-obsidian",
					"baseLayerID": 358,
					"baseLayerMD5": "16ff9b6808a64f133a5529739befaa2a.png",
					"bitmapResolution": 2,
					"rotationCenterX": 8,
					"rotationCenterY": 64
				}],
			"currentCostumeIndex": 0,
			"scratchX": -150,
			"scratchY": -177,
			"scale": 2.53,
			"direction": 90,
			"rotationStyle": "leftRight",
			"isDraggable": false,
			"indexInLibrary": 16,
			"visible": false,
			"spriteInfo": {
			}
		},
		{
			"objName": "Particles",
			"variables": [{
					"name": "isClone",
					"value": 0,
					"isPersistent": false
				},
				{
					"name": "x",
					"value": 284.767752632292,
					"isPersistent": false
				},
				{
					"name": "y",
					"value": 123.1,
					"isPersistent": false
				},
				{
					"name": "Tile Index",
					"value": 0,
					"isPersistent": false
				},
				{
					"name": "tmp",
					"value": "",
					"isPersistent": false
				},
				{
					"name": "sx",
					"value": 0,
					"isPersistent": false
				},
				{
					"name": "sy",
					"value": 15,
					"isPersistent": false
				},
				{
					"name": "time",
					"value": 0,
					"isPersistent": false
				},
				{
					"name": "tok",
					"value": "58.5",
					"isPersistent": false
				},
				{
					"name": "Tile Is Solid",
					"value": 3,
					"isPersistent": false
				}],
			"scripts": [[29,
					21,
					[["whenIReceive", "Clone Sprites"],
						["hide"],
						["setSizeTo:", 253],
						["setVar:to:", "isClone", 0],
						["setVar:to:", "time", 0]]],
				[1003,
					23.25,
					[["procDef", "Place (direct) %n %n", ["idx", "typ"], [1, 1], true],
						["setLine:ofList:to:", ["getParam", "idx", "r"], "_Level", ["getParam", "typ", "r"]],
						["append:toList:", ["getParam", "idx", "r"], "@Place"],
						["append:toList:", ["getParam", "typ", "r"], "@Place"]]],
				[1003.95,
					222.45,
					[["procDef", "Is Tree %n last tmp %n", ["idx", "l_tmp"], [1, 1], true],
						["setVar:to:", "Tile Index", ["getLine:ofList:", ["getParam", "idx", "r"], "_Level"]],
						["setVar:to:", "Tile Is Solid", "1"],
						["doIf",
							[">", ["readVariable", "Tile Index"], "0"],
							[["setVar:to:",
									"tmp",
									["getLine:ofList:", ["+", 4, ["*", ["readVariable", "Tile Index"], ["readVariable", "TMul"]]], "_TileData"]],
								["doIf",
									["=", ["readVariable", "tmp"], "10"],
									[["setVar:to:", "tmp", ["readVariable", "Tile Index"]],
										["call", "Place (direct) %n %n", ["getParam", "idx", "r"], 0],
										["changeVar:by:", "x", 2],
										["doIf",
											["=", ["randomFrom:to:", 1, 2], "1"],
											[["changeVar:by:", "sx", -1],
												["doIf", ["=", ["readVariable", "sx"], "0"], [["setVar:to:", "Tile Is Solid", "2"]]],
												["setVar:to:", "Tile Index", ["getParam", "idx", "r"]],
												["createCloneOf", "_myself_"]]],
										["doIf",
											["not",
												["|",
													["<", ["readVariable", "tmp"], "6"],
													["|",
														["=", ["readVariable", "tmp"], "8"],
														["|",
															["=", ["readVariable", "tmp"], "10"],
															["|",
																["=", ["readVariable", "tmp"], "13"],
																["|", ["=", ["readVariable", "tmp"], "16"], ["=", ["readVariable", "tmp"], "19"]]]]]]],
											[["call", "Is Tree %n last tmp %n", ["-", ["getParam", "idx", "r"], 1], ["readVariable", "tmp"]]]],
										["doIf",
											["not",
												["|",
													["=", ["readVariable", "tmp"], "3"],
													["|",
														["=", ["readVariable", "tmp"], "6"],
														["|",
															["=", ["readVariable", "tmp"], "9"],
															["|",
																["=", ["readVariable", "tmp"], "12"],
																["|", ["=", ["readVariable", "tmp"], "15"], [">", ["readVariable", "tmp"], "17"]]]]]]],
											[["call", "Is Tree %n last tmp %n", ["+", ["getParam", "idx", "r"], 1], ["readVariable", "tmp"]]]],
										["doIf",
											["not",
												["|",
													["|", ["=", ["readVariable", "tmp"], "3"], ["=", ["readVariable", "tmp"], "5"]],
													["&", [">", ["readVariable", "tmp"], "8"], ["<", ["readVariable", "tmp"], "13"]]]],
											[["call",
													"Is Tree %n last tmp %n",
													["-", ["getParam", "idx", "r"], ["readVariable", "MAP_WIDTH"]],
													["readVariable", "tmp"]]]],
										["doIf",
											["not",
												["|",
													["=", ["readVariable", "tmp"], "5"],
													["|", ["=", ["readVariable", "tmp"], "9"], [">", ["readVariable", "tmp"], "15"]]]],
											[["call",
													"Is Tree %n last tmp %n",
													["+", ["getParam", "idx", "r"], ["readVariable", "MAP_WIDTH"]],
													["readVariable", "tmp"]]]]]]]],
						["setVar:to:", "tmp", ["getParam", "l_tmp", "r"]]]],
				[1001.1,
					1215.3,
					[["procDef", "Position %n %n", ["x", "y"], [1, 1], false],
						["gotoX:y:", ["getParam", "x", "r"], ["getParam", "y", "r"]],
						["doIfElse",
							["&",
								["=", ["xpos"], ["getParam", "x", "r"]],
								["=", ["ypos"], ["getParam", "y", "r"]]],
							[["show"]],
							[["deleteClone"]]]]],
				[1002.7,
					1455.05,
					[["procDef", "Read Token", [], [], true],
						["setVar:to:", "tok", ""],
						["doUntil",
							["=", ["letter:of:", ["readVariable", "sy"], ["readVariable", "tmp"]], " "],
							[["setVar:to:",
									"tok",
									["concatenate:with:", ["readVariable", "tok"], ["letter:of:", ["readVariable", "sy"], ["readVariable", "tmp"]]]],
								["changeVar:by:", "sy", 1]]],
						["changeVar:by:", "sy", 1]]],
				[1003.5,
					1697.4,
					[["procDef", "Process Particle", [], [], true],
						["setLine:ofList:to:", 24, "_Chat", ""],
						["setVar:to:", "sy", "1"],
						["doUntil",
							[">", ["readVariable", "sy"], ["stringLength:", ["readVariable", "tmp"]]],
							[["call", "Read Token"],
								["setVar:to:", "Tile Is Solid", ["readVariable", "tok"]],
								["call", "Read Token"],
								["setVar:to:", "x", ["readVariable", "tok"]],
								["call", "Read Token"],
								["setVar:to:", "y", ["readVariable", "tok"]],
								["createCloneOf", "_myself_"]]]]],
				[2702.85,
					61,
					[["procDef", "Find Slot Typ %n add %n", ["typ", "inc"], [1, 1], true],
						["doIfElse",
							[">", ["getParam", "typ", "r"], "0"],
							[["doIfElse",
									["&",
										[">", ["getParam", "typ", "r"], "213"],
										["<", ["getParam", "typ", "r"], "217"]],
									[["setVar:to:", "Tile Index", "49"]],
									[["setVar:to:", "Tile Index", "1"],
										["doUntil",
											["|",
												[">", ["readVariable", "Tile Index"], "48"],
												["=", ["getLine:ofList:", ["readVariable", "Tile Index"], "_inv"], ["getParam", "typ", "r"]]],
											[["changeVar:by:", "Tile Index", 2]]]]],
								["doIfElse",
									[">", ["readVariable", "Tile Index"], "48"],
									[["doIfElse",
											["=", ["getParam", "inc", "r"], "0"],
											[["setVar:to:", "Tile Index", "0"]],
											[["setVar:to:", "Tile Index", "1"],
												["doUntil",
													["|",
														[">", ["readVariable", "Tile Index"], "48"],
														["=", ["getLine:ofList:", ["readVariable", "Tile Index"], "_inv"], "0"]],
													[["changeVar:by:", "Tile Index", 2]]],
												["doIfElse",
													[">", ["readVariable", "Tile Index"], "48"],
													[["setVar:to:", "Tile Index", "0"]],
													[["setLine:ofList:to:", ["readVariable", "Tile Index"], "_inv", ["getParam", "typ", "r"]],
														["setLine:ofList:to:", ["+", ["readVariable", "Tile Index"], 1], "_inv", ["getParam", "inc", "r"]],
														["call", "Pickup Message, item %n count %n", ["getParam", "typ", "r"], ["getParam", "inc", "r"]],
														["setVar:to:", "Tile Index", ["\/", ["+", ["readVariable", "Tile Index"], 1], 2]],
														["setVar:to:", "inv_change", "2"]]]]]],
									[["setLine:ofList:to:",
											["+", ["readVariable", "Tile Index"], 1],
											"_inv",
											["+",
												["getParam", "inc", "r"],
												["getLine:ofList:", ["+", ["readVariable", "Tile Index"], 1], "_inv"]]],
										["call", "Pickup Message, item %n count %n", ["getParam", "typ", "r"], ["getParam", "inc", "r"]],
										["setVar:to:", "Tile Index", ["\/", ["+", ["readVariable", "Tile Index"], 1], 2]],
										["setVar:to:", "inv_change", "2"]]]],
							[["setVar:to:", "Tile Index", "0"], ["call", "Pickup Message, item %n count %n", -1, 0]]]]],
				[2031,
					27,
					[["whenCloned"],
						["setVar:to:", "isClone", ["randomFrom:to:", 1, 2]],
						["doIfElse",
							["<", ["readVariable", "Tile Is Solid"], "3"],
							[["lookLike:", ["readVariable", "Tile Is Solid"]],
								["setVar:to:",
									"x",
									["+", ["%", ["-", ["readVariable", "Tile Index"], 1], ["readVariable", "MAP_WIDTH"]], 0.5]],
								["setVar:to:",
									"y",
									["computeFunction:of:", "floor", ["\/", ["-", ["readVariable", "Tile Index"], 1], ["readVariable", "MAP_WIDTH"]]]],
								["setVar:to:", "sy", "0"]],
							[["doIfElse",
									["<", ["readVariable", "Tile Is Solid"], "6"],
									[["lookLike:", ["readVariable", "Tile Is Solid"]],
										["setVar:to:", "sy", ["randomFrom:to:", 0.03, 0.08]],
										["setVar:to:", "time", ["randomFrom:to:", 15, 22]]],
									[["changeVar:by:", "x", ["randomFrom:to:", -0.35, 0.35]],
										["changeVar:by:", "y", ["randomFrom:to:", -0.35, 0.35]],
										["setVar:to:", "sx", ["randomFrom:to:", -0.15, 0.15]],
										["setVar:to:", "sy", ["randomFrom:to:", 0.05, 0.261]],
										["doIfElse",
											["<", ["readVariable", "Tile Is Solid"], "14"],
											[["lookLike:", ["readVariable", "Tile Is Solid"]],
												["setGraphicEffect:to:", "ghost", ["randomFrom:to:", 30, 60]],
												["setVar:to:", "time", ["randomFrom:to:", 8, 15]]],
											[["doIfElse",
													[">", ["readVariable", "Tile Is Solid"], "1000"],
													[["setVar:to:", "isClone", ["readVariable", "Tile Is Solid"]],
														["setVar:to:", "time", ["*", 30, 15]],
														["doIfElse",
															["<", ["readVariable", "Tile Is Solid"], "2000"],
															[["lookLike:", "coin_copper"]],
															[["doIfElse",
																	["<", ["readVariable", "Tile Is Solid"], "3000"],
																	[["lookLike:", "coin_silver"]],
																	[["doIfElse", ["<", ["readVariable", "Tile Is Solid"], "4000"], [["lookLike:", "coin_gold"]], null]]]]]],
													[["lookLike:", ["readVariable", "Tile Is Solid"]],
														["setRotationStyle", "all around"],
														["heading:", ["randomFrom:to:", 0, 360]],
														["setVar:to:", "time", ["randomFrom:to:", 20, 30]]]]]]]]]]]],
				[2704.9,
					1060,
					[["procDef", "Check Tile at x: %n y: %n", ["x", "y"], [1, 1], true],
						["doIfElse",
							["|",
								["<", ["getParam", "x", "r"], "0"],
								["not", ["<", ["getParam", "x", "r"], ["readVariable", "MAP_WIDTH"]]]],
							[["setVar:to:", "Tile Index", "0"], ["setVar:to:", "Tile Is Solid", "10"]],
							[["setVar:to:",
									"Tile Index",
									["+",
										["+",
											["*", ["computeFunction:of:", "floor", ["getParam", "y", "r"]], ["readVariable", "MAP_WIDTH"]],
											["computeFunction:of:", "floor", ["getParam", "x", "r"]]],
										1]],
								["setVar:to:", "Tile Is Solid", ["getLine:ofList:", ["readVariable", "Tile Index"], "_Level"]],
								["doIf",
									[">", ["readVariable", "Tile Is Solid"], "0"],
									[["setVar:to:",
											"Tile Is Solid",
											["getLine:ofList:", ["+", 3, ["*", ["readVariable", "Tile Is Solid"], ["readVariable", "TMul"]]], "_TileData"]],
										["doIf",
											["|", ["=", ["readVariable", "Tile Is Solid"], "4"], ["=", ["readVariable", "Tile Is Solid"], "4.5"]],
											[["setVar:to:", "Tile Is Solid", "99"]]]]]]]]],
				[4472, 3448, [["not", false]]],
				[3527.6,
					63.5,
					[["procDef", "Pickup Message, item %n count %n", ["typ", "count"], [1, 1], false],
						["doIfElse",
							["=", ["getParam", "typ", "r"], ["getLine:ofList:", 32, "_Chat"]],
							[["setLine:ofList:to:", 32, "_Chat", ""],
								["call",
									"Pickup Message, item %n count %n",
									["getParam", "typ", "r"],
									["+", ["getLine:ofList:", 33, "_Chat"], ["getParam", "count", "r"]]]],
							[["doIfElse",
									["=", ["getParam", "typ", "r"], ["getLine:ofList:", 30, "_Chat"]],
									[["setLine:ofList:to:", 31, "_Chat", ["+", ["getLine:ofList:", 31, "_Chat"], ["getParam", "count", "r"]]]],
									[["setLine:ofList:to:", 32, "_Chat", ["getLine:ofList:", 30, "_Chat"]],
										["setLine:ofList:to:", 33, "_Chat", ["getLine:ofList:", 31, "_Chat"]],
										["setLine:ofList:to:", 30, "_Chat", ["getParam", "typ", "r"]],
										["setLine:ofList:to:", 31, "_Chat", ["getParam", "count", "r"]]]],
								["setLine:ofList:to:", 29, "_Chat", "1"]]]]],
				[29,
					644,
					[["whenIReceive", "animate"],
						["doIfElse",
							[">", ["readVariable", "isClone"], "0"],
							[["doIfElse",
									["<", ["costumeIndex"], "3"],
									[["changeVar:by:", "sy", 0.05],
										["setVar:to:", "sx", ["\/", ["distanceTo:", "Player"], ["readVariable", "TILE_SIZE"]]],
										["doIfElse",
											[">", ["readVariable", "sy"], ["readVariable", "sx"]],
											[["deleteClone"]],
											[["changeVar:by:",
													"x",
													["*",
														["\/", ["-", ["getAttribute:of:", "x", "Player"], ["readVariable", "x"]], ["readVariable", "sx"]],
														["readVariable", "sy"]]],
												["changeVar:by:",
													"y",
													["*",
														["\/", ["-", ["getAttribute:of:", "y", "Player"], ["readVariable", "y"]], ["readVariable", "sx"]],
														["readVariable", "sy"]]]]]],
									[["doIfElse",
											["<", ["costumeIndex"], "6"],
											[["changeVar:by:", "x", ["randomFrom:to:", -0.05, 0.05]],
												["changeVar:by:", "y", ["readVariable", "sy"]],
												["doIfElse",
													["=",
														["getLine:ofList:",
															["+",
																["*", ["computeFunction:of:", "floor", ["readVariable", "y"]], ["readVariable", "MAP_WIDTH"]],
																["+", ["computeFunction:of:", "floor", ["readVariable", "x"]], 1]],
															"_Level"],
														"160"],
													null,
													[["deleteClone"]]],
												["changeVar:by:", "time", -1],
												["doIf",
													["<", ["readVariable", "time"], "0"],
													[["doIfElse",
															["<", ["costumeIndex"], "5"],
															[["nextCostume"], ["setVar:to:", "time", ["randomFrom:to:", 10, 20]]],
															[["deleteClone"]]]]]],
											[["changeVar:by:", "time", -1],
												["doIf", ["<", ["readVariable", "time"], "0"], [["deleteClone"]]],
												["doIfElse",
													[">", ["readVariable", "isClone"], "1000"],
													[["setVar:to:", "sy", ["*", ["-", ["readVariable", "sy"], 0.05], 0.92]],
														["call", "Check Tile at x: %n y: %n", ["readVariable", "x"], ["+", ["readVariable", "y"], ["readVariable", "sy"]]],
														["doIfElse",
															["<", ["readVariable", "Tile Is Solid"], "7"],
															[["changeVar:by:", "y", ["readVariable", "sy"]]],
															[["setVar:to:", "sy", ["*", -0.25, ["readVariable", "sy"]]],
																["setVar:to:", "sx", ["*", 0.5, ["readVariable", "sx"]]]]],
														["call", "Check Tile at x: %n y: %n", ["+", ["readVariable", "x"], ["readVariable", "sx"]], ["readVariable", "y"]],
														["doIfElse",
															["<", ["readVariable", "Tile Is Solid"], "7"],
															[["changeVar:by:", "x", ["readVariable", "sx"]]],
															[["setVar:to:", "sx", ["*", -0.25, ["readVariable", "sx"]]]]],
														["doIf",
															["<",
																["computeFunction:of:", "abs", ["-", ["readVariable", "x"], ["getAttribute:of:", "x", "Player"]]],
																"0.35"],
															[["doIf",
																	["<",
																		["computeFunction:of:", "abs", ["-", ["readVariable", "y"], ["getAttribute:of:", "y", "Player"]]],
																		"0.3"],
																	[["doIfElse",
																			["<", ["readVariable", "isClone"], "2000"],
																			[["call", "Find Slot Typ %n add %n", 226, ["-", ["readVariable", "isClone"], 1000]]],
																			[["doIfElse",
																					["<", ["readVariable", "isClone"], "3000"],
																					[["call", "Find Slot Typ %n add %n", 227, ["-", ["readVariable", "isClone"], 2000]]],
																					[["doIfElse",
																							["<", ["readVariable", "isClone"], "4000"],
																							[["call", "Find Slot Typ %n add %n", 228, ["-", ["readVariable", "isClone"], 3000]]],
																							null]]]]],
																		["deleteClone"]]]]]],
													[["changeVar:by:", "x", ["readVariable", "sx"]],
														["changeVar:by:", "y", ["readVariable", "sy"]],
														["changeVar:by:", "sy", -0.02],
														["doIf",
															[">", ["costumeIndex"], "13"],
															[["turnRight:", ["-", ["*", ["readVariable", "isClone"], 30], 45]]]]]]]]]],
								["call",
									"Position %n %n",
									["computeFunction:of:",
										"floor",
										["*", ["-", ["readVariable", "x"], ["readVariable", "SCROLL_X"]], ["readVariable", "TILE_SIZE"]]],
									["computeFunction:of:",
										"floor",
										["*", ["-", ["readVariable", "y"], ["readVariable", "SCROLL_Y"]], ["readVariable", "TILE_SIZE"]]]]],
							[["setVar:to:", "tmp", ["getLine:ofList:", 24, "_Chat"]],
								["doIfElse", ["=", ["readVariable", "tmp"], ""], null, [["call", "Process Particle"]]],
								["doIf",
									["&",
										["=", ["getAttribute:of:", "In Liquid", "Player"], "2"],
										[">", ["getAttribute:of:", "Player Health", "Player"], "0"]],
									[["changeVar:by:", "time", -1],
										["doIf",
											["<", ["readVariable", "time"], "0"],
											[["setVar:to:", "time", ["randomFrom:to:", 5, 18]],
												["setVar:to:", "Tile Is Solid", ["randomFrom:to:", 3, 4]],
												["setVar:to:",
													"x",
													["+", ["getAttribute:of:", "x", "Player"], ["*", ["getAttribute:of:", "dir", "Player"], 0.0055]]],
												["setVar:to:", "y", ["+", ["getAttribute:of:", "y", "Player"], 1.1]],
												["createCloneOf", "_myself_"]]]]]]]]],
				[29,
					204,
					[["whenIReceive", "harvest tree"],
						["doIf", [">", ["readVariable", "isClone"], "0"], [["stopScripts", "this script"]]],
						["setVar:to:", "Tile Is Solid", "1"],
						["setVar:to:", "sx", ["randomFrom:to:", 4, 7]],
						["setVar:to:", "x", "0"],
						["setVar:to:", "y", ["getAttribute:of:", "find slot id", "Cursor"]],
						["call", "Is Tree %n last tmp %n", ["getAttribute:of:", "digIdx", "Cursor"], 0],
						["doIfElse",
							[">", ["readVariable", "y"], "0"],
							[["setLine:ofList:to:",
									["*", ["readVariable", "y"], 2],
									"_inv",
									["+", ["getLine:ofList:", ["*", ["readVariable", "y"], 2], "_inv"], ["readVariable", "x"]]],
								["call",
									"Pickup Message, item %n count %n",
									["getLine:ofList:", ["-", ["*", ["readVariable", "y"], 2], 1], "_inv"],
									["readVariable", "x"]]],
							[["call", "Pickup Message, item %n count %n", -1, 0]]]]]],
			"sounds": [{
					"soundName": "pop",
					"soundID": 0,
					"md5": "83a9787d4cb6f3b7632b4ddfebf74367.wav",
					"sampleCount": 258,
					"rate": 11025,
					"format": ""
				}],
			"costumes": [{
					"costumeName": "Wood",
					"baseLayerID": 359,
					"baseLayerMD5": "db2103705583bb8fcb5759875d3a7366.png",
					"bitmapResolution": 2,
					"rotationCenterX": 12,
					"rotationCenterY": 10
				},
				{
					"costumeName": "Acorn",
					"baseLayerID": 36,
					"baseLayerMD5": "94d7603239dbc1fd7a754aca99a94cd7.png",
					"bitmapResolution": 2,
					"rotationCenterX": 10,
					"rotationCenterY": 10
				},
				{
					"costumeName": "bubble",
					"baseLayerID": 360,
					"baseLayerMD5": "d9b8bed78e8b2e6f46f0b33a8343da64.png",
					"bitmapResolution": 2,
					"rotationCenterX": 4,
					"rotationCenterY": 4
				},
				{
					"costumeName": "bubble2",
					"baseLayerID": 361,
					"baseLayerMD5": "d825c1b50f9b82c73af15d6247448ca4.png",
					"bitmapResolution": 2,
					"rotationCenterX": 3,
					"rotationCenterY": 3
				},
				{
					"costumeName": "bubble3",
					"baseLayerID": 362,
					"baseLayerMD5": "af953ecc9ca878c3fec335163448e3d0.png",
					"bitmapResolution": 2,
					"rotationCenterX": 2,
					"rotationCenterY": 2
				},
				{
					"costumeName": "slime-green-1",
					"baseLayerID": 363,
					"baseLayerMD5": "f513321078b94ccbc3fe8c2ce0f52344.png",
					"bitmapResolution": 2,
					"rotationCenterX": 4,
					"rotationCenterY": 4
				},
				{
					"costumeName": "slime-green-2",
					"baseLayerID": 364,
					"baseLayerMD5": "05c37c83170a413292941105080aea73.png",
					"bitmapResolution": 2,
					"rotationCenterX": 2,
					"rotationCenterY": 2
				},
				{
					"costumeName": "brown",
					"baseLayerID": 365,
					"baseLayerMD5": "a6c5712c7cdf05c041db63b91b9b363f.png",
					"bitmapResolution": 2,
					"rotationCenterX": 4,
					"rotationCenterY": 4
				},
				{
					"costumeName": "brown2",
					"baseLayerID": 366,
					"baseLayerMD5": "e8a11e7d5bed052f9cd3755d43342fc5.png",
					"bitmapResolution": 2,
					"rotationCenterX": 4,
					"rotationCenterY": 4
				},
				{
					"costumeName": "brown3",
					"baseLayerID": 367,
					"baseLayerMD5": "5299f49ceac86696dc60f8aa532934e5.png",
					"bitmapResolution": 2,
					"rotationCenterX": 4,
					"rotationCenterY": 4
				},
				{
					"costumeName": "gray",
					"baseLayerID": 368,
					"baseLayerMD5": "f6b0857190ccfde35a89a8437d564e5d.png",
					"bitmapResolution": 2,
					"rotationCenterX": 4,
					"rotationCenterY": 4
				},
				{
					"costumeName": "gray2",
					"baseLayerID": 369,
					"baseLayerMD5": "c4c4767fb524cf3ab7606f0ad20d7f8c.png",
					"bitmapResolution": 2,
					"rotationCenterX": 2,
					"rotationCenterY": 2
				},
				{
					"costumeName": "gray3",
					"baseLayerID": 370,
					"baseLayerMD5": "ad13aa7e4e7f9bfc2a4796d570c8dca9.png",
					"bitmapResolution": 2,
					"rotationCenterX": 4,
					"rotationCenterY": 4
				},
				{
					"costumeName": "Gore_6",
					"baseLayerID": 371,
					"baseLayerMD5": "09b50d7b0827f1cd3b76c7c17e1d93ed.png",
					"bitmapResolution": 2,
					"rotationCenterX": 10,
					"rotationCenterY": 6
				},
				{
					"costumeName": "Gore_7",
					"baseLayerID": 372,
					"baseLayerMD5": "da9e1ecc2ca216cd9230995f104a3fbd.png",
					"bitmapResolution": 2,
					"rotationCenterX": 10,
					"rotationCenterY": 12
				},
				{
					"costumeName": "Gore_82",
					"baseLayerID": 373,
					"baseLayerMD5": "eb252e14c5e6e8f835f49589c6c413e7.png",
					"bitmapResolution": 2,
					"rotationCenterX": 4,
					"rotationCenterY": 6
				},
				{
					"costumeName": "Gore_76",
					"baseLayerID": 374,
					"baseLayerMD5": "bca36ad848adf220c7dd209124b8a504.png",
					"bitmapResolution": 2,
					"rotationCenterX": 8,
					"rotationCenterY": 10
				},
				{
					"costumeName": "Gore_77",
					"baseLayerID": 375,
					"baseLayerMD5": "99a913cd51b68f47370dd2c376c2ed70.png",
					"bitmapResolution": 2,
					"rotationCenterX": 6,
					"rotationCenterY": 8
				},
				{
					"costumeName": "Gore_92",
					"baseLayerID": 376,
					"baseLayerMD5": "5faa17111dcdf6844d413ad83707cf40.png",
					"bitmapResolution": 2,
					"rotationCenterX": 10,
					"rotationCenterY": 10
				},
				{
					"costumeName": "Gore_89",
					"baseLayerID": 377,
					"baseLayerMD5": "84d0f623855386cc95c5acae01275df7.png",
					"bitmapResolution": 2,
					"rotationCenterX": 20,
					"rotationCenterY": 10
				},
				{
					"costumeName": "Gore_91",
					"baseLayerID": 378,
					"baseLayerMD5": "6103a69a0230f4dd8dd61e926deb065c.png",
					"bitmapResolution": 2,
					"rotationCenterX": 12,
					"rotationCenterY": 12
				},
				{
					"costumeName": "Gore_90",
					"baseLayerID": 379,
					"baseLayerMD5": "b2c27dc112a0508dadb28d3d2f548a1f.png",
					"bitmapResolution": 2,
					"rotationCenterX": 20,
					"rotationCenterY": 14
				},
				{
					"costumeName": "Gore_95",
					"baseLayerID": 380,
					"baseLayerMD5": "8ad41cfa188811d1573dddb1b771c8a2.png",
					"bitmapResolution": 2,
					"rotationCenterX": 6,
					"rotationCenterY": 8
				},
				{
					"costumeName": "Gore_96",
					"baseLayerID": 381,
					"baseLayerMD5": "0196eacf49f5abef5a004d03af65b47a.png",
					"bitmapResolution": 2,
					"rotationCenterX": 12,
					"rotationCenterY": 8
				},
				{
					"costumeName": "Gore_553",
					"baseLayerID": 382,
					"baseLayerMD5": "34df5710128ff42d3d1877f80036b45f.png",
					"bitmapResolution": 2,
					"rotationCenterX": 10,
					"rotationCenterY": 10
				},
				{
					"costumeName": "Gore_554",
					"baseLayerID": 383,
					"baseLayerMD5": "463175fa253a2e793665a5a9590b9f0c.png",
					"bitmapResolution": 2,
					"rotationCenterX": 4,
					"rotationCenterY": 6
				},
				{
					"costumeName": "Gore_241",
					"baseLayerID": 384,
					"baseLayerMD5": "c78aba81bb7ce20143dfaa1a7322ced0.png",
					"bitmapResolution": 2,
					"rotationCenterX": 8,
					"rotationCenterY": 12
				},
				{
					"costumeName": "Gore_5",
					"baseLayerID": 385,
					"baseLayerMD5": "cae5003cdf273b1b55de9b662d45e923.png",
					"bitmapResolution": 2,
					"rotationCenterX": 10,
					"rotationCenterY": 8
				},
				{
					"costumeName": "Gore_245",
					"baseLayerID": 386,
					"baseLayerMD5": "4d98dab0cf2cf19c55f36ca72913811e.png",
					"bitmapResolution": 2,
					"rotationCenterX": 8,
					"rotationCenterY": 6
				},
				{
					"costumeName": "jellyfish",
					"baseLayerID": 387,
					"baseLayerMD5": "faea92c188191fc89c94aefe03598b5b.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 14
				},
				{
					"costumeName": "jellyfish2",
					"baseLayerID": 388,
					"baseLayerMD5": "b8856eb50f2133273045db7f4ec40385.png",
					"bitmapResolution": 2,
					"rotationCenterX": 12,
					"rotationCenterY": 12
				},
				{
					"costumeName": "Gore_85",
					"baseLayerID": 389,
					"baseLayerMD5": "92980b11f189de37551d73d1bd48772e.png",
					"bitmapResolution": 2,
					"rotationCenterX": 14,
					"rotationCenterY": 10
				},
				{
					"costumeName": "Gore_165",
					"baseLayerID": 390,
					"baseLayerMD5": "39f6e0aa57795a407fcf11061f2674b4.png",
					"bitmapResolution": 2,
					"rotationCenterX": 6,
					"rotationCenterY": 8
				},
				{
					"costumeName": "rabbit1",
					"baseLayerID": 130,
					"baseLayerMD5": "2f3c462b5e8ce9c4eecba58fd65c3483.png",
					"bitmapResolution": 2,
					"rotationCenterX": 14,
					"rotationCenterY": 18
				},
				{
					"costumeName": "SquirrelW",
					"baseLayerID": 261,
					"baseLayerMD5": "67e7b45ae0c7a204f8c5931e07e18531.png",
					"bitmapResolution": 2,
					"rotationCenterX": 18,
					"rotationCenterY": 22
				},
				{
					"costumeName": "mouse",
					"baseLayerID": 350,
					"baseLayerMD5": "633ef31480b1eb0cba42705b0000b821.png",
					"bitmapResolution": 2,
					"rotationCenterX": 8,
					"rotationCenterY": 6
				},
				{
					"costumeName": "coin_copper",
					"baseLayerID": 231,
					"baseLayerMD5": "d924d708b8741cf682f61eeebc9b9ac1.png",
					"bitmapResolution": 2,
					"rotationCenterX": 6,
					"rotationCenterY": 16
				},
				{
					"costumeName": "coin_silver",
					"baseLayerID": 232,
					"baseLayerMD5": "f9e227ce850acf090658c6d3c5cc97fd.png",
					"bitmapResolution": 2,
					"rotationCenterX": 6,
					"rotationCenterY": 16
				},
				{
					"costumeName": "coin_gold",
					"baseLayerID": 233,
					"baseLayerMD5": "045246124660ac85503987986dea2620.png",
					"bitmapResolution": 2,
					"rotationCenterX": 6,
					"rotationCenterY": 16
				},
				{
					"costumeName": "Gore_9",
					"baseLayerID": 391,
					"baseLayerMD5": "c0c9873e67718a379cd8830d43d018ca.png",
					"bitmapResolution": 2,
					"rotationCenterX": 24,
					"rotationCenterY": 26
				},
				{
					"costumeName": "Gore_8",
					"baseLayerID": 392,
					"baseLayerMD5": "d52e1e81b6b8ff478cdd4b1b4599be6f.png",
					"bitmapResolution": 2,
					"rotationCenterX": 22,
					"rotationCenterY": 16
				}],
			"currentCostumeIndex": 17,
			"scratchX": -185,
			"scratchY": 63,
			"scale": 2.53,
			"direction": 90,
			"rotationStyle": "normal",
			"isDraggable": false,
			"indexInLibrary": 15,
			"visible": false,
			"spriteInfo": {
			}
		},
		{
			"objName": "slot4",
			"scripts": [[19, 18, [["whenIReceive", "Clone Sprites"], ["lookLike:", "crafting slots"], ["call", "init"]]],
				[21,
					122,
					[["procDef", "init", [], [], true],
						["setSizeTo:", 100],
						["gotoX:y:", 0, 0],
						["hide"]]],
				[23,
					276,
					[["whenIReceive", "animate"],
						["doIf",
							[">", ["readVariable", "inv_change"], "0"],
							[["doIfElse",
									["=", ["getAttribute:of:", "Mode", "Player"], "1"],
									[["lookLike:", "crafting slots"], ["show"]],
									[["doIfElse",
											["=", ["getAttribute:of:", "Mode", "Player"], "2"],
											[["lookLike:", "chest"], ["show"]],
											[["hide"]]]]]]]]],
				[364, 23, [["whenIReceive", "Hide All"], ["hide"]]]],
			"sounds": [{
					"soundName": "pop",
					"soundID": 0,
					"md5": "83a9787d4cb6f3b7632b4ddfebf74367.wav",
					"sampleCount": 258,
					"rate": 11025,
					"format": ""
				}],
			"costumes": [{
					"costumeName": "crafting slots",
					"baseLayerID": 393,
					"baseLayerMD5": "785a91bac324abda56ee0df0889ea0c5.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 207,
					"rotationCenterY": 46
				},
				{
					"costumeName": "chest",
					"baseLayerID": 394,
					"baseLayerMD5": "0eb6bb40f19ee3d94422e153a9c3a471.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 208,
					"rotationCenterY": 51
				}],
			"currentCostumeIndex": 0,
			"scratchX": 0,
			"scratchY": 0,
			"scale": 1,
			"direction": 90,
			"rotationStyle": "normal",
			"isDraggable": false,
			"indexInLibrary": 17,
			"visible": false,
			"spriteInfo": {
			}
		},
		{
			"objName": "trash",
			"scripts": [[19, 18, [["whenIReceive", "Clone Sprites"], ["lookLike:", "crafting slots"], ["call", "init"]]],
				[21,
					122,
					[["procDef", "init", [], [], true],
						["setSizeTo:", 100],
						["gotoX:y:", 0, 0],
						["hide"]]],
				[10, 10, [["whenIReceive", "Hide All"], ["hide"]]],
				[22,
					292,
					[["whenIReceive", "animate"],
						["doIf",
							[">", ["readVariable", "inv_change"], "0"],
							[["doIfElse",
									[">", ["getAttribute:of:", "Mode", "Player"], "0"],
									[["show"]],
									[["hide"]]]]]]]],
			"sounds": [{
					"soundName": "pop",
					"soundID": 0,
					"md5": "83a9787d4cb6f3b7632b4ddfebf74367.wav",
					"sampleCount": 258,
					"rate": 11025,
					"format": ""
				}],
			"costumes": [{
					"costumeName": "crafting slots",
					"baseLayerID": 395,
					"baseLayerMD5": "681c058534939d0c945e262a83313ac8.svg",
					"bitmapResolution": 1,
					"rotationCenterX": -60,
					"rotationCenterY": 148
				}],
			"currentCostumeIndex": 0,
			"scratchX": 0,
			"scratchY": 0,
			"scale": 1,
			"direction": 90,
			"rotationStyle": "normal",
			"isDraggable": false,
			"indexInLibrary": 18,
			"visible": false,
			"spriteInfo": {
			}
		},
		{
			"target": "Stage",
			"cmd": "getVar:",
			"param": "TILE_SIZE",
			"color": 15629590,
			"label": "TILE_SIZE",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 341,
			"y": 67,
			"visible": false
		},
		{
			"target": "Stage",
			"cmd": "getVar:",
			"param": "MAP_WIDTH_NEG",
			"color": 15629590,
			"label": "MAP_WIDTH_NEG",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 319,
			"y": 103,
			"visible": false
		},
		{
			"target": "Stage",
			"cmd": "timer",
			"param": null,
			"color": 2926050,
			"label": "timer",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 86,
			"y": 62,
			"visible": false
		},
		{
			"target": "Stage",
			"cmd": "getVar:",
			"param": "MAP_HEIGHT",
			"color": 15629590,
			"label": "MAP_HEIGHT",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 112,
			"y": 86,
			"visible": false
		},
		{
			"target": "Stage",
			"cmd": "getVar:",
			"param": "MAP_WIDTH",
			"color": 15629590,
			"label": "MAP_WIDTH",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 112,
			"y": 59,
			"visible": false
		},
		{
			"target": "Player",
			"cmd": "getVar:",
			"param": "Player Width",
			"color": 15629590,
			"label": "Player: Player Width",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 139,
			"y": 235,
			"visible": false
		},
		{
			"target": "Player",
			"cmd": "getVar:",
			"param": "Player Height",
			"color": 15629590,
			"label": "Player: Player Height",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 77,
			"y": 230,
			"visible": false
		},
		{
			"target": "Player",
			"cmd": "getVar:",
			"param": "Tile Is Solid",
			"color": 15629590,
			"label": "Player: Tile Is Solid",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 229,
			"y": 254,
			"visible": false
		},
		{
			"target": "Stage",
			"cmd": "getVar:",
			"param": "TICK",
			"color": 15629590,
			"label": "TICK",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 158,
			"y": 100,
			"visible": false
		},
		{
			"target": "Player",
			"cmd": "getVar:",
			"param": "walkFrame",
			"color": 15629590,
			"label": "Player: walkFrame",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 285,
			"y": 161,
			"visible": false
		},
		{
			"target": "clouds",
			"cmd": "getVar:",
			"param": "x",
			"color": 15629590,
			"label": "clouds: x",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 397,
			"y": 118,
			"visible": false
		},
		{
			"target": "clouds",
			"cmd": "getVar:",
			"param": "y",
			"color": 15629590,
			"label": "clouds: y",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 365,
			"y": 253,
			"visible": false
		},
		{
			"target": "clouds",
			"cmd": "getVar:",
			"param": "mul",
			"color": 15629590,
			"label": "clouds: mul",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 172,
			"y": 7,
			"visible": false
		},
		{
			"target": "Stage",
			"cmd": "getVar:",
			"param": "SCORE",
			"color": 15629590,
			"label": "SCORE",
			"mode": 2,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 217,
			"y": 336,
			"visible": false
		},
		{
			"target": "Multiplayer",
			"cmd": "getVar:",
			"param": "@Max Players",
			"color": 15629590,
			"label": "Multiplayer: @Max Players",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 276,
			"y": 148,
			"visible": false
		},
		{
			"target": "Body",
			"cmd": "getVar:",
			"param": "player ID",
			"color": 15629590,
			"label": "Body: player ID",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 257,
			"y": 311,
			"visible": false
		},
		{
			"target": "Body",
			"cmd": "getVar:",
			"param": "i",
			"color": 15629590,
			"label": "Body: i",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 280,
			"y": 143,
			"visible": false
		},
		{
			"target": "Body",
			"cmd": "getVar:",
			"param": "len",
			"color": 15629590,
			"label": "Body: len",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 381,
			"y": 230,
			"visible": false
		},
		{
			"target": "Body",
			"cmd": "getVar:",
			"param": "x",
			"color": 15629590,
			"label": "Body: x",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 207,
			"y": 66,
			"visible": false
		},
		{
			"target": "Body",
			"cmd": "getVar:",
			"param": "y",
			"color": 15629590,
			"label": "Body: y",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 329,
			"y": 287,
			"visible": false
		},
		{
			"target": "Body",
			"cmd": "getVar:",
			"param": "costume",
			"color": 15629590,
			"label": "Body: costume",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 356,
			"y": 85,
			"visible": false
		},
		{
			"target": "Body",
			"cmd": "getVar:",
			"param": "dx",
			"color": 15629590,
			"label": "Body: dx",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 46,
			"y": 7,
			"visible": false
		},
		{
			"target": "Body",
			"cmd": "getVar:",
			"param": "dy",
			"color": 15629590,
			"label": "Body: dy",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 74,
			"y": 10,
			"visible": false
		},
		{
			"target": "Body",
			"cmd": "getVar:",
			"param": "named",
			"color": 15629590,
			"label": "Body: named",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 307,
			"y": 8,
			"visible": false
		},
		{
			"target": "Body",
			"cmd": "getVar:",
			"param": "lastX",
			"color": 15629590,
			"label": "Body: lastX",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 299,
			"y": 82,
			"visible": false
		},
		{
			"target": "Multiplayer",
			"cmd": "getVar:",
			"param": "parseStr",
			"color": 15629590,
			"label": "Multiplayer: parseStr",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 172,
			"y": 111,
			"visible": false
		},
		{
			"target": "Multiplayer",
			"cmd": "getVar:",
			"param": "ssc",
			"color": 15629590,
			"label": "Multiplayer: ssc",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 225,
			"y": 138,
			"visible": false
		},
		{
			"target": "Multiplayer",
			"cmd": "getVar:",
			"param": "Glitches",
			"color": 15629590,
			"label": "Multiplayer: Glitches",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 266,
			"y": 289,
			"visible": false
		},
		{
			"target": "Cursor",
			"cmd": "getVar:",
			"param": "ToolMode",
			"color": 15629590,
			"label": "Cursor: ToolMode",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 378,
			"y": 286,
			"visible": false
		},
		{
			"target": "Multiplayer",
			"cmd": "getVar:",
			"param": "autosave",
			"color": 15629590,
			"label": "Multiplayer: autosave",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 271,
			"y": 28,
			"visible": false
		},
		{
			"target": "Cursor",
			"cmd": "getVar:",
			"param": "around",
			"color": 15629590,
			"label": "Cursor: around",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 261,
			"y": 58,
			"visible": false
		},
		{
			"target": "Stage",
			"cmd": "getVar:",
			"param": "☁ Player_1",
			"color": 15629590,
			"label": "☁ Player_1",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 48,
			"y": 112,
			"visible": false
		},
		{
			"target": "Stage",
			"cmd": "getVar:",
			"param": "☁ Player_2",
			"color": 15629590,
			"label": "☁ Player_2",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 7,
			"y": 133,
			"visible": false
		},
		{
			"target": "Stage",
			"cmd": "getVar:",
			"param": "☁ Player_3",
			"color": 15629590,
			"label": "☁ Player_3",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 216,
			"y": 207,
			"visible": false
		},
		{
			"target": "Stage",
			"cmd": "getVar:",
			"param": "☁ Player_4",
			"color": 15629590,
			"label": "☁ Player_4",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 227,
			"y": 247,
			"visible": false
		},
		{
			"target": "Stage",
			"cmd": "getVar:",
			"param": "☁ Player_5",
			"color": 15629590,
			"label": "☁ Player_5",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 205,
			"y": 119,
			"visible": false
		},
		{
			"target": "Stage",
			"cmd": "getVar:",
			"param": "☁ Player_6",
			"color": 15629590,
			"label": "☁ Player_6",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 210,
			"y": 154,
			"visible": false
		},
		{
			"target": "Safe Chat",
			"cmd": "getVar:",
			"param": "c",
			"color": 15629590,
			"label": "Safe Chat: c",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 384,
			"y": 89,
			"visible": false
		},
		{
			"target": "Safe Chat",
			"cmd": "getVar:",
			"param": "i",
			"color": 15629590,
			"label": "Safe Chat: i",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 323,
			"y": 180,
			"visible": false
		},
		{
			"target": "Safe Chat",
			"cmd": "getVar:",
			"param": "word",
			"color": 15629590,
			"label": "Safe Chat: word",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 183,
			"y": 248,
			"visible": false
		},
		{
			"target": "Safe Chat",
			"cmd": "getVar:",
			"param": "Filtered",
			"color": 15629590,
			"label": "Safe Chat: Filtered",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 30,
			"y": 64,
			"visible": false
		},
		{
			"target": "Safe Chat",
			"cmd": "getVar:",
			"param": "isFiltered",
			"color": 15629590,
			"label": "Safe Chat: isFiltered",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 42,
			"y": 241,
			"visible": false
		},
		{
			"target": "Safe Chat",
			"cmd": "getVar:",
			"param": "Chatting",
			"color": 15629590,
			"label": "Safe Chat: Chatting",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 107,
			"y": 306,
			"visible": false
		},
		{
			"target": "Player",
			"cmd": "getVar:",
			"param": "Chat Timer",
			"color": 15629590,
			"label": "Player: Chat Timer",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 202,
			"y": 199,
			"visible": false
		},
		{
			"target": "Body",
			"cmd": "getVar:",
			"param": "Last Say",
			"color": 15629590,
			"label": "Body: Last Say",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 395,
			"y": 190,
			"visible": false
		},
		{
			"target": "Stage",
			"cmd": "getVar:",
			"param": "☁ GameData",
			"color": 15629590,
			"label": "☁ GameData",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 213,
			"y": 21,
			"visible": false
		},
		{
			"target": "Tool Swing",
			"cmd": "getVar:",
			"param": "Tool",
			"color": 15629590,
			"label": "Tool Swing: Tool",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 185,
			"y": 290,
			"visible": false
		},
		{
			"target": "Tool Swing",
			"cmd": "heading",
			"param": null,
			"color": 4877524,
			"label": "Tool Swing: direction",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 271,
			"y": 310,
			"visible": false
		},
		{
			"target": "Stage",
			"cmd": "getVar:",
			"param": "inv_change",
			"color": 15629590,
			"label": "inv_change",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 381,
			"y": 317,
			"visible": false
		},
		{
			"target": "slot",
			"cmd": "getVar:",
			"param": "invID",
			"color": 15629590,
			"label": "slot: invID",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 133,
			"y": 272,
			"visible": false
		},
		{
			"target": "Cursor",
			"cmd": "getVar:",
			"param": "find slot id",
			"color": 15629590,
			"label": "Cursor: find slot id",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 282,
			"y": 112,
			"visible": false
		},
		{
			"target": "Multiplayer",
			"cmd": "getVar:",
			"param": "Last Respawn",
			"color": 15629590,
			"label": "Multiplayer: Last Respawn",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 112,
			"y": 227,
			"visible": false
		},
		{
			"target": "Cursor",
			"cmd": "getVar:",
			"param": "Tile Is Solid",
			"color": 15629590,
			"label": "Cursor: Tile Is Solid",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 142,
			"y": 96,
			"visible": false
		},
		{
			"target": "Stage",
			"cmd": "getVar:",
			"param": "TMul",
			"color": 15629590,
			"label": "TMul",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 335,
			"y": 259,
			"visible": false
		},
		{
			"target": "Cursor",
			"cmd": "getVar:",
			"param": "Tile Type",
			"color": 15629590,
			"label": "Cursor: Tile Type",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 286,
			"y": 166,
			"visible": false
		},
		{
			"target": "Particles",
			"cmd": "getVar:",
			"param": "isClone",
			"color": 15629590,
			"label": "Particles: isClone",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 321,
			"y": 136,
			"visible": false
		},
		{
			"target": "Particles",
			"cmd": "getVar:",
			"param": "x",
			"color": 15629590,
			"label": "Particles: x",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 109,
			"y": 103,
			"visible": false
		},
		{
			"target": "Particles",
			"cmd": "getVar:",
			"param": "y",
			"color": 15629590,
			"label": "Particles: y",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 331,
			"y": 227,
			"visible": false
		},
		{
			"target": "Particles",
			"cmd": "getVar:",
			"param": "Tile Index",
			"color": 15629590,
			"label": "Particles: Tile Index",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 101,
			"y": 320,
			"visible": false
		},
		{
			"target": "Particles",
			"cmd": "getVar:",
			"param": "tmp",
			"color": 15629590,
			"label": "Particles: tmp",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 15,
			"y": 109,
			"visible": false
		},
		{
			"target": "Particles",
			"cmd": "getVar:",
			"param": "sx",
			"color": 15629590,
			"label": "Particles: sx",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 205,
			"y": 282,
			"visible": false
		},
		{
			"target": "Particles",
			"cmd": "getVar:",
			"param": "sy",
			"color": 15629590,
			"label": "Particles: sy",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 229,
			"y": 303,
			"visible": false
		},
		{
			"target": "Player",
			"cmd": "getVar:",
			"param": "i",
			"color": 15629590,
			"label": "Player: i",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 76,
			"y": 32,
			"visible": false
		},
		{
			"target": "Player",
			"cmd": "getVar:",
			"param": "s",
			"color": 15629590,
			"label": "Player: s",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 198,
			"y": 87,
			"visible": false
		},
		{
			"target": "Player",
			"cmd": "getVar:",
			"param": "costume",
			"color": 15629590,
			"label": "Player: costume",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 185,
			"y": 271,
			"visible": false
		},
		{
			"target": "Stage",
			"cmd": "getVar:",
			"param": "☁ Player_7",
			"color": 15629590,
			"label": "☁ Player_7",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 358,
			"y": 42,
			"visible": false
		},
		{
			"target": "Stage",
			"cmd": "getVar:",
			"param": "☁ Player_8",
			"color": 15629590,
			"label": "☁ Player_8",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 78,
			"y": 164,
			"visible": false
		},
		{
			"target": "Player",
			"cmd": "getVar:",
			"param": "t2",
			"color": 15629590,
			"label": "Player: t2",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 203,
			"y": 213,
			"visible": false
		},
		{
			"target": "Door",
			"cmd": "getVar:",
			"param": "tmp",
			"color": 15629590,
			"label": "Door: tmp",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 91,
			"y": 213,
			"visible": false
		},
		{
			"target": "Multiplayer",
			"cmd": "getVar:",
			"param": "Master Time",
			"color": 15629590,
			"label": "Multiplayer: Master Time",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": -3,
			"y": 340,
			"visible": false
		},
		{
			"target": "Cursor",
			"cmd": "getVar:",
			"param": "RMul",
			"color": 15629590,
			"label": "Cursor: RMul",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 38,
			"y": 99,
			"visible": false
		},
		{
			"target": "Cursor",
			"cmd": "getVar:",
			"param": "tok",
			"color": 15629590,
			"label": "Cursor: tok",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 350,
			"y": 249,
			"visible": false
		},
		{
			"target": "Cursor",
			"cmd": "getVar:",
			"param": "tok_i",
			"color": 15629590,
			"label": "Cursor: tok_i",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 86,
			"y": 32,
			"visible": false
		},
		{
			"target": "Cursor",
			"cmd": "getVar:",
			"param": "recepeStr",
			"color": 15629590,
			"label": "Cursor: recepeStr",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 274,
			"y": 282,
			"visible": false
		},
		{
			"target": "Stage",
			"cmd": "getVar:",
			"param": "SCROLL_X",
			"color": 15629590,
			"label": "SCROLL_X",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 5,
			"y": 59,
			"visible": false
		},
		{
			"target": "Stage",
			"cmd": "getVar:",
			"param": "SCROLL_Y",
			"color": 15629590,
			"label": "SCROLL_Y",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 112,
			"y": 113,
			"visible": false
		},
		{
			"target": "Warning",
			"cmd": "getVar:",
			"param": "i",
			"color": 15629590,
			"label": "Warning: i",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 104,
			"y": 306,
			"visible": false
		},
		{
			"target": "Warning",
			"cmd": "getVar:",
			"param": "str",
			"color": 15629590,
			"label": "Warning: str",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 249,
			"y": 233,
			"visible": false
		},
		{
			"target": "Warning",
			"cmd": "getVar:",
			"param": "c",
			"color": 15629590,
			"label": "Warning: c",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 356,
			"y": 296,
			"visible": false
		},
		{
			"target": "Warning",
			"cmd": "getVar:",
			"param": "_Chars",
			"color": 15629590,
			"label": "Warning: _Chars",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 346,
			"y": 317,
			"visible": false
		},
		{
			"target": "Safe Chat",
			"cmd": "getVar:",
			"param": "Tile Index",
			"color": 15629590,
			"label": "Safe Chat: Tile Index",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 55,
			"y": 246,
			"visible": false
		},
		{
			"target": "Cursor",
			"cmd": "getVar:",
			"param": "i",
			"color": 15629590,
			"label": "Cursor: i",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 369,
			"y": 137,
			"visible": false
		},
		{
			"target": "Player",
			"cmd": "getVar:",
			"param": "timout",
			"color": 15629590,
			"label": "Player: timout",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 38,
			"y": 250,
			"visible": false
		},
		{
			"target": "Player",
			"cmd": "getVar:",
			"param": "howLong",
			"color": 15629590,
			"label": "Player: howLong",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 48,
			"y": 297,
			"visible": false
		},
		{
			"target": "Multiplayer",
			"cmd": "getVar:",
			"param": "LagDetect",
			"color": 15629590,
			"label": "Multiplayer: LagDetect",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 272,
			"y": 310,
			"visible": false
		},
		{
			"target": "Safe Chat",
			"cmd": "getVar:",
			"param": "pre",
			"color": 15629590,
			"label": "Safe Chat: pre",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 344,
			"y": 13,
			"visible": false
		},
		{
			"target": "Cursor",
			"cmd": "getVar:",
			"param": "Inside Idx",
			"color": 15629590,
			"label": "Cursor: Inside Idx",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 295,
			"y": 69,
			"visible": false
		},
		{
			"target": "Cursor",
			"cmd": "getVar:",
			"param": "ToolDrag",
			"color": 15629590,
			"label": "Cursor: ToolDrag",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 294,
			"y": 304,
			"visible": false
		},
		{
			"target": "Multiplayer",
			"cmd": "getVar:",
			"param": "tickSend",
			"color": 15629590,
			"label": "Multiplayer: tickSend",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 283,
			"y": 302,
			"visible": false
		},
		{
			"target": "Player",
			"cmd": "getVar:",
			"param": "Mode",
			"color": 15629590,
			"label": "Player: Mode",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 319,
			"y": 64,
			"visible": false
		},
		{
			"target": "Body",
			"cmd": "getVar:",
			"param": "Say Time",
			"color": 15629590,
			"label": "Body: Say Time",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 268,
			"y": 271,
			"visible": false
		},
		{
			"target": "Cursor",
			"cmd": "getVar:",
			"param": "lifeTick",
			"color": 15629590,
			"label": "Cursor: lifeTick",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 97,
			"y": 17,
			"visible": false
		},
		{
			"target": "Player",
			"cmd": "getVar:",
			"param": "x",
			"color": 15629590,
			"label": "Player: x",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 168,
			"y": 194,
			"visible": false
		},
		{
			"target": "Cursor",
			"cmd": "getVar:",
			"param": "Recipe Offset",
			"color": 15629590,
			"label": "Cursor: Recipe Offset",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 292,
			"y": 257,
			"visible": false
		},
		{
			"target": "Cursor",
			"cmd": "getVar:",
			"param": "HoverTile",
			"color": 15629590,
			"label": "Cursor: HoverTile",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 249,
			"y": 135,
			"visible": false
		},
		{
			"target": "Cursor",
			"cmd": "getVar:",
			"param": "reach",
			"color": 15629590,
			"label": "Cursor: reach",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 104,
			"y": 98,
			"visible": false
		},
		{
			"target": "Cursor",
			"cmd": "getVar:",
			"param": "BuffID",
			"color": 15629590,
			"label": "Cursor: BuffID",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 197,
			"y": 110,
			"visible": false
		},
		{
			"target": "Player",
			"cmd": "getVar:",
			"param": "grounded",
			"color": 15629590,
			"label": "Player: grounded",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 243,
			"y": 96,
			"visible": false
		},
		{
			"target": "Cursor",
			"cmd": "getVar:",
			"param": "BuffTime",
			"color": 15629590,
			"label": "Cursor: BuffTime",
			"mode": 2,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 393,
			"y": 307,
			"visible": false
		},
		{
			"target": "Cursor",
			"cmd": "getVar:",
			"param": "mat",
			"color": 15629590,
			"label": "Cursor: mat",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 117,
			"y": 36,
			"visible": false
		},
		{
			"target": "NPC",
			"cmd": "getVar:",
			"param": "x",
			"color": 15629590,
			"label": "NPC: x",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 207,
			"y": 73,
			"visible": false
		},
		{
			"target": "NPC",
			"cmd": "getVar:",
			"param": "y",
			"color": 15629590,
			"label": "NPC: y",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 153,
			"y": 85,
			"visible": false
		},
		{
			"target": "NPC",
			"cmd": "getVar:",
			"param": "ID",
			"color": 15629590,
			"label": "NPC: ID",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 231,
			"y": 263,
			"visible": false
		},
		{
			"target": "NPC",
			"cmd": "getVar:",
			"param": "Action",
			"color": 15629590,
			"label": "NPC: Action",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 177,
			"y": 60,
			"visible": false
		},
		{
			"target": "NPC",
			"cmd": "getVar:",
			"param": "sx",
			"color": 15629590,
			"label": "NPC: sx",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 295,
			"y": 306,
			"visible": false
		},
		{
			"target": "NPC",
			"cmd": "getVar:",
			"param": "sy",
			"color": 15629590,
			"label": "NPC: sy",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 280,
			"y": 202,
			"visible": false
		},
		{
			"target": "NPC",
			"cmd": "getVar:",
			"param": "Time",
			"color": 15629590,
			"label": "NPC: Time",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 126,
			"y": 63,
			"visible": false
		},
		{
			"target": "NPC",
			"cmd": "getVar:",
			"param": "onfloor",
			"color": 15629590,
			"label": "NPC: onfloor",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 379,
			"y": 34,
			"visible": false
		},
		{
			"target": "NPC",
			"cmd": "getVar:",
			"param": "Typ",
			"color": 15629590,
			"label": "NPC: Typ",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 306,
			"y": 172,
			"visible": false
		},
		{
			"target": "NPC",
			"cmd": "getVar:",
			"param": "?Val",
			"color": 15629590,
			"label": "NPC: ?Val",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 123,
			"y": 281,
			"visible": false
		},
		{
			"target": "NPC",
			"cmd": "getVar:",
			"param": "char",
			"color": 15629590,
			"label": "NPC: char",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 293,
			"y": 312,
			"visible": false
		},
		{
			"target": "NPC",
			"cmd": "getVar:",
			"param": "i3",
			"color": 15629590,
			"label": "NPC: i3",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 288,
			"y": 101,
			"visible": false
		},
		{
			"target": "NPC",
			"cmd": "getVar:",
			"param": "idx",
			"color": 15629590,
			"label": "NPC: idx",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 51,
			"y": 137,
			"visible": false
		},
		{
			"target": "NPC",
			"cmd": "getVar:",
			"param": "tx",
			"color": 15629590,
			"label": "NPC: tx",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 241,
			"y": 93,
			"visible": false
		},
		{
			"target": "NPC",
			"cmd": "getVar:",
			"param": "ty",
			"color": 15629590,
			"label": "NPC: ty",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 183,
			"y": 20,
			"visible": false
		},
		{
			"target": "Tool Swing",
			"cmd": "getVar:",
			"param": "Tool ID",
			"color": 15629590,
			"label": "Tool Swing: Tool ID",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 93,
			"y": 266,
			"visible": false
		},
		{
			"target": "Tool Swing",
			"cmd": "getVar:",
			"param": "Tool Type",
			"color": 15629590,
			"label": "Tool Swing: Tool Type",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 387,
			"y": 70,
			"visible": false
		},
		{
			"target": "Stage",
			"cmd": "getVar:",
			"param": "Hit Player",
			"color": 15629590,
			"label": "Hit Player",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 321,
			"y": 320,
			"visible": false
		},
		{
			"target": "NPC",
			"cmd": "getVar:",
			"param": "health",
			"color": 15629590,
			"label": "NPC: health",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 133,
			"y": 269,
			"visible": false
		},
		{
			"target": "NPC",
			"cmd": "getVar:",
			"param": "hit wait",
			"color": 15629590,
			"label": "NPC: hit wait",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 116,
			"y": 215,
			"visible": false
		},
		{
			"target": "Player",
			"cmd": "getVar:",
			"param": "Player Hit Time",
			"color": 15629590,
			"label": "Player: Player Hit Time",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 42,
			"y": 261,
			"visible": false
		},
		{
			"target": "Player",
			"cmd": "getVar:",
			"param": "Player Health",
			"color": 15629590,
			"label": "Player: Player Health",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 274,
			"y": 71,
			"visible": false
		},
		{
			"target": "Tool Swing",
			"cmd": "getVar:",
			"param": "Tool Power",
			"color": 15629590,
			"label": "Tool Swing: Tool Power",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 337,
			"y": 182,
			"visible": false
		},
		{
			"target": "Player",
			"cmd": "getVar:",
			"param": "dir",
			"color": 15629590,
			"label": "Player: dir",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 146,
			"y": 95,
			"visible": false
		},
		{
			"target": "NPC",
			"cmd": "getVar:",
			"param": "OwnerDist",
			"color": 15629590,
			"label": "NPC: OwnerDist",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 144,
			"y": 39,
			"visible": false
		},
		{
			"target": "NPC",
			"cmd": "getVar:",
			"param": "t",
			"color": 15629590,
			"label": "NPC: t",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 183,
			"y": 277,
			"visible": false
		},
		{
			"target": "Warning",
			"cmd": "getVar:",
			"param": "Reset Spam Timer",
			"color": 15629590,
			"label": "Warning: Reset Spam Timer",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 130,
			"y": 167,
			"visible": false
		},
		{
			"target": "Warning",
			"cmd": "getVar:",
			"param": "Ignore Echo",
			"color": 15629590,
			"label": "Warning: Ignore Echo",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 283,
			"y": 144,
			"visible": false
		},
		{
			"target": "Player",
			"cmd": "getVar:",
			"param": "Profile_Hair",
			"color": 15629590,
			"label": "Player: Profile_Hair",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 263,
			"y": 320,
			"visible": false
		},
		{
			"target": "Frame",
			"cmd": "getVar:",
			"param": "Options",
			"color": 15629590,
			"label": "Frame: Options",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 299,
			"y": 194,
			"visible": false
		},
		{
			"target": "Choose Player",
			"cmd": "getVar:",
			"param": "gx",
			"color": 15629590,
			"label": "Choose Player: gx",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 289,
			"y": 211,
			"visible": false
		},
		{
			"target": "Frame",
			"cmd": "getVar:",
			"param": "Typ",
			"color": 15629590,
			"label": "Frame: Typ",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 354,
			"y": 165,
			"visible": false
		},
		{
			"target": "Choose Player",
			"cmd": "getVar:",
			"param": "id",
			"color": 15629590,
			"label": "Choose Player: id",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 288,
			"y": 36,
			"visible": false
		},
		{
			"target": "Frame",
			"cmd": "getVar:",
			"param": "HoverID",
			"color": 15629590,
			"label": "Frame: HoverID",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 269,
			"y": 213,
			"visible": false
		},
		{
			"target": "Stage",
			"cmd": "getVar:",
			"param": "☁ Snapshot",
			"color": 15629590,
			"label": "☁ Snapshot",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 149,
			"y": 45,
			"visible": false
		},
		{
			"target": "Setup Level",
			"cmd": "getVar:",
			"param": "Last User",
			"color": 15629590,
			"label": "Setup Level: Last User",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 227,
			"y": 38,
			"visible": false
		},
		{
			"target": "Frame",
			"cmd": "getVar:",
			"param": "Peaceful?",
			"color": 15629590,
			"label": "Frame: Peaceful?",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 307,
			"y": 88,
			"visible": false
		},
		{
			"target": "Health10",
			"cmd": "getVar:",
			"param": "Health",
			"color": 15629590,
			"label": "Health10: Health",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 100,
			"y": 237,
			"visible": false
		},
		{
			"target": "Health10",
			"cmd": "getVar:",
			"param": "type",
			"color": 15629590,
			"label": "Health10: type",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 30,
			"y": 322,
			"visible": false
		},
		{
			"target": "Player",
			"cmd": "getVar:",
			"param": "Player Max Health",
			"color": 15629590,
			"label": "Player: Player Max Health",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 101,
			"y": 20,
			"visible": false
		},
		{
			"target": "Player",
			"cmd": "getVar:",
			"param": "Fall Height",
			"color": 15629590,
			"label": "Player: Fall Height",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 50,
			"y": 307,
			"visible": false
		},
		{
			"target": "Multiplayer",
			"cmd": "getVar:",
			"param": "Time of Day",
			"color": 15629590,
			"label": "Multiplayer: Time of Day",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 18,
			"y": 149,
			"visible": false
		},
		{
			"target": "Player",
			"cmd": "getVar:",
			"param": "Day Night",
			"color": 15629590,
			"label": "Player: Day Night",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 115,
			"y": 316,
			"visible": false
		},
		{
			"target": "Frame",
			"cmd": "getVar:",
			"param": "Color",
			"color": 15629590,
			"label": "Frame: Color",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 247,
			"y": 150,
			"visible": false
		},
		{
			"target": "Snapshot",
			"cmd": "getVar:",
			"param": "last",
			"color": 15629590,
			"label": "Snapshot: last",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 319,
			"y": 172,
			"visible": false
		},
		{
			"target": "Snapshot",
			"cmd": "getVar:",
			"param": "readIdx",
			"color": 15629590,
			"label": "Snapshot: readIdx",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 189,
			"y": 74,
			"visible": false
		},
		{
			"target": "Snapshot",
			"cmd": "getVar:",
			"param": "?Val",
			"color": 15629590,
			"label": "Snapshot: ?Val",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 118,
			"y": 154,
			"visible": false
		},
		{
			"target": "Cursor",
			"cmd": "getVar:",
			"param": "MouseRelease",
			"color": 15629590,
			"label": "Cursor: MouseRelease",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 275,
			"y": 323,
			"visible": false
		},
		{
			"target": "Cursor",
			"cmd": "getVar:",
			"param": "Tool Type",
			"color": 15629590,
			"label": "Cursor: Tool Type",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 268,
			"y": 276,
			"visible": false
		},
		{
			"target": "Cursor",
			"cmd": "getVar:",
			"param": "digType",
			"color": 15629590,
			"label": "Cursor: digType",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 60,
			"y": 69,
			"visible": false
		},
		{
			"target": "Cursor",
			"cmd": "getVar:",
			"param": "digTime",
			"color": 15629590,
			"label": "Cursor: digTime",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 59,
			"y": 94,
			"visible": false
		},
		{
			"target": "Cursor",
			"cmd": "getVar:",
			"param": "digIdx",
			"color": 15629590,
			"label": "Cursor: digIdx",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 58,
			"y": 121,
			"visible": false
		},
		{
			"target": "Cursor",
			"cmd": "getVar:",
			"param": "Tile Index",
			"color": 15629590,
			"label": "Cursor: Tile Index",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 60,
			"y": 40,
			"visible": false
		},
		{
			"target": "Player",
			"cmd": "getVar:",
			"param": "tmp",
			"color": 15629590,
			"label": "Player: tmp",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 326,
			"y": 307,
			"visible": false
		},
		{
			"target": "NPC",
			"cmd": "getVar:",
			"param": "Aggressive",
			"color": 15629590,
			"label": "NPC: Aggressive",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 90,
			"y": 289,
			"visible": false
		},
		{
			"target": "Player",
			"cmd": "getVar:",
			"param": "Action",
			"color": 15629590,
			"label": "Player: Action",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 237,
			"y": 73,
			"visible": false
		},
		{
			"objName": "Projectile",
			"variables": [{
					"name": "type",
					"value": 0,
					"isPersistent": false
				},
				{
					"name": "x",
					"value": "170.2",
					"isPersistent": false
				},
				{
					"name": "y",
					"value": "40",
					"isPersistent": false
				},
				{
					"name": "sx",
					"value": "-0.45",
					"isPersistent": false
				},
				{
					"name": "sy",
					"value": "0.05",
					"isPersistent": false
				},
				{
					"name": "life",
					"value": 0,
					"isPersistent": false
				},
				{
					"name": "Tile Index",
					"value": 13,
					"isPersistent": false
				},
				{
					"name": "Tile Type",
					"value": "p1 170.2 40 -0.42 0.17",
					"isPersistent": false
				},
				{
					"name": "Tile Is Solid",
					"value": "40",
					"isPersistent": false
				}],
			"scripts": [[11.25,
					158.5,
					[["procDef", "position %n %n", ["x", "y"], [1, 1], true],
						["gotoX:y:", ["getParam", "x", "r"], ["getParam", "y", "r"]],
						["doIfElse",
							["&",
								["=", ["getParam", "x", "r"], ["xpos"]],
								["=", ["getParam", "y", "r"], ["ypos"]]],
							[["show"]],
							[["hide"], ["changeVar:by:", "life", -2]]]]],
				[732,
					33,
					[["procDef", "Check Tile at x: %n y: %n", ["x", "y"], [1, 1], true],
						["setVar:to:",
							"Tile Index",
							["+",
								["+",
									["*", ["computeFunction:of:", "floor", ["getParam", "y", "r"]], ["readVariable", "MAP_WIDTH"]],
									["computeFunction:of:", "floor", ["getParam", "x", "r"]]],
								1]],
						["doIfElse",
							["|",
								["<", ["getParam", "x", "r"], "0"],
								["not", ["<", ["getParam", "x", "r"], ["readVariable", "MAP_WIDTH"]]]],
							[["setVar:to:", "Tile Is Solid", "0"], ["setVar:to:", "Tile Type", "0"]],
							[["setVar:to:", "Tile Type", ["getLine:ofList:", ["readVariable", "Tile Index"], "_Level"]],
								["doIfElse",
									[">", ["readVariable", "Tile Type"], "0"],
									[["setVar:to:",
											"Tile Is Solid",
											["getLine:ofList:", ["+", 3, ["*", ["readVariable", "Tile Type"], ["readVariable", "TMul"]]], "_TileData"]]],
									[["setVar:to:", "Tile Is Solid", "0"]]]]]]],
				[13,
					415,
					[["whenIReceive", "animate"],
						["doIfElse",
							["=", ["readVariable", "type"], "0"],
							[["doIf",
									["not", ["=", ["getLine:ofList:", 23, "_Chat"], ""]],
									[["call", "Handle Other Projectile %s prev life %n", ["getLine:ofList:", 23, "_Chat"], ["readVariable", "life"]],
										["setLine:ofList:to:", 23, "_Chat", ""]]],
								["doIf", [">", ["readVariable", "life"], "0"], [["changeVar:by:", "life", -1]]],
								["doIf",
									["=",
										["getLine:ofList:", ["-", ["*", ["getAttribute:of:", "ToolMode", "Cursor"], 2], 1], "_inv"],
										"159"],
									[["doIfElse",
											["&",
												["=", ["getAttribute:of:", "MOUSE_PRESSED", "Player"], "true"],
												["=", ["getAttribute:of:", "Mode", "Player"], "0"]],
											[["doIf",
													["=", ["readVariable", "life"], "0"],
													[["setVar:to:", "x", ["getAttribute:of:", "x", "Player"]],
														["setVar:to:", "y", ["+", ["getAttribute:of:", "y", "Player"], 1]],
														["setVar:to:", "type", "1"],
														["gotoX:y:",
															["*", ["-", ["readVariable", "x"], ["readVariable", "SCROLL_X"]], ["readVariable", "TILE_SIZE"]],
															["*", ["-", ["readVariable", "y"], ["readVariable", "SCROLL_Y"]], ["readVariable", "TILE_SIZE"]]],
														["pointTowards:", "_mouse_"],
														["setVar:to:", "sx", ["*", 0.45, ["computeFunction:of:", "sin", ["heading"]]]],
														["setVar:to:", "sy", ["*", 0.45, ["computeFunction:of:", "cos", ["heading"]]]],
														["setVar:to:", "life", "60"],
														["createCloneOf", "_myself_"],
														["call", "Serialise %b", ["not", false]],
														["append:toList:", "0", "@Place"],
														["append:toList:", ["concatenate:with:", "p", ["readVariable", "Tile Type"]], "@Place"],
														["setVar:to:", "type", "0"],
														["setVar:to:", "life", "15"]]]],
											null]]]],
							[["doIfElse",
									["=", ["computeFunction:of:", "abs", ["readVariable", "type"]], "1"],
									[["changeVar:by:", "x", ["readVariable", "sx"]],
										["changeVar:by:", "y", ["readVariable", "sy"]],
										["call", "Check Tile at x: %n y: %n", ["readVariable", "x"], ["readVariable", "y"]],
										["changeVar:by:", "life", -1],
										["lookLike:", ["randomFrom:to:", 1, 3]],
										["call",
											"position %n %n",
											["computeFunction:of:",
												"floor",
												["*", ["-", ["readVariable", "x"], ["readVariable", "SCROLL_X"]], ["readVariable", "TILE_SIZE"]]],
											["computeFunction:of:",
												"floor",
												["*", ["-", ["readVariable", "y"], ["readVariable", "SCROLL_Y"]], ["readVariable", "TILE_SIZE"]]]],
										["doIf",
											["touching:", "NPC"],
											[["doIfElse",
													[">", ["readVariable", "type"], "0"],
													[["call", "Serialise %b", false],
														["setLine:ofList:to:", 22, "_Chat", ["concatenate:with:", ["readVariable", "Tile Type"], ["concatenate:with:", " ", "7"]]],
														["setVar:to:", "life", "0"],
														["setVar:to:", "type", "3"]],
													[["deleteClone"]]]]],
										["doIf",
											["&", [">", ["readVariable", "life"], "0"], ["<", ["readVariable", "Tile Is Solid"], "10"]],
											[["createCloneOf", "_myself_"]]],
										["setVar:to:",
											"sx",
											["+",
												["*", ["readVariable", "sx"], ["randomFrom:to:", 0.05, 0.2]],
												["randomFrom:to:", -0.07, 0.07]]],
										["setVar:to:",
											"sy",
											["+",
												["*", ["readVariable", "sy"], ["randomFrom:to:", 0.05, 0.2]],
												["randomFrom:to:", -0.07, 0.07]]],
										["doIf",
											["<", ["readVariable", "type"], "2"],
											[["setVar:to:", "type", "2"], ["setVar:to:", "life", "10"]]]],
									[["doIfElse",
											["=", ["readVariable", "type"], "2"],
											[["changeVar:by:", "life", -1],
												["doIfElse",
													[">", ["readVariable", "life"], "0"],
													[["changeVar:by:", "x", ["readVariable", "sx"]],
														["changeVar:by:", "y", ["readVariable", "sy"]],
														["call",
															"position %n %n",
															["computeFunction:of:",
																"floor",
																["*", ["-", ["readVariable", "x"], ["readVariable", "SCROLL_X"]], ["readVariable", "TILE_SIZE"]]],
															["computeFunction:of:",
																"floor",
																["*", ["-", ["readVariable", "y"], ["readVariable", "SCROLL_Y"]], ["readVariable", "TILE_SIZE"]]]],
														["changeGraphicEffect:by:", "ghost", 10]],
													[["deleteClone"]]]],
											[["doIfElse",
													["=", ["readVariable", "type"], "3"],
													[["setLine:ofList:to:", 22, "_Chat", ""], ["deleteClone"]],
													null]]]]]]]]],
				[733,
					894,
					[["procDef", "Next Token of 'TileType'", [], [], true],
						["setVar:to:", "Tile Is Solid", ""],
						["doUntil",
							["|",
								[">", ["readVariable", "Tile Index"], ["stringLength:", ["readVariable", "Tile Type"]]],
								["=", ["letter:of:", ["readVariable", "Tile Index"], ["readVariable", "Tile Type"]], " "]],
							[["setVar:to:",
									"Tile Is Solid",
									["concatenate:with:", ["readVariable", "Tile Is Solid"], ["letter:of:", ["readVariable", "Tile Index"], ["readVariable", "Tile Type"]]]],
								["changeVar:by:", "Tile Index", 1]]],
						["changeVar:by:", "Tile Index", 1]]],
				[734.35,
					1165.75,
					[["procDef", "Handle Other Projectile %s prev life %n", ["cmd", "prevLife"], ["", 1], true],
						["setVar:to:", "Tile Type", ["getParam", "cmd", "r"]],
						["setVar:to:", "Tile Index", "2"],
						["call", "Next Token of 'TileType'"],
						["setVar:to:", "type", ["-", 0, ["readVariable", "Tile Is Solid"]]],
						["call", "Next Token of 'TileType'"],
						["setVar:to:", "x", ["readVariable", "Tile Is Solid"]],
						["call", "Next Token of 'TileType'"],
						["setVar:to:", "y", ["readVariable", "Tile Is Solid"]],
						["call",
							"Init Other %n %n",
							["*", ["-", ["readVariable", "x"], ["readVariable", "SCROLL_X"]], ["readVariable", "TILE_SIZE"]],
							["*", ["-", ["readVariable", "y"], ["readVariable", "SCROLL_Y"]], ["readVariable", "TILE_SIZE"]]]]],
				[734.65,
					1507.65,
					[["procDef", "Init Other %n %n", ["x", "y"], [1, 1], true],
						["doIf",
							["&",
								["<", ["computeFunction:of:", "abs", ["getParam", "x", "r"]], "400"],
								["<", ["computeFunction:of:", "abs", ["getParam", "y", "r"]], "320"]],
							[["call", "Next Token of 'TileType'"],
								["setVar:to:", "sx", ["readVariable", "Tile Is Solid"]],
								["call", "Next Token of 'TileType'"],
								["setVar:to:", "sy", ["readVariable", "Tile Is Solid"]],
								["setVar:to:", "life", "60"],
								["createCloneOf", "_myself_"],
								["setVar:to:", "life", ["getParam", "prevLife", "r"]]]],
						["setVar:to:", "type", "0"]]],
				[734.05,
					500,
					[["procDef", "Serialise %b", ["type?"], [false], true],
						["doIfElse",
							["getParam", "type?", "b"],
							[["setVar:to:",
									"Tile Type",
									["concatenate:with:",
										["readVariable", "type"],
										["concatenate:with:", " ", ["\/", ["rounded", ["*", ["readVariable", "x"], 10]], 10]]]]],
							[["setVar:to:", "Tile Type", ["\/", ["rounded", ["*", ["readVariable", "x"], 10]], 10]]]],
						["setVar:to:",
							"Tile Type",
							["concatenate:with:",
								["readVariable", "Tile Type"],
								["concatenate:with:", " ", ["\/", ["rounded", ["*", ["readVariable", "y"], 10]], 10]]]],
						["setVar:to:",
							"Tile Type",
							["concatenate:with:",
								["readVariable", "Tile Type"],
								["concatenate:with:", " ", ["\/", ["rounded", ["*", ["readVariable", "sx"], 100]], 100]]]],
						["setVar:to:",
							"Tile Type",
							["concatenate:with:",
								["readVariable", "Tile Type"],
								["concatenate:with:", " ", ["\/", ["rounded", ["*", ["readVariable", "sy"], 100]], 100]]]]]],
				[12,
					10,
					[["whenIReceive", "Clone Sprites"],
						["setSizeTo:", 260],
						["heading:", 90],
						["hide"],
						["setVar:to:", "type", 0]]]],
			"scriptComments": [[336, 483.5, 150, 200, false, 58, "Projectile from other"]],
			"sounds": [{
					"soundName": "pop",
					"soundID": 0,
					"md5": "83a9787d4cb6f3b7632b4ddfebf74367.wav",
					"sampleCount": 258,
					"rate": 11025,
					"format": ""
				}],
			"costumes": [{
					"costumeName": "Projectile_344",
					"baseLayerID": 396,
					"baseLayerMD5": "36f8614ed0f8031788f41f1fe3ab5948.png",
					"bitmapResolution": 2,
					"rotationCenterX": 11,
					"rotationCenterY": 11
				},
				{
					"costumeName": "Projectile_2",
					"baseLayerID": 397,
					"baseLayerMD5": "4db4ae82cba3a3afb045378d28a529b1.png",
					"bitmapResolution": 2,
					"rotationCenterX": 11,
					"rotationCenterY": 11
				},
				{
					"costumeName": "Projectile_3",
					"baseLayerID": 398,
					"baseLayerMD5": "4f08fb3f7163cf527e3dea6bf66e37c1.png",
					"bitmapResolution": 2,
					"rotationCenterX": 9,
					"rotationCenterY": 9
				}],
			"currentCostumeIndex": 1,
			"scratchX": 55.38461537665853,
			"scratchY": 19.999999999998295,
			"scale": 2.6,
			"direction": 90,
			"rotationStyle": "normal",
			"isDraggable": false,
			"indexInLibrary": 24,
			"visible": false,
			"spriteInfo": {
			}
		},
		{
			"target": "Projectile",
			"cmd": "getVar:",
			"param": "type",
			"color": 15629590,
			"label": "Projectile: type",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 396,
			"y": 303,
			"visible": false
		},
		{
			"target": "Projectile",
			"cmd": "getVar:",
			"param": "x",
			"color": 15629590,
			"label": "Projectile: x",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 338,
			"y": 5,
			"visible": false
		},
		{
			"target": "Projectile",
			"cmd": "getVar:",
			"param": "y",
			"color": 15629590,
			"label": "Projectile: y",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 173,
			"y": 211,
			"visible": false
		},
		{
			"target": "Projectile",
			"cmd": "getVar:",
			"param": "sx",
			"color": 15629590,
			"label": "Projectile: sx",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 239,
			"y": 23,
			"visible": false
		},
		{
			"target": "Projectile",
			"cmd": "getVar:",
			"param": "sy",
			"color": 15629590,
			"label": "Projectile: sy",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 372,
			"y": 69,
			"visible": false
		},
		{
			"target": "Projectile",
			"cmd": "getVar:",
			"param": "life",
			"color": 15629590,
			"label": "Projectile: life",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 345,
			"y": 192,
			"visible": false
		},
		{
			"objName": "Body",
			"variables": [{
					"name": "player ID",
					"value": "1",
					"isPersistent": false
				},
				{
					"name": "i",
					"value": 1,
					"isPersistent": false
				},
				{
					"name": "len",
					"value": "0",
					"isPersistent": false
				},
				{
					"name": "x",
					"value": 246.81525263229187,
					"isPersistent": false
				},
				{
					"name": "y",
					"value": 124,
					"isPersistent": false
				},
				{
					"name": "costume",
					"value": 0,
					"isPersistent": false
				},
				{
					"name": "dx",
					"value": 1.3846153846152447,
					"isPersistent": false
				},
				{
					"name": "dy",
					"value": -0.5000000000000426,
					"isPersistent": false
				},
				{
					"name": "named",
					"value": "",
					"isPersistent": false
				},
				{
					"name": "lastX",
					"value": "-9999",
					"isPersistent": false
				},
				{
					"name": "Last Say",
					"value": "",
					"isPersistent": false
				},
				{
					"name": "Say Time",
					"value": 0,
					"isPersistent": false
				},
				{
					"name": "timeout",
					"value": 0,
					"isPersistent": false
				}],
			"scripts": [[350.6,
					34.7,
					[["procDef", "clone", [], [], true],
						["setVar:to:", "player ID", "1"],
						["doRepeat",
							["-", ["getAttribute:of:", "@Max Players", "Multiplayer"], 1],
							[["changeVar:by:", "player ID", 1], ["createCloneOf", "_myself_"]]],
						["setVar:to:", "player ID", "1"]]],
				[2277, 1984, [["not", false]]],
				[40,
					266,
					[["whenIReceive", "pre animate"],
						["setVar:to:", "i", ["getLine:ofList:", ["readVariable", "player ID"], "@PlayerOffset"]],
						["setVar:to:", "len", ["getLine:ofList:", ["readVariable", "i"], "@PlayerData"]],
						["doIfElse",
							["|",
								["=", ["readVariable", "player ID"], ["getAttribute:of:", "@Player ID", "Multiplayer"]],
								["&",
									["=", ["readVariable", "player ID"], "8"],
									["<", ["getAttribute:of:", "@Player ID", "Multiplayer"], "1"]]],
							[["setVar:to:", "x", ["getAttribute:of:", "x", "Player"]],
								["setVar:to:", "lastX", ["-", ["readVariable", "x"], ["getAttribute:of:", "dir", "Player"]]],
								["setVar:to:", "y", ["getAttribute:of:", "y", "Player"]],
								["setVar:to:", "costume", ["getAttribute:of:", "costume", "Player"]],
								["doIfElse",
									[">", ["getAttribute:of:", "Mask", "Cursor"], "0"],
									[["setLine:ofList:to:", ["+", ["readVariable", "player ID"], 40], "@PlayerNames", ["getAttribute:of:", "Mask", "Cursor"]]],
									[["setLine:ofList:to:", ["+", ["readVariable", "player ID"], 40], "@PlayerNames", ["getAttribute:of:", "Profile_Hair", "Player"]]]],
								["setLine:ofList:to:", ["+", ["readVariable", "player ID"], 70], "@PlayerNames", ["getAttribute:of:", "dir", "Player"]],
								["doIf", ["=", ["getAttribute:of:", "@Player ID", "Multiplayer"], "0"], [["setVar:to:", "Last Say", "==="]]],
								["setVar:to:", "timeout", 0]],
							[["setVar:to:", "lastX", ["readVariable", "x"]],
								["doIfElse",
									["=", ["getLine:ofList:", ["readVariable", "player ID"], "@PlayerNames"], ""],
									[["setVar:to:", "costume", "-1"],
										["setLine:ofList:to:", ["+", ["readVariable", "player ID"], 30], "@PlayerNames", "-1"],
										["setLine:ofList:to:", ["+", ["readVariable", "player ID"], 60], "@PlayerNames", "0"],
										["stopScripts", "this script"]],
									[["doIfElse",
											[">", ["readVariable", "len"], "2"],
											[["changeVar:by:", "len", ["readVariable", "i"]],
												["setVar:to:",
													"x",
													["\/", ["getLine:ofList:", ["+", ["readVariable", "i"], 1], "@PlayerData"], ["readVariable", "TILE_SIZE"]]],
												["setVar:to:",
													"y",
													["\/", ["getLine:ofList:", ["+", ["readVariable", "i"], 2], "@PlayerData"], ["readVariable", "TILE_SIZE"]]],
												["setVar:to:", "costume", ["getLine:ofList:", ["+", ["readVariable", "i"], 3], "@PlayerData"]],
												["doIfElse",
													["<", ["readVariable", "lastX"], ["readVariable", "x"]],
													[["setLine:ofList:to:", ["+", ["readVariable", "player ID"], 70], "@PlayerNames", "90"]],
													[["doIf",
															[">", ["readVariable", "lastX"], ["readVariable", "x"]],
															[["setLine:ofList:to:", ["+", ["readVariable", "player ID"], 70], "@PlayerNames", "-90"]]]]],
												["setVar:to:", "timeout", 0]],
											[["changeVar:by:", "timeout", ["getAttribute:of:", "_Tick", "Multiplayer"]],
												["doIf", [">", ["readVariable", "timeout"], "100"], [["setVar:to:", "costume", "27"]]]]]]]]],
						["setVar:to:", "dx", ["-", ["readVariable", "x"], ["readVariable", "SCROLL_X"]]],
						["setVar:to:", "dy", ["-", ["readVariable", "y"], ["readVariable", "SCROLL_Y"]]],
						["setLine:ofList:to:", ["+", ["readVariable", "player ID"], 10], "@PlayerNames", ["readVariable", "x"]],
						["setLine:ofList:to:", ["+", ["readVariable", "player ID"], 20], "@PlayerNames", ["readVariable", "y"]],
						["doIfElse",
							["|",
								[">", ["computeFunction:of:", "abs", ["readVariable", "dx"]], "7"],
								[">", ["computeFunction:of:", "abs", ["readVariable", "dy"]], "5"]],
							[["setVar:to:", "costume", ["\/", 5.4, ["computeFunction:of:", "abs", ["readVariable", "dx"]]]],
								["doIf",
									[">", ["computeFunction:of:", "abs", ["*", ["readVariable", "costume"], ["readVariable", "dy"]]], "3.9"],
									[["setVar:to:", "costume", ["\/", 3.9, ["computeFunction:of:", "abs", ["readVariable", "dy"]]]]]],
								["setVar:to:", "dx", ["*", ["readVariable", "dx"], ["readVariable", "costume"]]],
								["setVar:to:", "dy", ["-", ["*", ["readVariable", "dy"], ["readVariable", "costume"]], 0.92]],
								["setLine:ofList:to:", ["+", ["readVariable", "player ID"], 30], "@PlayerNames", "-1"],
								["setVar:to:", "costume", "26"]],
							[["doIfElse",
									["=", ["readVariable", "costume"], "27"],
									[["setLine:ofList:to:", ["+", ["readVariable", "player ID"], 30], "@PlayerNames", "-1"]],
									[["setLine:ofList:to:", ["+", ["readVariable", "player ID"], 30], "@PlayerNames", ["readVariable", "costume"]],
										["doIf", ["=", ["readVariable", "costume"], "26"], [["setVar:to:", "costume", "-1"]]]]]]]]],
				[623, 33, [["whenIReceive", "Hide All"], ["hide"]]],
				[500,
					1638,
					[["setLine:ofList:to:", ["+", ["readVariable", "player ID"], 10], "@PlayerNames", ["readVariable", "x"]],
						["setLine:ofList:to:", ["+", ["readVariable", "player ID"], 20], "@PlayerNames", ["readVariable", "y"]]]],
				[944,
					24,
					[["whenIReceive", "@Connected"],
						["setVar:to:", "named", ""],
						["setVar:to:", "Last Say", "zzz"],
						["setVar:to:", "costume", "-1"],
						["hide"],
						["think:", ""]]],
				[41,
					24,
					[["whenIReceive", "Clone Sprites"],
						["hide"],
						["heading:", 90],
						["setSizeTo:", 300],
						["setVar:to:", "named", ""],
						["setVar:to:", "Last Say", ""],
						["setVar:to:", "lastX", "-9999"],
						["setVar:to:", "Say Time", 0],
						["setVar:to:", "timeout", 0],
						["call", "clone"]]],
				[943,
					260.95,
					[["whenIReceive", "animate"],
						["doIfElse",
							["=", ["readVariable", "costume"], "-1"],
							[["hide"]],
							[["gotoX:y:",
									["computeFunction:of:", "floor", ["*", ["readVariable", "dx"], ["readVariable", "TILE_SIZE"]]],
									["+", ["computeFunction:of:", "floor", ["*", ["readVariable", "dy"], ["readVariable", "TILE_SIZE"]]], 37]],
								["show"],
								["doIf",
									["not", ["=", ["+", ["readVariable", "costume"], 1], ["costumeIndex"]]],
									[["lookLike:", ["+", ["readVariable", "costume"], 1]]]],
								["doIf",
									["not", ["=", ["readVariable", "costume"], "26"]],
									[["doIfElse",
											["=", ["heading"], ["getLine:ofList:", ["+", ["readVariable", "player ID"], 70], "@PlayerNames"]],
											null,
											[["heading:", ["getLine:ofList:", ["+", ["readVariable", "player ID"], 70], "@PlayerNames"]]]]]]]]]]],
			"scriptComments": [[669, 108, 282, 221, true, -1, "0 = Name\r10 = x\r20 = y\r30 = costume\r40 = hair\r50 = land claim\r60 = wave tool\r70 = dir"]],
			"sounds": [{
					"soundName": "pop",
					"soundID": 0,
					"md5": "83a9787d4cb6f3b7632b4ddfebf74367.wav",
					"sampleCount": 258,
					"rate": 11025,
					"format": ""
				}],
			"costumes": [{
					"costumeName": "body_01",
					"baseLayerID": 399,
					"baseLayerMD5": "59be5816574d057aabc99761998b50aa.png",
					"bitmapResolution": 2,
					"rotationCenterX": 12,
					"rotationCenterY": 16
				},
				{
					"costumeName": "body_02",
					"baseLayerID": 400,
					"baseLayerMD5": "a6f1796853924ef178dd3ec499e881db.png",
					"bitmapResolution": 2,
					"rotationCenterX": 14,
					"rotationCenterY": 16
				},
				{
					"costumeName": "body_03",
					"baseLayerID": 401,
					"baseLayerMD5": "af4b8df6b28ba7e713206f5a6ec414bf.png",
					"bitmapResolution": 2,
					"rotationCenterX": 10,
					"rotationCenterY": 16
				},
				{
					"costumeName": "body_04",
					"baseLayerID": 402,
					"baseLayerMD5": "8b5aa85482240b9f04ce3515b528e6ff.png",
					"bitmapResolution": 2,
					"rotationCenterX": 10,
					"rotationCenterY": 16
				},
				{
					"costumeName": "body_05",
					"baseLayerID": 403,
					"baseLayerMD5": "9d23c5f5a538105a97030cdadbb2a9f9.png",
					"bitmapResolution": 2,
					"rotationCenterX": 10,
					"rotationCenterY": 16
				},
				{
					"costumeName": "body_06",
					"baseLayerID": 404,
					"baseLayerMD5": "fe164a39e635b25b584aa37d7a0a45ae.png",
					"bitmapResolution": 2,
					"rotationCenterX": 14,
					"rotationCenterY": 16
				},
				{
					"costumeName": "body_08",
					"baseLayerID": 405,
					"baseLayerMD5": "9e303e5bebca24bcdfd4c61e7db80882.png",
					"bitmapResolution": 2,
					"rotationCenterX": 16,
					"rotationCenterY": 18
				},
				{
					"costumeName": "body_10",
					"baseLayerID": 406,
					"baseLayerMD5": "355ea23b3ded64a9050c3b8bcddfa0a7.png",
					"bitmapResolution": 2,
					"rotationCenterX": 16,
					"rotationCenterY": 18
				},
				{
					"costumeName": "body_12",
					"baseLayerID": 407,
					"baseLayerMD5": "6d1997a73d7ae5a60d90092541ba33a5.png",
					"bitmapResolution": 2,
					"rotationCenterX": 14,
					"rotationCenterY": 16
				},
				{
					"costumeName": "body_14",
					"baseLayerID": 408,
					"baseLayerMD5": "a056d646147f3079e73e8b7fcf4ef21e.png",
					"bitmapResolution": 2,
					"rotationCenterX": 14,
					"rotationCenterY": 16
				},
				{
					"costumeName": "body_16",
					"baseLayerID": 409,
					"baseLayerMD5": "a91092ff3181ca0804013427cdd67afd.png",
					"bitmapResolution": 2,
					"rotationCenterX": 10,
					"rotationCenterY": 18
				},
				{
					"costumeName": "body_18",
					"baseLayerID": 410,
					"baseLayerMD5": "4d2c2edcdb2b3b196fbc8a929e46eae1.png",
					"bitmapResolution": 2,
					"rotationCenterX": 12,
					"rotationCenterY": 16
				},
				{
					"costumeName": "body_20",
					"baseLayerID": 411,
					"baseLayerMD5": "16ed22f06c4e8034fd8651fd1ff01d78.png",
					"bitmapResolution": 2,
					"rotationCenterX": 14,
					"rotationCenterY": 16
				},
				{
					"costumeName": "bodyB_01",
					"baseLayerID": 412,
					"baseLayerMD5": "5ce3bbe7f657d84ab8b4237470630b1e.png",
					"bitmapResolution": 2,
					"rotationCenterX": 12,
					"rotationCenterY": 16
				},
				{
					"costumeName": "bodyB_02",
					"baseLayerID": 413,
					"baseLayerMD5": "ed2216beba2cf3958f0be5737500aed2.png",
					"bitmapResolution": 2,
					"rotationCenterX": 14,
					"rotationCenterY": 16
				},
				{
					"costumeName": "bodyB_03",
					"baseLayerID": 414,
					"baseLayerMD5": "e28b82f1be09df2303ac0eea13a2a51a.png",
					"bitmapResolution": 2,
					"rotationCenterX": 10,
					"rotationCenterY": 16
				},
				{
					"costumeName": "bodyB_04",
					"baseLayerID": 415,
					"baseLayerMD5": "4141cdfd492252bb6a80c359a71500f0.png",
					"bitmapResolution": 2,
					"rotationCenterX": 10,
					"rotationCenterY": 16
				},
				{
					"costumeName": "bodyB_05",
					"baseLayerID": 416,
					"baseLayerMD5": "c04e304392bffb2c659933fe4cd59b99.png",
					"bitmapResolution": 2,
					"rotationCenterX": 10,
					"rotationCenterY": 16
				},
				{
					"costumeName": "bodyB_06",
					"baseLayerID": 417,
					"baseLayerMD5": "c639adf9c6beef24f16403097536d5c9.png",
					"bitmapResolution": 2,
					"rotationCenterX": 14,
					"rotationCenterY": 16
				},
				{
					"costumeName": "bodyB_08",
					"baseLayerID": 418,
					"baseLayerMD5": "1023e963ed21cc59b0b7fae38b623c2b.png",
					"bitmapResolution": 2,
					"rotationCenterX": 16,
					"rotationCenterY": 18
				},
				{
					"costumeName": "bodyB_10",
					"baseLayerID": 419,
					"baseLayerMD5": "7c44ee8cc1280ff9a283eb89fd11733a.png",
					"bitmapResolution": 2,
					"rotationCenterX": 16,
					"rotationCenterY": 18
				},
				{
					"costumeName": "bodyB_12",
					"baseLayerID": 420,
					"baseLayerMD5": "2b0480b5ce059b5a4f232a304d36d421.png",
					"bitmapResolution": 2,
					"rotationCenterX": 14,
					"rotationCenterY": 16
				},
				{
					"costumeName": "bodyB_14",
					"baseLayerID": 421,
					"baseLayerMD5": "94093994627d6727700222037405bcfc.png",
					"bitmapResolution": 2,
					"rotationCenterX": 14,
					"rotationCenterY": 16
				},
				{
					"costumeName": "bodyB_16",
					"baseLayerID": 422,
					"baseLayerMD5": "a5aebe109648597e23b68e9e669fcbb6.png",
					"bitmapResolution": 2,
					"rotationCenterX": 10,
					"rotationCenterY": 18
				},
				{
					"costumeName": "bodyB_18",
					"baseLayerID": 423,
					"baseLayerMD5": "b51f892317bc9a4e1e0c097400f5492c.png",
					"bitmapResolution": 2,
					"rotationCenterX": 12,
					"rotationCenterY": 16
				},
				{
					"costumeName": "bodyB_20",
					"baseLayerID": 424,
					"baseLayerMD5": "77c3ae855e07c1275bdbca1fe310378f.png",
					"bitmapResolution": 2,
					"rotationCenterX": 14,
					"rotationCenterY": 16
				},
				{
					"costumeName": "dot",
					"baseLayerID": 425,
					"baseLayerMD5": "a9ce373ef23f7e58859b38862c224fb6.png",
					"bitmapResolution": 2,
					"rotationCenterX": 4,
					"rotationCenterY": 4
				},
				{
					"costumeName": "offline",
					"baseLayerID": 426,
					"baseLayerMD5": "ffa237921a8e2f6ebb395c781039e776.png",
					"bitmapResolution": 2,
					"rotationCenterX": 12,
					"rotationCenterY": 16
				}],
			"currentCostumeIndex": 0,
			"scratchX": 55,
			"scratchY": 16,
			"scale": 3,
			"direction": 90,
			"rotationStyle": "leftRight",
			"isDraggable": false,
			"indexInLibrary": 3,
			"visible": false,
			"spriteInfo": {
			}
		},
		{
			"target": "Player",
			"cmd": "getVar:",
			"param": "Space_Fire",
			"color": 15629590,
			"label": "Player: Space_Fire",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 90,
			"y": 154,
			"visible": false
		},
		{
			"target": "Player",
			"cmd": "getVar:",
			"param": "MOUSE_PRESSED",
			"color": 15629590,
			"label": "Player: MOUSE_PRESSED",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 256,
			"y": 77,
			"visible": false
		},
		{
			"target": "Safe Chat",
			"cmd": "getVar:",
			"param": "canHelp",
			"color": 15629590,
			"label": "Safe Chat: canHelp",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 267,
			"y": 39,
			"visible": false
		},
		{
			"target": "Tool Swing",
			"cmd": "getVar:",
			"param": "id",
			"color": 15629590,
			"label": "Tool Swing: id",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 345,
			"y": 68,
			"visible": false
		},
		{
			"target": "Cursor",
			"cmd": "getVar:",
			"param": "INF_WAT1",
			"color": 15629590,
			"label": "Cursor: INF_WAT1",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 159,
			"y": 126,
			"visible": false
		},
		{
			"target": "Player",
			"cmd": "getVar:",
			"param": "In Liquid",
			"color": 15629590,
			"label": "Player: In Liquid",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 254,
			"y": 171,
			"visible": false
		},
		{
			"target": "Particles",
			"cmd": "getVar:",
			"param": "time",
			"color": 15629590,
			"label": "Particles: time",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 55,
			"y": 57,
			"visible": false
		},
		{
			"target": "Breath",
			"cmd": "getVar:",
			"param": "Breath",
			"color": 15629590,
			"label": "Breath: Breath",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 121,
			"y": 208,
			"visible": false
		},
		{
			"target": "Breath",
			"cmd": "getVar:",
			"param": "gasp",
			"color": 15629590,
			"label": "Breath: gasp",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 340,
			"y": 291,
			"visible": false
		},
		{
			"target": "Cursor",
			"cmd": "getVar:",
			"param": "x",
			"color": 15629590,
			"label": "Cursor: x",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 50,
			"y": 91,
			"visible": false
		},
		{
			"target": "Cursor",
			"cmd": "getVar:",
			"param": "distance",
			"color": 15629590,
			"label": "Cursor: distance",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 48,
			"y": 52,
			"visible": false
		},
		{
			"target": "Cursor",
			"cmd": "getVar:",
			"param": "tmp",
			"color": 15629590,
			"label": "Cursor: tmp",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 51,
			"y": 211,
			"visible": false
		},
		{
			"target": "Cursor",
			"cmd": "getVar:",
			"param": "y",
			"color": 15629590,
			"label": "Cursor: y",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 51,
			"y": 184,
			"visible": false
		},
		{
			"target": "Tiles",
			"cmd": "getVar:",
			"param": "light",
			"color": 15629590,
			"label": "Tiles: light",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 186,
			"y": 313,
			"visible": false
		},
		{
			"objName": "Lighting",
			"variables": [{
					"name": "index",
					"value": 44374,
					"isPersistent": false
				},
				{
					"name": "x",
					"value": 0,
					"isPersistent": false
				},
				{
					"name": "light",
					"value": 120,
					"isPersistent": false
				},
				{
					"name": "Tile Is Solid",
					"value": "-5",
					"isPersistent": false
				},
				{
					"name": "tile",
					"value": 87,
					"isPersistent": false
				},
				{
					"name": "rIdx",
					"value": 2,
					"isPersistent": false
				},
				{
					"name": "max",
					"value": "0",
					"isPersistent": false
				},
				{
					"name": "ln",
					"value": 120,
					"isPersistent": false
				},
				{
					"name": "le",
					"value": 120,
					"isPersistent": false
				},
				{
					"name": "ls",
					"value": 105,
					"isPersistent": false
				},
				{
					"name": "lw",
					"value": 120,
					"isPersistent": false
				},
				{
					"name": "ii",
					"value": 85565,
					"isPersistent": false
				},
				{
					"name": "iii",
					"value": 45561,
					"isPersistent": false
				}],
			"lists": [{
					"listName": "light tiles",
					"contents": ["38",
						"47",
						"48",
						"49",
						"52",
						"98",
						"99",
						"178",
						"179",
						"180",
						"181",
						"182",
						"183",
						"184",
						"185",
						"186",
						"187",
						"188",
						"189",
						"190",
						"191",
						"221",
						"248",
						"251",
						"252"],
					"isPersistent": false,
					"x": 38,
					"y": 67,
					"width": 301,
					"height": 295,
					"visible": false
				},
				{
					"listName": "_SolidLight",
					"contents": [],
					"isPersistent": false,
					"x": 383,
					"y": 82,
					"width": 120,
					"height": 280,
					"visible": false
				}],
			"scripts": [[4424, 3648, [["not", false]]],
				[23, 36, [["whenIReceive", "LightingAll"], ["call", "Light All"]]],
				[26,
					164,
					[["procDef", "Light All", [], [], false],
						["deleteLine:ofList:", "all", "_Light"],
						["doRepeat", ["lineCountOfList:", "_Level"], [["append:toList:", "0", "_Light"], ["append:toList:", "0", "_Light"]]],
						["setVar:to:",
							"index",
							["+",
								["*", ["*", ["-", ["readVariable", "MAP_HEIGHT"], 1], ["readVariable", "MAP_WIDTH"]], 2],
								1]],
						["deleteLine:ofList:", "all", "LightMod"],
						["deleteLine:ofList:", "all", "_SolidLight"],
						["doRepeat",
							["readVariable", "MAP_WIDTH"],
							[["append:toList:", ["readVariable", "index"], "LightMod"], ["changeVar:by:", "index", 2]]],
						["setVar:to:", "index", "1"],
						["doRepeat",
							["lineCountOfList:", "_Level"],
							[["setVar:to:", "tile", ["getLine:ofList:", ["readVariable", "index"], "_Level"]],
								["doIf",
									["list:contains:", "light tiles", ["readVariable", "tile"]],
									[["append:toList:", ["*", ["readVariable", "index"], 2], "LightMod"]]],
								["changeVar:by:", "index", 1]]],
						["setVar:to:", "ii", 0],
						["setVar:to:", "iii", 0],
						["doUntil",
							["&",
								["=", ["lineCountOfList:", "LightMod"], ["readVariable", "ii"]],
								["=", ["lineCountOfList:", "_SolidLight"], ["readVariable", "iii"]]],
							[["doRepeat",
									["-", ["lineCountOfList:", "LightMod"], ["readVariable", "ii"]],
									[["changeVar:by:", "ii", 1], ["call", "Process Light (initial) %n", ["getLine:ofList:", ["readVariable", "ii"], "LightMod"]]]],
								["doIf",
									["=", ["lineCountOfList:", "LightMod"], ["readVariable", "ii"]],
									[["doRepeat",
											["-", ["lineCountOfList:", "_SolidLight"], ["readVariable", "iii"]],
											[["changeVar:by:", "iii", 1], ["call", "Process Light (initial) %n", ["getLine:ofList:", ["readVariable", "iii"], "_SolidLight"]]]]]]]],
						["deleteLine:ofList:", "all", "LightMod"],
						["deleteLine:ofList:", "all", "_SolidLight"],
						["setVar:to:", "debug", ["lineCountOfList:", "LightMod"]]]],
				[775,
					272,
					[["whenIReceive", "pre animate"],
						["setVar:to:", "x", ["lineCountOfList:", "LightMod"]],
						["setVar:to:", "max", "0"],
						["doUntil",
							["|", ["<", ["lineCountOfList:", "LightMod"], "1"], [">", ["readVariable", "max"], "128"]],
							[["changeVar:by:", "max", ["lineCountOfList:", "LightMod"]],
								["doRepeat",
									["lineCountOfList:", "LightMod"],
									[["call", "Process Light %n", ["getLine:ofList:", 1, "LightMod"]], ["deleteLine:ofList:", 1, "LightMod"]]],
								["setVar:to:", "debug", ["lineCountOfList:", "LightMod"]]]]]],
				[777,
					51,
					[["procDef", "Get Solid Details %n", ["typeID"], [1], true],
						["doIfElse",
							[">", ["getParam", "typeID", "r"], "0"],
							[["setVar:to:",
									"Tile Is Solid",
									["getLine:ofList:",
										["+", 3, ["*", ["getParam", "typeID", "r"], ["readVariable", "TMul"]]],
										"_TileData"]]],
							[["setVar:to:", "Tile Is Solid", "0"]]]]],
				[781.7,
					617,
					[["procDef", "Process Light %n", ["idx"], [1], true],
						["setVar:to:", "index", ["computeFunction:of:", "ceiling", ["\/", ["getParam", "idx", "r"], 2]]],
						["setVar:to:", "tile", ["getLine:ofList:", ["readVariable", "index"], "_Level"]],
						["doIfElse",
							[">", ["readVariable", "tile"], "0"],
							[["doIfElse",
									["&",
										["=", ["%", ["getParam", "idx", "r"], 2], "0"],
										["list:contains:", "light tiles", ["readVariable", "tile"]]],
									[["setVar:to:", "Tile Is Solid", "110"]],
									[["doIfElse",
											[">",
												["getLine:ofList:", ["+", 3, ["*", ["readVariable", "tile"], ["readVariable", "TMul"]]], "_TileData"],
												"7.9"],
											[["setVar:to:", "Tile Is Solid", "-15"]],
											[["setVar:to:", "Tile Is Solid", "-5"]]]]]],
							[["setVar:to:", "Tile Is Solid", "-5"]]],
						["doIfElse",
							["<", ["readVariable", "Tile Is Solid"], "0"],
							[["setVar:to:",
									"ln",
									["getLine:ofList:",
										["+", ["getParam", "idx", "r"], ["*", ["readVariable", "MAP_WIDTH"], 2]],
										"_Light"]],
								["setVar:to:", "le", ["getLine:ofList:", ["+", ["getParam", "idx", "r"], 2], "_Light"]],
								["setVar:to:", "lw", ["getLine:ofList:", ["-", ["getParam", "idx", "r"], 2], "_Light"]],
								["setVar:to:",
									"ls",
									["getLine:ofList:",
										["-", ["getParam", "idx", "r"], ["*", ["readVariable", "MAP_WIDTH"], 2]],
										"_Light"]],
								["doIfElse",
									["=", ["%", ["getParam", "idx", "r"], 2], "1"],
									[["doIfElse",
											[">",
												["readVariable", "index"],
												["*", ["-", ["readVariable", "MAP_HEIGHT"], 22], ["readVariable", "MAP_WIDTH"]]],
											[["setVar:to:", "light", "125"]],
											[["doIfElse",
													["&",
														["=", ["readVariable", "Tile Is Solid"], "-5"],
														[">", ["readVariable", "index"], ["*", ["readVariable", "MAP_WIDTH"], ["getAttribute:of:", "sea level", "Setup Level"]]]],
													[["setVar:to:", "light", ["+", ["readVariable", "ln"], 5]]],
													[["setVar:to:", "light", ["readVariable", "ln"]]]]]]],
									[["setVar:to:", "light", ["readVariable", "ln"]]]],
								["doIf",
									[">", ["readVariable", "le"], ["readVariable", "light"]],
									[["setVar:to:", "light", ["readVariable", "le"]]]],
								["doIf",
									[">", ["readVariable", "ls"], ["readVariable", "light"]],
									[["setVar:to:", "light", ["readVariable", "ls"]]]],
								["doIf",
									[">", ["readVariable", "lw"], ["readVariable", "light"]],
									[["setVar:to:", "light", ["readVariable", "lw"]]]],
								["changeVar:by:", "light", ["readVariable", "Tile Is Solid"]],
								["doIf", ["<", ["readVariable", "light"], "0"], [["setVar:to:", "light", 0]]]],
							[["setVar:to:", "light", ["readVariable", "Tile Is Solid"]]]],
						["doIfElse",
							["=", ["readVariable", "light"], ["getLine:ofList:", ["getParam", "idx", "r"], "_Light"]],
							null,
							[["setLine:ofList:to:", ["getParam", "idx", "r"], "_Light", ["readVariable", "light"]],
								["doIf",
									["<", ["+", ["readVariable", "index"], ["readVariable", "MAP_WIDTH"]], ["lineCountOfList:", "_Level"]],
									[["append:toList:",
											["+", ["getParam", "idx", "r"], ["*", ["readVariable", "MAP_WIDTH"], 2]],
											"LightMod"]]],
								["doIf",
									[">", ["readVariable", "index"], ["readVariable", "MAP_WIDTH"]],
									[["append:toList:",
											["-", ["getParam", "idx", "r"], ["*", ["readVariable", "MAP_WIDTH"], 2]],
											"LightMod"]]],
								["doIfElse",
									["=", ["%", ["readVariable", "index"], ["readVariable", "MAP_WIDTH"]], "1"],
									null,
									[["append:toList:", ["-", ["getParam", "idx", "r"], 2], "LightMod"]]],
								["doIfElse",
									["=", ["%", ["readVariable", "index"], ["readVariable", "MAP_WIDTH"]], "0"],
									null,
									[["append:toList:", ["+", ["getParam", "idx", "r"], 2], "LightMod"]]]]]]],
				[1293.4,
					1995.4,
					[["procDef", "Add Light Mod %n", ["idx"], [1], true],
						["doIfElse",
							["list:contains:", "LightMod", ["getParam", "idx", "r"]],
							null,
							[["append:toList:", ["getParam", "idx", "r"], "LightMod"]]]]],
				[1249.7,
					2205,
					[["doIf",
							["<", ["+", ["readVariable", "index"], ["readVariable", "MAP_WIDTH"]], ["lineCountOfList:", "_Level"]],
							[["call",
									"Add Light Mod %n",
									["+", ["getParam", "idx", "r"], ["*", ["readVariable", "MAP_WIDTH"], 2]]]]],
						["doIf",
							[">", ["readVariable", "index"], ["readVariable", "MAP_WIDTH"]],
							[["call",
									"Add Light Mod %n",
									["-", ["getParam", "idx", "r"], ["*", ["readVariable", "MAP_WIDTH"], 2]]]]],
						["doIfElse",
							["=", ["%", ["readVariable", "index"], ["readVariable", "MAP_WIDTH"]], "1"],
							null,
							[["call", "Add Light Mod %n", ["-", ["getParam", "idx", "r"], 2]]]],
						["doIfElse",
							["=", ["%", ["readVariable", "index"], ["readVariable", "MAP_WIDTH"]], "0"],
							null,
							[["call", "Add Light Mod %n", ["+", ["getParam", "idx", "r"], 2]]]]]],
				[787.25,
					2527.85,
					[["procDef", "Loop Remove Light %n", ["idx"], [1], true],
						["setVar:to:", "index", ["*", ["getParam", "idx", "r"], 2]],
						["setVar:to:", "light", ["getLine:ofList:", ["readVariable", "index"], "_Light"]],
						["doIf",
							[">", ["readVariable", "light"], "0"],
							[["setLine:ofList:to:", ["readVariable", "index"], "_Light", "0"],
								["doIfElse",
									["list:contains:", "RemoveIdx", ["-", ["getParam", "idx", "r"], 1]],
									null,
									[["doIfElse",
											[">", ["getLine:ofList:", ["-", ["readVariable", "index"], 2], "_Light"], ["readVariable", "light"]],
											[["append:toList:", ["-", ["getParam", "idx", "r"], 1], "LightMod"],
												["doIf",
													false,
													[["insert:at:ofList:", ["-", ["getParam", "idx", "r"], 1], 1, "RemoveIdx"],
														["changeVar:by:", "rIdx", 1]]]],
											[["append:toList:", ["-", ["getParam", "idx", "r"], 1], "RemoveIdx"]]]]],
								["doIfElse",
									["list:contains:", "RemoveIdx", ["+", ["getParam", "idx", "r"], 1]],
									null,
									[["doIfElse",
											[">", ["getLine:ofList:", ["+", ["readVariable", "index"], 2], "_Light"], ["readVariable", "light"]],
											[["append:toList:", ["+", ["getParam", "idx", "r"], 1], "LightMod"],
												["doIf",
													false,
													[["insert:at:ofList:", ["+", ["getParam", "idx", "r"], 1], 1, "RemoveIdx"],
														["changeVar:by:", "rIdx", 1]]]],
											[["append:toList:", ["+", ["getParam", "idx", "r"], 1], "RemoveIdx"]]]]],
								["doIfElse",
									["list:contains:", "RemoveIdx", ["-", ["getParam", "idx", "r"], ["readVariable", "MAP_WIDTH"]]],
									null,
									[["doIfElse",
											[">",
												["getLine:ofList:", ["-", ["readVariable", "index"], ["*", ["readVariable", "MAP_WIDTH"], 2]], "_Light"],
												["readVariable", "light"]],
											[["append:toList:", ["-", ["getParam", "idx", "r"], ["readVariable", "MAP_WIDTH"]], "LightMod"],
												["doIf",
													false,
													[["insert:at:ofList:", ["-", ["getParam", "idx", "r"], ["readVariable", "MAP_WIDTH"]], 1, "RemoveIdx"],
														["changeVar:by:", "rIdx", 1]]]],
											[["append:toList:", ["-", ["getParam", "idx", "r"], ["readVariable", "MAP_WIDTH"]], "RemoveIdx"]]]]],
								["doIfElse",
									["list:contains:", "RemoveIdx", ["+", ["getParam", "idx", "r"], ["readVariable", "MAP_WIDTH"]]],
									null,
									[["doIfElse",
											[">",
												["getLine:ofList:", ["+", ["readVariable", "index"], ["*", ["readVariable", "MAP_WIDTH"], 2]], "_Light"],
												["readVariable", "light"]],
											[["append:toList:", ["+", ["getParam", "idx", "r"], ["readVariable", "MAP_WIDTH"]], "LightMod"],
												["doIf",
													false,
													[["insert:at:ofList:", ["+", ["getParam", "idx", "r"], ["readVariable", "MAP_WIDTH"]], 1, "RemoveIdx"],
														["changeVar:by:", "rIdx", 1]]]],
											[["append:toList:", ["+", ["getParam", "idx", "r"], ["readVariable", "MAP_WIDTH"]], "RemoveIdx"]]]]]]]]],
				[488, 105, [["timerReset"], ["call", "Light All"], ["doAsk", ["timer"]]]],
				[29.6,
					1159.6,
					[["procDef", "Process Light (initial) %n", ["idx"], [1], true],
						["doIf",
							["=", ["getLine:ofList:", ["getParam", "idx", "r"], "_Light"], "0"],
							[["setVar:to:", "index", ["computeFunction:of:", "ceiling", ["\/", ["getParam", "idx", "r"], 2]]],
								["setVar:to:", "tile", ["getLine:ofList:", ["readVariable", "index"], "_Level"]],
								["doIfElse",
									[">", ["readVariable", "tile"], "0"],
									[["doIfElse",
											["&",
												["=", ["%", ["getParam", "idx", "r"], 2], "0"],
												["list:contains:", "light tiles", ["readVariable", "tile"]]],
											[["setVar:to:", "Tile Is Solid", "110"]],
											[["doIfElse",
													[">",
														["getLine:ofList:", ["+", 3, ["*", ["readVariable", "tile"], ["readVariable", "TMul"]]], "_TileData"],
														"7.9"],
													[["setVar:to:", "Tile Is Solid", "-15"]],
													[["setVar:to:", "Tile Is Solid", "-5"]]]]]],
									[["setVar:to:", "Tile Is Solid", "-5"]]],
								["doIfElse",
									["<", ["readVariable", "Tile Is Solid"], "0"],
									[["setVar:to:",
											"ln",
											["getLine:ofList:",
												["+", ["getParam", "idx", "r"], ["*", ["readVariable", "MAP_WIDTH"], 2]],
												"_Light"]],
										["setVar:to:", "le", ["getLine:ofList:", ["+", ["getParam", "idx", "r"], 2], "_Light"]],
										["setVar:to:", "lw", ["getLine:ofList:", ["-", ["getParam", "idx", "r"], 2], "_Light"]],
										["setVar:to:",
											"ls",
											["getLine:ofList:",
												["-", ["getParam", "idx", "r"], ["*", ["readVariable", "MAP_WIDTH"], 2]],
												"_Light"]],
										["doIfElse",
											["=", ["%", ["getParam", "idx", "r"], 2], "1"],
											[["doIfElse",
													[">",
														["readVariable", "index"],
														["*", ["-", ["readVariable", "MAP_HEIGHT"], 22], ["readVariable", "MAP_WIDTH"]]],
													[["setVar:to:", "light", "125"]],
													[["doIfElse",
															["&",
																["=", ["readVariable", "Tile Is Solid"], "-5"],
																[">", ["readVariable", "index"], ["*", ["readVariable", "MAP_WIDTH"], ["getAttribute:of:", "sea level", "Setup Level"]]]],
															[["setVar:to:", "light", ["+", ["readVariable", "ln"], 5]]],
															[["setVar:to:", "light", ["readVariable", "ln"]]]]]]],
											[["setVar:to:", "light", ["readVariable", "ln"]]]],
										["doIf",
											[">", ["readVariable", "le"], ["readVariable", "light"]],
											[["setVar:to:", "light", ["readVariable", "le"]]]],
										["doIf",
											[">", ["readVariable", "ls"], ["readVariable", "light"]],
											[["setVar:to:", "light", ["readVariable", "ls"]]]],
										["doIf",
											[">", ["readVariable", "lw"], ["readVariable", "light"]],
											[["setVar:to:", "light", ["readVariable", "lw"]]]],
										["changeVar:by:", "light", ["readVariable", "Tile Is Solid"]],
										["doIf", ["<", ["readVariable", "light"], "0"], [["setVar:to:", "light", 0]]]],
									[["setVar:to:", "light", ["readVariable", "Tile Is Solid"]]]],
								["doIfElse",
									["=", ["readVariable", "light"], ["getLine:ofList:", ["getParam", "idx", "r"], "_Light"]],
									null,
									[["setLine:ofList:to:", ["getParam", "idx", "r"], "_Light", ["readVariable", "light"]],
										["doIfElse",
											[">", ["readVariable", "Tile Is Solid"], "-15"],
											[["doIf",
													["<", ["+", ["readVariable", "index"], ["readVariable", "MAP_WIDTH"]], ["lineCountOfList:", "_Level"]],
													[["append:toList:",
															["+", ["getParam", "idx", "r"], ["*", ["readVariable", "MAP_WIDTH"], 2]],
															"LightMod"]]],
												["doIf",
													[">", ["readVariable", "index"], ["readVariable", "MAP_WIDTH"]],
													[["append:toList:",
															["-", ["getParam", "idx", "r"], ["*", ["readVariable", "MAP_WIDTH"], 2]],
															"LightMod"]]],
												["doIfElse",
													["=", ["%", ["readVariable", "index"], ["readVariable", "MAP_WIDTH"]], "1"],
													null,
													[["append:toList:", ["-", ["getParam", "idx", "r"], 2], "LightMod"]]],
												["doIfElse",
													["=", ["%", ["readVariable", "index"], ["readVariable", "MAP_WIDTH"]], "0"],
													null,
													[["append:toList:", ["+", ["getParam", "idx", "r"], 2], "LightMod"]]]],
											[["doIf",
													["<", ["+", ["readVariable", "index"], ["readVariable", "MAP_WIDTH"]], ["lineCountOfList:", "_Level"]],
													[["append:toList:",
															["+", ["getParam", "idx", "r"], ["*", ["readVariable", "MAP_WIDTH"], 2]],
															"_SolidLight"]]],
												["doIf",
													[">", ["readVariable", "index"], ["readVariable", "MAP_WIDTH"]],
													[["append:toList:",
															["-", ["getParam", "idx", "r"], ["*", ["readVariable", "MAP_WIDTH"], 2]],
															"_SolidLight"]]],
												["doIfElse",
													["=", ["%", ["readVariable", "index"], ["readVariable", "MAP_WIDTH"]], "1"],
													null,
													[["append:toList:", ["-", ["getParam", "idx", "r"], 2], "_SolidLight"]]],
												["doIfElse",
													["=", ["%", ["readVariable", "index"], ["readVariable", "MAP_WIDTH"]], "0"],
													null,
													[["append:toList:", ["+", ["getParam", "idx", "r"], 2], "_SolidLight"]]]]]]]]]]],
				[284,
					430,
					[["|",
							["&", [">", ["readVariable", "tile"], "46"], ["<", ["readVariable", "tile"], "50"]],
							["&", [">", ["readVariable", "tile"], "177"], ["<", ["readVariable", "tile"], "192"]]]]],
				[460,
					1128,
					[["deleteLine:ofList:", "all", "LightMod"],
						["deleteLine:ofList:", "all", "_SolidLight"],
						["setVar:to:", "debug", ["lineCountOfList:", "LightMod"]]]],
				[475, 239, [["lineCountOfList:", "LightMod"]]],
				[481, 296, [["lineCountOfList:", "_SolidLight"]]],
				[519.6,
					1371.6,
					[["doIfElse", ["<", ["readVariable", "tile"], "177"], null, [["setVar:to:", "Tile Is Solid", "90"]]]]],
				[1290.7,
					796,
					[["doIfElse",
							["<", ["readVariable", "tile"], "177"],
							[["setVar:to:", "Tile Is Solid", "110"]],
							[["setVar:to:", "Tile Is Solid", "90"]]]]],
				[477.6, 1850.6, [["\/", ["lineCountOfList:", "_Level"], 2]]],
				[1261.7, 1279, [["\/", ["lineCountOfList:", "_Level"], 2]]]],
			"scriptComments": [[216, 42, 276, 191, true, 1, "almost 15 seconds\rnow 7.9 seconds\rnow 5.6\rnow 5.2"]],
			"sounds": [{
					"soundName": "pop",
					"soundID": 0,
					"md5": "83a9787d4cb6f3b7632b4ddfebf74367.wav",
					"sampleCount": 258,
					"rate": 11025,
					"format": ""
				}],
			"costumes": [{
					"costumeName": "costume1",
					"baseLayerID": 427,
					"baseLayerMD5": "d36f6603ec293d2c2198d3ea05109fe0.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 0
				}],
			"currentCostumeIndex": 0,
			"scratchX": -5,
			"scratchY": 34,
			"scale": 1,
			"direction": 90,
			"rotationStyle": "none",
			"isDraggable": false,
			"indexInLibrary": 25,
			"visible": true,
			"spriteInfo": {
			}
		},
		{
			"target": "Lighting",
			"cmd": "getVar:",
			"param": "light",
			"color": 15629590,
			"label": "Lighting: light",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 401,
			"y": 324,
			"visible": false
		},
		{
			"target": "Lighting",
			"cmd": "getVar:",
			"param": "index",
			"color": 15629590,
			"label": "Lighting: index",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 30,
			"y": 29,
			"visible": false
		},
		{
			"target": "Lighting",
			"cmd": "getVar:",
			"param": "x",
			"color": 15629590,
			"label": "Lighting: x",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 31,
			"y": 56,
			"visible": false
		},
		{
			"target": "Lighting",
			"cmd": "getVar:",
			"param": "tile",
			"color": 15629590,
			"label": "Lighting: tile",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 50,
			"y": 109,
			"visible": false
		},
		{
			"target": "Lighting",
			"cmd": "getVar:",
			"param": "rIdx",
			"color": 15629590,
			"label": "Lighting: rIdx",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 83,
			"y": 256,
			"visible": false
		},
		{
			"target": "Lighting",
			"cmd": "getVar:",
			"param": "max",
			"color": 15629590,
			"label": "Lighting: max",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 181,
			"y": 132,
			"visible": false
		},
		{
			"target": "Lighting",
			"cmd": "getVar:",
			"param": "ln",
			"color": 15629590,
			"label": "Lighting: ln",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 211,
			"y": 135,
			"visible": false
		},
		{
			"target": "Lighting",
			"cmd": "getVar:",
			"param": "le",
			"color": 15629590,
			"label": "Lighting: le",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 400,
			"y": 272,
			"visible": false
		},
		{
			"target": "Lighting",
			"cmd": "getVar:",
			"param": "ls",
			"color": 15629590,
			"label": "Lighting: ls",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 137,
			"y": 127,
			"visible": false
		},
		{
			"target": "Lighting",
			"cmd": "getVar:",
			"param": "lw",
			"color": 15629590,
			"label": "Lighting: lw",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 106,
			"y": 166,
			"visible": false
		},
		{
			"target": "Stage",
			"cmd": "getVar:",
			"param": "BRIGHT",
			"color": 15629590,
			"label": "BRIGHT",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 19,
			"y": 305,
			"visible": false
		},
		{
			"target": "Cursor",
			"cmd": "getVar:",
			"param": "CycleLava",
			"color": 15629590,
			"label": "Cursor: CycleLava",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 11,
			"y": 92,
			"visible": false
		},
		{
			"objName": "Hair",
			"variables": [{
					"name": "player ID",
					"value": "1",
					"isPersistent": false
				},
				{
					"name": "i",
					"value": 1,
					"isPersistent": false
				},
				{
					"name": "len",
					"value": "0",
					"isPersistent": false
				},
				{
					"name": "x",
					"value": 246.81525263229187,
					"isPersistent": false
				},
				{
					"name": "y",
					"value": 124,
					"isPersistent": false
				},
				{
					"name": "costume",
					"value": "1",
					"isPersistent": false
				},
				{
					"name": "dx",
					"value": 2.8421709430404014e-14,
					"isPersistent": false
				},
				{
					"name": "dy",
					"value": -0.5000000000000213,
					"isPersistent": false
				},
				{
					"name": "named",
					"value": "",
					"isPersistent": false
				},
				{
					"name": "Last Say",
					"value": "",
					"isPersistent": false
				},
				{
					"name": "visible",
					"value": "0",
					"isPersistent": false
				},
				{
					"name": "Say Time",
					"value": "0",
					"isPersistent": false
				}],
			"scripts": [[273.6,
					31.7,
					[["procDef", "clone", [], [], true],
						["setVar:to:", "player ID", "1"],
						["doRepeat",
							["-", ["getAttribute:of:", "@Max Players", "Multiplayer"], 1],
							[["changeVar:by:", "player ID", 1], ["createCloneOf", "_myself_"]]],
						["setVar:to:", "player ID", "1"]]],
				[601, 35, [["whenIReceive", "Hide All"], ["hide"]]],
				[41,
					305.95,
					[["whenIReceive", "animate"],
						["setVar:to:", "costume", ["getLine:ofList:", ["+", ["readVariable", "player ID"], 30], "@PlayerNames"]],
						["doIf",
							["=", ["readVariable", "costume"], "-1"],
							[["doIf",
									["=", ["readVariable", "visible"], "1"],
									[["setVar:to:", "visible", "0"], ["hide"]]],
								["setVar:to:", "named", ""],
								["stopScripts", "this script"]]],
						["setVar:to:", "costume", ["%", ["-", ["readVariable", "costume"], 1], 13]],
						["doIfElse",
							["|",
								["=", ["readVariable", "player ID"], ["getAttribute:of:", "@Player ID", "Multiplayer"]],
								["&",
									["=", ["readVariable", "player ID"], "8"],
									["<", ["getAttribute:of:", "@Player ID", "Multiplayer"], "1"]]],
							[["setVar:to:", "x", ["getAttribute:of:", "x", "Player"]]],
							[["setVar:to:", "x", ["getLine:ofList:", ["+", ["readVariable", "player ID"], 10], "@PlayerNames"]]]],
						["setVar:to:", "y", ["getLine:ofList:", ["+", ["readVariable", "player ID"], 20], "@PlayerNames"]],
						["doIfElse",
							["|",
								["<", ["readVariable", "costume"], "5"],
								["|",
									["=", ["readVariable", "costume"], "10"],
									[">", ["%", ["-", ["readVariable", "costume"], 5], 4], "1"]]],
							[["gotoX:y:",
									["computeFunction:of:",
										"floor",
										["*", ["-", ["readVariable", "x"], ["readVariable", "SCROLL_X"]], ["readVariable", "TILE_SIZE"]]],
									["+",
										["computeFunction:of:",
											"floor",
											["*", ["-", ["readVariable", "y"], ["readVariable", "SCROLL_Y"]], ["readVariable", "TILE_SIZE"]]],
										37]]],
							[["gotoX:y:",
									["computeFunction:of:",
										"floor",
										["*", ["-", ["readVariable", "x"], ["readVariable", "SCROLL_X"]], ["readVariable", "TILE_SIZE"]]],
									["+",
										["computeFunction:of:",
											"floor",
											["*", ["-", ["readVariable", "y"], ["readVariable", "SCROLL_Y"]], ["readVariable", "TILE_SIZE"]]],
										40]]]],
						["setVar:to:", "costume", ["getLine:ofList:", ["+", ["readVariable", "player ID"], 40], "@PlayerNames"]],
						["doIf",
							["not", ["=", ["readVariable", "costume"], ["costumeIndex"]]],
							[["lookLike:", ["readVariable", "costume"]]]],
						["doIfElse",
							["=", ["heading"], ["getLine:ofList:", ["+", ["readVariable", "player ID"], 70], "@PlayerNames"]],
							null,
							[["heading:", ["getLine:ofList:", ["+", ["readVariable", "player ID"], 70], "@PlayerNames"]]]],
						["doIf",
							["=", ["readVariable", "visible"], "0"],
							[["show"], ["setVar:to:", "visible", "1"]]],
						["doIfElse",
							["=", ["getLine:ofList:", ["readVariable", "player ID"], "_Chat"], ""],
							[["doIf",
									[">", ["timer"], ["readVariable", "Say Time"]],
									[["doIfElse",
											["|",
												["=", ["readVariable", "player ID"], ["getAttribute:of:", "@Player ID", "Multiplayer"]],
												[">", ["getAttribute:of:", "Mode", "Player"], "0"]],
											[["setVar:to:", "named", ""]],
											[["doIfElse",
													["&",
														["=", ["readVariable", "player ID"], "8"],
														["<", ["getAttribute:of:", "@Player ID", "Multiplayer"], "1"]],
													[["doIfElse",
															["=", ["getAttribute:of:", "@Player ID", "Multiplayer"], "0"],
															[["setVar:to:", "named", "Connecting..."]],
															[["setVar:to:", "named", "Unable to join game :("]]]],
													[["setVar:to:", "named", ["getLine:ofList:", ["readVariable", "player ID"], "@PlayerNames"]]]]]]]]],
							[["setVar:to:", "named", ["getLine:ofList:", ["readVariable", "player ID"], "_Chat"]],
								["setVar:to:", "Say Time", ["+", ["timer"], 3]]]],
						["doIf",
							["not", ["=", ["readVariable", "named"], ["readVariable", "Last Say"]]],
							[["say:", ["readVariable", "named"]], ["setVar:to:", "Last Say", ["readVariable", "named"]]]]]],
				[339, 433.95, [["getLine:ofList:", ["+", ["readVariable", "player ID"], 30], "@PlayerNames"]]],
				[40,
					42,
					[["whenIReceive", "Clone Sprites"],
						["hide"],
						["heading:", 90],
						["setSizeTo:", 300],
						["setVar:to:", "visible", "0"],
						["setVar:to:", "named", ""],
						["setVar:to:", "Say Time", "0"],
						["setVar:to:", "Last Say", ""],
						["call", "clone"]]]],
			"sounds": [{
					"soundName": "pop",
					"soundID": 0,
					"md5": "83a9787d4cb6f3b7632b4ddfebf74367.wav",
					"sampleCount": 258,
					"rate": 11025,
					"format": ""
				}],
			"costumes": [{
					"costumeName": "hair_griff",
					"baseLayerID": 428,
					"baseLayerMD5": "03ffe7e03a24ea7155280162a884ff2d.png",
					"bitmapResolution": 2,
					"rotationCenterX": 10,
					"rotationCenterY": 20
				},
				{
					"costumeName": "hair_7",
					"baseLayerID": 429,
					"baseLayerMD5": "af992e9e393dac174708025d69f21729.png",
					"bitmapResolution": 2,
					"rotationCenterX": 16,
					"rotationCenterY": 18
				},
				{
					"costumeName": "hair_7b",
					"baseLayerID": 430,
					"baseLayerMD5": "ee9057cd8e8937473b9af523296914fd.png",
					"bitmapResolution": 2,
					"rotationCenterX": 16,
					"rotationCenterY": 18
				},
				{
					"costumeName": "hair_7c",
					"baseLayerID": 431,
					"baseLayerMD5": "6961f3eb829df4cb97a4b841204ed146.png",
					"bitmapResolution": 2,
					"rotationCenterX": 16,
					"rotationCenterY": 18
				},
				{
					"costumeName": "hair_6",
					"baseLayerID": 432,
					"baseLayerMD5": "97177c793e0b0013189db6992161a919.png",
					"bitmapResolution": 2,
					"rotationCenterX": 18,
					"rotationCenterY": 22
				},
				{
					"costumeName": "hair_6b",
					"baseLayerID": 433,
					"baseLayerMD5": "bc848bab2f6da7cad53917053d8b0f54.png",
					"bitmapResolution": 2,
					"rotationCenterX": 18,
					"rotationCenterY": 22
				},
				{
					"costumeName": "hair_6c",
					"baseLayerID": 434,
					"baseLayerMD5": "66c6edc485bed32d4b29e5017c81ed1d.png",
					"bitmapResolution": 2,
					"rotationCenterX": 18,
					"rotationCenterY": 22
				},
				{
					"costumeName": "hair_6e",
					"baseLayerID": 435,
					"baseLayerMD5": "54ba94bba8c85289a1b51c2f9204f8fe.png",
					"bitmapResolution": 2,
					"rotationCenterX": 18,
					"rotationCenterY": 22
				},
				{
					"costumeName": "hair_6d",
					"baseLayerID": 436,
					"baseLayerMD5": "61cdcf5d5acbde56026841e88febe90f.png",
					"bitmapResolution": 2,
					"rotationCenterX": 18,
					"rotationCenterY": 22
				},
				{
					"costumeName": "hair_3",
					"baseLayerID": 437,
					"baseLayerMD5": "2d0a325b0e0a482dbeb898b3f7a8a4ef.png",
					"bitmapResolution": 2,
					"rotationCenterX": 10,
					"rotationCenterY": 16
				},
				{
					"costumeName": "hair_14",
					"baseLayerID": 438,
					"baseLayerMD5": "182af4b8a87b70d44e9525faf0b47ff1.png",
					"bitmapResolution": 2,
					"rotationCenterX": 14,
					"rotationCenterY": 22
				},
				{
					"costumeName": "hair14b",
					"baseLayerID": 439,
					"baseLayerMD5": "afb9fab39ef6a1e8149de98da5875be4.png",
					"bitmapResolution": 2,
					"rotationCenterX": 14,
					"rotationCenterY": 22
				},
				{
					"costumeName": "hair_1",
					"baseLayerID": 440,
					"baseLayerMD5": "f9a9d71c41002033c3db749e50f01886.png",
					"bitmapResolution": 2,
					"rotationCenterX": 16,
					"rotationCenterY": 22
				},
				{
					"costumeName": "hair_1b",
					"baseLayerID": 441,
					"baseLayerMD5": "ca3327a659804c8a7927e56ca57525da.png",
					"bitmapResolution": 2,
					"rotationCenterX": 16,
					"rotationCenterY": 22
				},
				{
					"costumeName": "hair_1c",
					"baseLayerID": 442,
					"baseLayerMD5": "9ec3c356f3472d81c9a7dc817a390b40.png",
					"bitmapResolution": 2,
					"rotationCenterX": 16,
					"rotationCenterY": 22
				},
				{
					"costumeName": "hair_1d",
					"baseLayerID": 443,
					"baseLayerMD5": "c01808e8d1506ba04076361353d136e0.png",
					"bitmapResolution": 2,
					"rotationCenterX": 16,
					"rotationCenterY": 22
				},
				{
					"costumeName": "hair_2",
					"baseLayerID": 444,
					"baseLayerMD5": "204e60c5b4762212acfea2d319a15d14.png",
					"bitmapResolution": 2,
					"rotationCenterX": 12,
					"rotationCenterY": 20
				},
				{
					"costumeName": "hair_2b",
					"baseLayerID": 445,
					"baseLayerMD5": "a2dd8834b6dfb87e90d5509ae5e3f2d7.png",
					"bitmapResolution": 2,
					"rotationCenterX": 12,
					"rotationCenterY": 20
				},
				{
					"costumeName": "hair_17",
					"baseLayerID": 446,
					"baseLayerMD5": "4972521f0c90be3bb2718703d4ae6669.png",
					"bitmapResolution": 2,
					"rotationCenterX": 14,
					"rotationCenterY": 24
				},
				{
					"costumeName": "hair_23_y",
					"baseLayerID": 447,
					"baseLayerMD5": "e7729e30bf99b4303c95ba771bae9d27.png",
					"bitmapResolution": 2,
					"rotationCenterX": 16,
					"rotationCenterY": 22
				},
				{
					"costumeName": "hair_24_g",
					"baseLayerID": 448,
					"baseLayerMD5": "4effb281cd27c8cc7c2520ba3c8266cd.png",
					"bitmapResolution": 2,
					"rotationCenterX": 16,
					"rotationCenterY": 26
				},
				{
					"costumeName": "hair_34_lb",
					"baseLayerID": 449,
					"baseLayerMD5": "3f052dd4ed2f67454f7c202611e7decf.png",
					"bitmapResolution": 2,
					"rotationCenterX": 12,
					"rotationCenterY": 18
				},
				{
					"costumeName": "hair_34_p",
					"baseLayerID": 450,
					"baseLayerMD5": "b785d6bb0f8e3f5e1f6c2114fac677d2.png",
					"bitmapResolution": 2,
					"rotationCenterX": 12,
					"rotationCenterY": 18
				},
				{
					"costumeName": "hair_38_bl",
					"baseLayerID": 451,
					"baseLayerMD5": "71db29305b3f9e736d5a4ea85a610b99.png",
					"bitmapResolution": 2,
					"rotationCenterX": 8,
					"rotationCenterY": 20
				},
				{
					"costumeName": "hair_40_y",
					"baseLayerID": 452,
					"baseLayerMD5": "4194057ca2e21e2a17d2e0959391e3bc.png",
					"bitmapResolution": 2,
					"rotationCenterX": 8,
					"rotationCenterY": 18
				},
				{
					"costumeName": "hair_40_b",
					"baseLayerID": 453,
					"baseLayerMD5": "c06eb54695a5ecba8f280aa147cf6423.png",
					"bitmapResolution": 2,
					"rotationCenterX": 8,
					"rotationCenterY": 18
				},
				{
					"costumeName": "hair_49_y",
					"baseLayerID": 454,
					"baseLayerMD5": "637c6bfa1a8bfd4d79eaa2dddf4af21a.png",
					"bitmapResolution": 2,
					"rotationCenterX": 14,
					"rotationCenterY": 20
				},
				{
					"costumeName": "hair_51_y",
					"baseLayerID": 455,
					"baseLayerMD5": "9082183e7e770317cc159a886c36f610.png",
					"bitmapResolution": 2,
					"rotationCenterX": 20,
					"rotationCenterY": 18
				},
				{
					"costumeName": "hair_51_p",
					"baseLayerID": 456,
					"baseLayerMD5": "bb0bd835d158c989aeb2868e177270f9.png",
					"bitmapResolution": 2,
					"rotationCenterX": 20,
					"rotationCenterY": 18
				},
				{
					"costumeName": "hair_51_b",
					"baseLayerID": 457,
					"baseLayerMD5": "eab6ecbc555e48fb871e9189b9a9099c.png",
					"bitmapResolution": 2,
					"rotationCenterX": 20,
					"rotationCenterY": 18
				},
				{
					"costumeName": "hair_66_y",
					"baseLayerID": 458,
					"baseLayerMD5": "208fd1f4083ca72770268eca06d471b4.png",
					"bitmapResolution": 2,
					"rotationCenterX": 16,
					"rotationCenterY": 18
				},
				{
					"costumeName": "hair_66_br",
					"baseLayerID": 459,
					"baseLayerMD5": "fe65e5d055938825e5e03109baa3170a.png",
					"bitmapResolution": 2,
					"rotationCenterX": 16,
					"rotationCenterY": 18
				},
				{
					"costumeName": "hair_66_bl",
					"baseLayerID": 460,
					"baseLayerMD5": "fcb39eb771f378e6a0797a84d445a6c6.png",
					"bitmapResolution": 2,
					"rotationCenterX": 16,
					"rotationCenterY": 18
				},
				{
					"costumeName": "hair_85_o",
					"baseLayerID": 461,
					"baseLayerMD5": "27d24a36c6764af0458a320edd0feda3.png",
					"bitmapResolution": 2,
					"rotationCenterX": 16,
					"rotationCenterY": 22
				},
				{
					"costumeName": "hair_84_o",
					"baseLayerID": 462,
					"baseLayerMD5": "5c48b235535bd3f806745c905b9a78ff.png",
					"bitmapResolution": 2,
					"rotationCenterX": 20,
					"rotationCenterY": 26
				},
				{
					"costumeName": "hair_100_o",
					"baseLayerID": 463,
					"baseLayerMD5": "e410682959a1ad7770b6061b20b1a31b.png",
					"bitmapResolution": 2,
					"rotationCenterX": 16,
					"rotationCenterY": 18
				},
				{
					"costumeName": "hair_100_b",
					"baseLayerID": 464,
					"baseLayerMD5": "2e8735abfe2975630aeb1424e21f4247.png",
					"bitmapResolution": 2,
					"rotationCenterX": 16,
					"rotationCenterY": 18
				},
				{
					"costumeName": "hair_103_b",
					"baseLayerID": 465,
					"baseLayerMD5": "c1e2c8bcdc88b874e52f5e68d8b1744f.png",
					"bitmapResolution": 2,
					"rotationCenterX": 14,
					"rotationCenterY": 20
				},
				{
					"costumeName": "hair_103_br",
					"baseLayerID": 466,
					"baseLayerMD5": "a658daffd6c4e8261d3d4de34b083937.png",
					"bitmapResolution": 2,
					"rotationCenterX": 14,
					"rotationCenterY": 20
				},
				{
					"costumeName": "hair_103_g",
					"baseLayerID": 467,
					"baseLayerMD5": "8b8a210e3d46033b517a5835e4a702eb.png",
					"bitmapResolution": 2,
					"rotationCenterX": 14,
					"rotationCenterY": 20
				},
				{
					"costumeName": "Eye_of_Cthulhu_Mask",
					"baseLayerID": 304,
					"baseLayerMD5": "06a5d27fddeeeeafb6aa3b532422250a.png",
					"bitmapResolution": 2,
					"rotationCenterX": 16,
					"rotationCenterY": 18
				},
				{
					"costumeName": "Santa",
					"baseLayerID": 305,
					"baseLayerMD5": "b026c0ada4b154fc0b599048540bf810.png",
					"bitmapResolution": 2,
					"rotationCenterX": 14,
					"rotationCenterY": 26
				}],
			"currentCostumeIndex": 0,
			"scratchX": 55,
			"scratchY": 16,
			"scale": 3,
			"direction": 90,
			"rotationStyle": "leftRight",
			"isDraggable": false,
			"indexInLibrary": 4,
			"visible": false,
			"spriteInfo": {
			}
		},
		{
			"target": "Buffs",
			"cmd": "getVar:",
			"param": "Last Buff",
			"color": 15629590,
			"label": "Buffs: Last Buff",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 41,
			"y": 249,
			"visible": false
		},
		{
			"objName": "Buffs",
			"variables": [{
					"name": "Last Buff",
					"value": 0,
					"isPersistent": false
				}],
			"scripts": [[10,
					10,
					[["whenIReceive", "Hide All"], ["setVar:to:", "Last Buff", 0], ["gotoX:y:", -200, 99], ["hide"]]],
				[541,
					16,
					[["whenIReceive", "Back_clouds"],
						["doIf", ["=", ["readVariable", "TICK"], "4"], [["comeToFront"]]]]],
				[9,
					132,
					[["whenIReceive", "animate"],
						["doIfElse",
							["=", ["getAttribute:of:", "Mode", "Player"], "0"],
							[["call", "Set Buff %n", ["getAttribute:of:", "BuffID", "Cursor"]]],
							[["call", "Set Buff %n", 0]]]]],
				[10.75,
					306.3,
					[["procDef", "Set Buff %n", ["buff id"], [1], true],
						["doIfElse",
							["=", ["getParam", "buff id", "r"], ["readVariable", "Last Buff"]],
							[["doIf",
									[">", ["readVariable", "Last Buff"], "0"],
									[["doIfElse",
											["<", ["%", ["timer"], 1.5], "1.3"],
											[["show"]],
											[["hide"]]]]]],
							[["setVar:to:", "Last Buff", ["getParam", "buff id", "r"]],
								["doIfElse",
									["=", ["readVariable", "Last Buff"], "0"],
									[["hide"]],
									[["doIfElse",
											["&", [">", ["readVariable", "Last Buff"], "194"], ["<", ["readVariable", "Last Buff"], "198"]],
											[["lookLike:", "Buff_195"]],
											[["lookLike:", ["concatenate:with:", "Buff_", ["readVariable", "Last Buff"]]]]],
										["show"]]]]]]],
				[467, 335, [["setSizeTo:", 100]]]],
			"sounds": [{
					"soundName": "pop",
					"soundID": 0,
					"md5": "83a9787d4cb6f3b7632b4ddfebf74367.wav",
					"sampleCount": 258,
					"rate": 11025,
					"format": ""
				}],
			"costumes": [{
					"costumeName": "Buff_107",
					"baseLayerID": 468,
					"baseLayerMD5": "8b5b194c7a5522f0f1084bb431e10ef9.png",
					"bitmapResolution": 2,
					"rotationCenterX": 16,
					"rotationCenterY": 16
				},
				{
					"costumeName": "Buff_108",
					"baseLayerID": 469,
					"baseLayerMD5": "715ffb86a67870cdb5239a368752b6f5.png",
					"bitmapResolution": 2,
					"rotationCenterX": 16,
					"rotationCenterY": 16
				},
				{
					"costumeName": "Buff_109",
					"baseLayerID": 470,
					"baseLayerMD5": "361cd7b3c45ac6d1f31abccd603da3be.png",
					"bitmapResolution": 2,
					"rotationCenterX": 16,
					"rotationCenterY": 16
				},
				{
					"costumeName": "Buff_195",
					"baseLayerID": 471,
					"baseLayerMD5": "37d067d1e651036ccde6f403d2a54c7e.png",
					"bitmapResolution": 2,
					"rotationCenterX": 16,
					"rotationCenterY": 16
				},
				{
					"costumeName": "Buff_198",
					"baseLayerID": 472,
					"baseLayerMD5": "a85f3037d702f86d2543367d6b92a27c.png",
					"bitmapResolution": 2,
					"rotationCenterX": 16,
					"rotationCenterY": 16
				},
				{
					"costumeName": "Buff_199",
					"baseLayerID": 473,
					"baseLayerMD5": "1449ebdebd493e9c0a2f7ad754f91956.png",
					"bitmapResolution": 2,
					"rotationCenterX": 16,
					"rotationCenterY": 16
				},
				{
					"costumeName": "Buff_200",
					"baseLayerID": 474,
					"baseLayerMD5": "43b54437f3c30202270a6573b6d9232b.png",
					"bitmapResolution": 2,
					"rotationCenterX": 16,
					"rotationCenterY": 16
				},
				{
					"costumeName": "Buff_201",
					"baseLayerID": 475,
					"baseLayerMD5": "b16aced6ba911824d2a441d997f92434.png",
					"bitmapResolution": 2,
					"rotationCenterX": 16,
					"rotationCenterY": 16
				}],
			"currentCostumeIndex": 4,
			"scratchX": -200,
			"scratchY": 99,
			"scale": 1,
			"direction": 90,
			"rotationStyle": "none",
			"isDraggable": false,
			"indexInLibrary": 26,
			"visible": false,
			"spriteInfo": {
			}
		},
		{
			"target": "NPC",
			"cmd": "getVar:",
			"param": "class",
			"color": 15629590,
			"label": "NPC: class",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 62,
			"y": 305,
			"visible": false
		},
		{
			"target": "NPC",
			"cmd": "getVar:",
			"param": "base",
			"color": 15629590,
			"label": "NPC: base",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 220,
			"y": 257,
			"visible": false
		},
		{
			"target": "NPC",
			"cmd": "getVar:",
			"param": "walkSpeed",
			"color": 15629590,
			"label": "NPC: walkSpeed",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 367,
			"y": 59,
			"visible": false
		},
		{
			"objName": "Player",
			"variables": [{
					"name": "x",
					"value": 246.81525263229187,
					"isPersistent": false
				},
				{
					"name": "y",
					"value": 124,
					"isPersistent": false
				},
				{
					"name": "sx",
					"value": "0",
					"isPersistent": false
				},
				{
					"name": "sy",
					"value": 0,
					"isPersistent": false
				},
				{
					"name": "Tile Is Solid",
					"value": "10",
					"isPersistent": false
				},
				{
					"name": "Tile Index",
					"value": 43297,
					"isPersistent": false
				},
				{
					"name": "Player Width",
					"value": 0.175,
					"isPersistent": false
				},
				{
					"name": "Player Height",
					"value": 1.5,
					"isPersistent": false
				},
				{
					"name": "walkFrame",
					"value": "2",
					"isPersistent": false
				},
				{
					"name": "grounded",
					"value": 0,
					"isPersistent": false
				},
				{
					"name": "Chat Timer",
					"value": 0,
					"isPersistent": false
				},
				{
					"name": "tmp",
					"value": "10",
					"isPersistent": false
				},
				{
					"name": "Action",
					"value": "0",
					"isPersistent": false
				},
				{
					"name": "Profile_Hair",
					"value": "1",
					"isPersistent": false
				},
				{
					"name": "i",
					"value": 4,
					"isPersistent": false
				},
				{
					"name": "s",
					"value": "",
					"isPersistent": false
				},
				{
					"name": "costume",
					"value": 0,
					"isPersistent": false
				},
				{
					"name": "dir",
					"value": "90",
					"isPersistent": false
				},
				{
					"name": "t2",
					"value": "5",
					"isPersistent": false
				},
				{
					"name": "Mode",
					"value": "-99",
					"isPersistent": false
				},
				{
					"name": "timout",
					"value": 306.998,
					"isPersistent": false
				},
				{
					"name": "howLong",
					"value": 93.8469999999932,
					"isPersistent": false
				},
				{
					"name": "SpecialKey",
					"value": 0,
					"isPersistent": false
				},
				{
					"name": "Player Health",
					"value": "5",
					"isPersistent": false
				},
				{
					"name": "Player Hit Time",
					"value": "-1000",
					"isPersistent": false
				},
				{
					"name": "Player Max Health",
					"value": "10",
					"isPersistent": false
				},
				{
					"name": "Fall Height",
					"value": "0",
					"isPersistent": false
				},
				{
					"name": "Day Night",
					"value": 0.11282361111111112,
					"isPersistent": false
				},
				{
					"name": "Tile Type",
					"value": "0",
					"isPersistent": false
				},
				{
					"name": "Space_Fire",
					"value": "1",
					"isPersistent": false
				},
				{
					"name": "MOUSE_PRESSED",
					"value": "false",
					"isPersistent": false
				},
				{
					"name": "In Liquid",
					"value": 0,
					"isPersistent": false
				}],
			"scripts": [[1669.25,
					2166.5,
					[["procDef", "Do Command %s", ["cmd"], [""], false],
						["setVar:to:", "tmp", ["getParam", "cmd", "r"]],
						["setVar:to:", "i", "2"],
						["call", "Next Token %b", false],
						["doIfElse",
							["=", ["readVariable", "s"], "hair"],
							[["call", "Next Token %b", false],
								["setVar:to:", "s", ["+", ["readVariable", "s"], 0]],
								["doIfElse",
									["&", [">", ["readVariable", "s"], "0"], ["<", ["readVariable", "s"], "40"]],
									[["say:", ["concatenate:with:", "Changed hair to ", ["readVariable", "s"]]],
										["setVar:to:", "Profile_Hair", ["+", ["readVariable", "s"], 1]]],
									[["say:", "Between 1 to 39 please"]]],
								["setVar:to:", "Chat Timer", ["+", ["timer"], 2]]],
							[["doIfElse",
									["=", ["readVariable", "s"], "map"],
									[["doBroadcastAndWait", "MAP"]],
									[["doIfElse",
											["=", ["readVariable", "s"], "players"],
											[["doBroadcastAndWait", "List Players"]],
											[["doIfElse",
													["|", ["=", ["readVariable", "s"], "kill"], ["=", ["readVariable", "s"], "respawn"]],
													[["doBroadcastAndWait", "respawn"]],
													[["doIfElse",
															["=", ["readVariable", "s"], "space"],
															[["doIfElse",
																	["=", ["readVariable", "Space_Fire"], "0"],
																	[["setVar:to:", "Space_Fire", "1"], ["say:", "Space Action Key Enabled"]],
																	[["setVar:to:", "Space_Fire", "0"], ["say:", "Space Action Key Disabled"]]],
																["setVar:to:", "Chat Timer", ["+", ["timer"], 2]]],
															[["doIfElse",
																	["=", ["readVariable", "s"], "debug"],
																	[["say:",
																			["concatenate:with:",
																				"Passive: ",
																				["concatenate:with:", ["getLine:ofList:", 20, "_Chat"], ["concatenate:with:", "    Aggressive: ", ["getLine:ofList:", 21, "_Chat"]]]]],
																		["setVar:to:", "Chat Timer", ["+", ["timer"], 2]]],
																	[["doIfElse",
																			["=", ["readVariable", "s"], "refresh"],
																			[["doBroadcastAndWait", "REFRESH"],
																				["say:", "Level Refreshed"],
																				["setVar:to:", "Chat Timer", ["+", ["timer"], 2]]],
																			[["doIfElse",
																					["=", ["readVariable", "s"], "reset"],
																					[["doIfElse",
																							[">", ["getAttribute:of:", "@Offline", "Multiplayer"], "0"],
																							[["doBroadcastAndWait", "CREATE NEW LEVEL"]],
																							[["doIfElse",
																									[">", ["getAttribute:of:", "@Player Count", "Multiplayer"], "1"],
																									[["doIfElse",
																											[">", ["timer"], ["getAttribute:of:", "Reset Spam Timer", "Warning"]],
																											[["broadcast:", "Send Reset Request"]],
																											[["say:",
																													["concatenate:with:",
																														"You cannot request a reset for ",
																														["concatenate:with:", ["computeFunction:of:", "ceiling", ["-", ["getAttribute:of:", "Reset Spam Timer", "Warning"], ["timer"]]], " seconds"]]],
																												["setVar:to:", "Chat Timer", ["+", ["timer"], 2]]]]],
																									[["say:", "You need at least 2 players to reset level..."], ["setVar:to:", "Chat Timer", ["+", ["timer"], 2]]]]]]],
																					[["doIfElse",
																							["=", ["readVariable", "s"], "light"],
																							[["doBroadcastAndWait", "LightingAll"], ["broadcast:", "Level Ready to Play"]],
																							[["doIfElse",
																									["=", ["readVariable", "s"], "save"],
																									[["doBroadcastAndWait", "SAVE GAME"]],
																									[["doIfElse",
																											["=", ["readVariable", "s"], "load"],
																											[["doIfElse",
																													["=", ["getAttribute:of:", "@Offline", "Multiplayer"], "1"],
																													[["doBroadcastAndWait", "LOAD GAME"]],
																													[["say:", "You can only load a game in single player"], ["setVar:to:", "Chat Timer", ["+", ["timer"], 3]]]]],
																											[["doIfElse",
																													["|", ["=", ["getUserName"], "griffpatch"], ["=", ["getUserName"], "griffpatch_tutor"]],
																													[["doIfElse",
																															["=", ["readVariable", "s"], "store"],
																															[["doBroadcastAndWait", "FORCE SAVE"],
																																["say:", "Level Saved"],
																																["setVar:to:", "Chat Timer", ["+", ["timer"], 2]]],
																															[["doIfElse",
																																	["=", ["readVariable", "s"], "x"],
																																	[["call", "Next Token %b", false],
																																		["doIfElse",
																																			["=", ["readVariable", "s"], ""],
																																			[["say:", ["concatenate:with:", "I am at ", ["rounded", ["readVariable", "x"]]]],
																																				["setVar:to:", "Chat Timer", ["+", ["timer"], 2]]],
																																			[["setVar:to:", "x", ["+", ["readVariable", "s"], 0.5]],
																																				["call", "Next Token %b", false],
																																				["doIfElse",
																																					["=", ["readVariable", "s"], ""],
																																					[["setVar:to:", "y", ["*", ["readVariable", "MAP_HEIGHT"], 0.8]]],
																																					[["setVar:to:", "y", ["readVariable", "s"]]]],
																																				["setVar:to:", "Fall Height", "0"]]]],
																																	[["doIfElse",
																																			["|", ["=", ["readVariable", "s"], "inv"], ["=", ["readVariable", "s"], "i"]],
																																			[["doIfElse",
																																					["=", ["readVariable", "s"], "i"],
																																					[["setVar:to:", "t2", ["getAttribute:of:", "ToolMode", "Cursor"]],
																																						["call", "Next Token %b", false],
																																						["doIfElse",
																																							["=", ["rounded", ["readVariable", "s"]], "0"],
																																							[["setVar:to:", "Tile Is Solid", "1"],
																																								["changeVar:by:", "i", ["-", -1, ["stringLength:", ["readVariable", "s"]]]]],
																																							[["setVar:to:", "Tile Is Solid", ["readVariable", "s"]]]]],
																																					[["setVar:to:", "Tile Is Solid", "50"],
																																						["call", "Next Token %b", false],
																																						["setVar:to:", "t2", ["readVariable", "s"]]]],
																																				["call", "Next Token %b", ["not", false]],
																																				["doIf",
																																					["=", ["+", ["readVariable", "s"], 0], "0"],
																																					[["call", "Find Item By Name %s", ["readVariable", "s"]]]],
																																				["doIf",
																																					[">", ["readVariable", "s"], "0"],
																																					[["setLine:ofList:to:",
																																							["-", ["*", ["readVariable", "t2"], 2], 1],
																																							"_inv",
																																							["readVariable", "s"]],
																																						["setLine:ofList:to:", ["*", ["readVariable", "t2"], 2], "_inv", ["readVariable", "Tile Is Solid"]],
																																						["setVar:to:", "inv_change", "2"]]]],
																																			[["doIfElse",
																																					["=", ["readVariable", "s"], "kick"],
																																					[["call", "Next Token %b", false],
																																						["append:toList:", "0", "@Place"],
																																						["append:toList:", ["concatenate:with:", "w", ["readVariable", "s"]], "@Place"]],
																																					[["doIfElse",
																																							["=", ["readVariable", "s"], "disconnect"],
																																							[["call", "Next Token %b", false],
																																								["append:toList:", "0", "@Place"],
																																								["append:toList:", ["concatenate:with:", "e", ["readVariable", "s"]], "@Place"]],
																																							[["doIfElse",
																																									["=", ["readVariable", "s"], "grow"],
																																									[["broadcast:", "Grow All"]],
																																									[["doIfElse",
																																											["=", ["readVariable", "s"], "player1"],
																																											[["broadcast:", "Force Player 1"]],
																																											[["doIfElse",
																																													["=", ["readVariable", "s"], "green"],
																																													[["doBroadcastAndWait", "Mega Green"]],
																																													[["doIfElse",
																																															["=", ["readVariable", "s"], "force"],
																																															[["call", "Next Token %b", false],
																																																["doIfElse",
																																																	["=", ["readVariable", "s"], "reset"],
																																																	[["doBroadcastAndWait", "CREATE NEW LEVEL"]],
																																																	[["say:", "Unknown command"], ["setVar:to:", "Chat Timer", ["+", ["timer"], 2]]]]],
																																															[["say:", "Unknown command"], ["setVar:to:", "Chat Timer", ["+", ["timer"], 2]]]]]]]]]]]]]]]]]]]]],
																													[["say:", "Unknown command"], ["setVar:to:", "Chat Timer", ["+", ["timer"], 2]]]]]]]]]]]]]]]]]]]]]]]]]],
						["broadcast:", "Chat Sent"]]],
				[1665.2,
					1831.1,
					[["procDef", "Next Token %b", ["all?"], [false], true],
						["setVar:to:", "s", ""],
						["doUntil",
							["|",
								["not", ["<", ["readVariable", "i"], ["stringLength:", ["readVariable", "tmp"]]]],
								["&",
									["not", ["getParam", "all?", "b"]],
									["=", ["letter:of:", ["readVariable", "i"], ["readVariable", "tmp"]], " "]]],
							[["setVar:to:",
									"s",
									["concatenate:with:", ["readVariable", "s"], ["letter:of:", ["readVariable", "i"], ["readVariable", "tmp"]]]],
								["changeVar:by:", "i", 1]]],
						["changeVar:by:", "i", 1],
						["doUntil",
							["|",
								[">", ["readVariable", "i"], ["stringLength:", ["readVariable", "tmp"]]],
								["not", ["=", ["letter:of:", ["readVariable", "i"], ["readVariable", "tmp"]], " "]]],
							[["changeVar:by:", "i", 1]]]]],
				[1670.2,
					1532.4,
					[["procDef", "Send Data", [], [], true],
						["doIfElse",
							[">", ["getAttribute:of:", "@Player ID", "Multiplayer"], "0"],
							[["append:toList:", ["computeFunction:of:", "floor", ["*", ["readVariable", "x"], ["readVariable", "TILE_SIZE"]]], "@Broadcast"],
								["append:toList:", ["computeFunction:of:", "floor", ["*", ["readVariable", "y"], ["readVariable", "TILE_SIZE"]]], "@Broadcast"],
								["append:toList:", ["readVariable", "costume"], "@Broadcast"],
								["append:toList:", "@TICK", "@Broadcast"]],
							[["deleteLine:ofList:", "all", "@Broadcast"]]]]],
				[1668.6,
					1147.6,
					[["procDef", "Set Costume %n %n", ["id", "sx"], [1, 1], true],
						["doIf",
							["not", ["=", ["getParam", "id", "r"], ["costumeIndex"]]],
							[["lookLike:", ["getParam", "id", "r"]]]],
						["doIfElse",
							[">", ["getParam", "sx", "r"], "0"],
							[["doIf", ["=", ["heading"], "-90"], [["heading:", 90]]]],
							[["doIf",
									["&", ["<", ["getParam", "sx", "r"], "0"], ["=", ["heading"], "90"]],
									[["heading:", -90]]]]]]],
				[2301.4,
					43.6,
					[["procDef", "Change Speed %n %n", ["cx", "asx"], [1, 1], true],
						["setVar:to:", "Action", "6"],
						["doIf",
							["<", ["*", ["getParam", "cx", "r"], ["readVariable", "sx"]], "0"],
							[["setVar:to:", "sx", "0"]]],
						["doIfElse",
							["<", ["getParam", "asx", "r"], "0.18"],
							[["changeVar:by:", "sx", ["*", 0.04, ["getParam", "cx", "r"]]]],
							[["doIf",
									["<", ["readVariable", "grounded"], "3"],
									[["doIfElse",
											["=", "109", ["getAttribute:of:", "BuffID", "Cursor"]],
											[["doIfElse",
													["<", ["getParam", "asx", "r"], "0.25"],
													[["changeVar:by:", "sx", ["*", 0.01, ["getParam", "cx", "r"]]]],
													[["doIf",
															["<", ["getParam", "asx", "r"], "0.35"],
															[["changeVar:by:", "sx", ["*", 0.005, ["getParam", "cx", "r"]]]]]]]],
											[["doIfElse",
													["<", ["getParam", "asx", "r"], "0.20"],
													[["changeVar:by:", "sx", ["*", 0.01, ["getParam", "cx", "r"]]]],
													[["doIf",
															["<", ["getParam", "asx", "r"], "0.26"],
															[["changeVar:by:", "sx", ["*", 0.0015, ["getParam", "cx", "r"]]]]]]]]]]]]],
						["changeVar:by:", "walkFrame", ["\/", ["getAttribute:of:", "_Tick", "Multiplayer"], 2]],
						["setVar:to:", "dir", ["*", ["getParam", "cx", "r"], 90]],
						["setVar:to:", "timout", ["+", ["timer"], 500]]]],
				[958.6,
					2020.9,
					[["procDef", "Open Inventory %n", ["inside idx"], [1], true],
						["doIfElse",
							[">", ["readVariable", "Mode"], "0"],
							[["doIf",
									["=", ["readVariable", "Mode"], "2"],
									[["doIf",
											["=", ["getLine:ofList:", 88, "_inv"], "1"],
											[["call", "Get LData For Tile %n", ["getParam", "inside idx", "r"]],
												["doIfElse",
													[">", ["readVariable", "i"], ["lineCountOfList:", "_LData"]],
													[["append:toList:", ["getParam", "inside idx", "r"], "_LData"],
														["append:toList:", "4", "_LData"],
														["append:toList:", ["getUserName"], "_LData"],
														["append:toList:", "", "_LData"]],
													[["doRepeat",
															["-", ["getLine:ofList:", ["+", ["readVariable", "i"], 1], "_LData"], 4],
															[["deleteLine:ofList:", ["+", ["readVariable", "i"], 4], "_LData"]]]]],
												["setVar:to:", "t2", ["readVariable", "i"]],
												["changeVar:by:", "i", 4],
												["setVar:to:", "tmp", "50"],
												["setVar:to:", "s", ["concatenate:with:", "i", ["getParam", "inside idx", "r"]]],
												["doRepeat",
													16,
													[["doIf",
															[">", ["getLine:ofList:", ["readVariable", "tmp"], "_inv"], "0"],
															[["setVar:to:",
																	"s",
																	["concatenate:with:",
																		["readVariable", "s"],
																		["concatenate:with:",
																			" ",
																			["concatenate:with:",
																				["getLine:ofList:", ["-", ["readVariable", "tmp"], 1], "_inv"],
																				["concatenate:with:", " ", ["getLine:ofList:", ["readVariable", "tmp"], "_inv"]]]]]],
																["insert:at:ofList:", ["getLine:ofList:", ["readVariable", "tmp"], "_inv"], ["readVariable", "i"], "_LData"],
																["insert:at:ofList:",
																	["getLine:ofList:", ["-", ["readVariable", "tmp"], 1], "_inv"],
																	["readVariable", "i"],
																	"_LData"],
																["changeVar:by:", "i", 2]]],
														["changeVar:by:", "tmp", 2]]],
												["setLine:ofList:to:",
													["+", ["readVariable", "t2"], 1],
													"_LData",
													["-", ["readVariable", "i"], ["readVariable", "t2"]]],
												["append:toList:", "0", "@Place"],
												["append:toList:", ["readVariable", "s"], "@Place"]]]]],
								["setVar:to:", "Mode", 0]],
							[["setVar:to:", "Tile Index", "-1"],
								["doIf",
									["=", ["getParam", "inside idx", "r"], "0"],
									[["setVar:to:",
											"Tile Index",
											["+",
												["+",
													["*", ["computeFunction:of:", "floor", ["readVariable", "y"]], ["readVariable", "MAP_WIDTH"]],
													["computeFunction:of:", "floor", ["readVariable", "x"]]],
												1]],
										["setVar:to:", "Tile Is Solid", ["getLine:ofList:", ["readVariable", "Tile Index"], "_Level"]],
										["doIfElse",
											["=", ["readVariable", "Tile Is Solid"], "0"],
											[["setVar:to:", "Tile Index", "-1"]],
											[["setVar:to:",
													"Tile Is Solid",
													["getLine:ofList:", ["+", 4, ["*", ["readVariable", "Tile Is Solid"], ["readVariable", "TMul"]]], "_TileData"]],
												["doIf",
													["not", ["=", ["letter:of:", 2, ["readVariable", "Tile Is Solid"]], "3"]],
													[["setVar:to:", "Tile Index", "-1"]]]]]]],
								["doIfElse",
									[">", ["readVariable", "Tile Index"], "-1"],
									[["call", "Open Inventory %n", ["readVariable", "Tile Index"]]],
									[["call", "Is Protected %n", ["getParam", "inside idx", "r"]],
										["doIfElse",
											[">", ["readVariable", "Tile Type"], "0"],
											[["say:", ["concatenate:with:", "This land is owned by ", ["getLine:ofList:", ["readVariable", "Tile Type"], "@PlayerNames"]]],
												["setVar:to:", "Chat Timer", ["+", ["timer"], 2.5]]],
											[["setVar:to:", "tmp", "49"],
												["doRepeat",
													40,
													[["setLine:ofList:to:", ["readVariable", "tmp"], "_inv", "0"], ["changeVar:by:", "tmp", 1]]],
												["doIfElse",
													[">", ["getParam", "inside idx", "r"], "0"],
													[["setVar:to:", "Mode", "2"],
														["call", "Get LData For Tile %n", ["getParam", "inside idx", "r"]],
														["doIf",
															["not", [">", ["readVariable", "i"], ["lineCountOfList:", "_LData"]]],
															[["changeVar:by:", "i", 4],
																["setVar:to:", "tmp", "49"],
																["doRepeat",
																	["-", ["getLine:ofList:", ["-", ["readVariable", "i"], 3], "_LData"], 4],
																	[["setLine:ofList:to:", ["readVariable", "tmp"], "_inv", ["getLine:ofList:", ["readVariable", "i"], "_LData"]],
																		["changeVar:by:", "tmp", 1],
																		["changeVar:by:", "i", 1]]]]]],
													[["setVar:to:", "Mode", "1"]]]]]]]]],
						["setVar:to:", "inv_change", "2"],
						["doIf",
							["=", ["readVariable", "Mode"], "0"],
							[["setVar:to:", "tmp", "49"],
								["doRepeat",
									40,
									[["setLine:ofList:to:", ["readVariable", "tmp"], "_inv", "0"], ["changeVar:by:", "tmp", 1]]]]]]],
				[4402.4, 6267.6, [["not", false]]],
				[512.6,
					85.05,
					[["whenIReceive", "Clone Sprites"],
						["hide"],
						["setVar:to:", "Player Width", "14"],
						["setVar:to:", "Player Height", "60"],
						["setVar:to:", "Player Width", ["\/", ["\/", ["readVariable", "Player Width"], ["readVariable", "TILE_SIZE"]], 2]],
						["setVar:to:", "Player Height", ["\/", ["readVariable", "Player Height"], ["readVariable", "TILE_SIZE"]]],
						["setVar:to:", "Chat Timer", 0],
						["setSizeTo:", 150],
						["deleteLine:ofList:", "all", "@Place"],
						["append:toList:", "-1", "@Place"],
						["append:toList:", "-1", "@Place"],
						["append:toList:", "-1", "@Place"],
						["append:toList:", "-1", "@Place"],
						["append:toList:", "-1", "@Place"],
						["append:toList:", "-1", "@Place"],
						["append:toList:", "-1", "@Place"],
						["append:toList:", "-1", "@Place"],
						["append:toList:", "-1", "@Place"],
						["append:toList:", "-1", "@Place"]]],
				[1663.4,
					79.4,
					[["procDef", "Check Tile at x: %n y: %n", ["x", "y"], [1, 1], true],
						["setVar:to:",
							"Tile Index",
							["+",
								["+",
									["*", ["computeFunction:of:", "floor", ["getParam", "y", "r"]], ["readVariable", "MAP_WIDTH"]],
									["computeFunction:of:", "floor", ["getParam", "x", "r"]]],
								1]],
						["doIfElse",
							["|",
								["<", ["getParam", "x", "r"], "0"],
								["not", ["<", ["getParam", "x", "r"], ["readVariable", "MAP_WIDTH"]]]],
							[["setVar:to:", "Tile Is Solid", "0"]],
							[["setVar:to:", "Tile Is Solid", ["getLine:ofList:", ["readVariable", "Tile Index"], "_Level"]],
								["doIf",
									[">", ["readVariable", "Tile Is Solid"], "0"],
									[["setVar:to:",
											"Tile Is Solid",
											["getLine:ofList:", ["+", 3, ["*", ["readVariable", "Tile Is Solid"], ["readVariable", "TMul"]]], "_TileData"]]]]]]]],
				[2863.25,
					47.6,
					[["procDef", "respawn", [], [], true],
						["doIfElse",
							[">", ["getAttribute:of:", "@Player ID", "Multiplayer"], "0"],
							[["setVar:to:", "y", ["getLine:ofList:", ["+", ["getAttribute:of:", "@Player ID", "Multiplayer"], 50], "@PlayerNames"]]],
							[["setVar:to:", "y", "0"]]],
						["doIfElse",
							[">", ["readVariable", "y"], "0"],
							[["setVar:to:",
									"x",
									["+", ["%", ["-", ["readVariable", "y"], 1], ["readVariable", "MAP_WIDTH"]], 0.5]],
								["setVar:to:",
									"y",
									["computeFunction:of:", "floor", ["\/", ["-", ["readVariable", "y"], 1], ["readVariable", "MAP_WIDTH"]]]]],
							[["doUntil",
									[">", ["readVariable", "y"], "0"],
									[["setVar:to:",
											"x",
											["+", ["rounded", ["*", ["readVariable", "MAP_WIDTH"], ["randomFrom:to:", 0.3, 0.7]]], 0.5]],
										["setVar:to:", "y", ["*", ["readVariable", "MAP_HEIGHT"], 0.8]],
										["call",
											"Check Tile at x: %n y: %n and x: %n y: %n",
											["readVariable", "x"],
											["readVariable", "y"],
											["readVariable", "x"],
											["+", ["readVariable", "y"], 1]],
										["doUntil",
											["<", ["readVariable", "Tile Is Solid"], "8"],
											[["changeVar:by:", "y", 1],
												["call",
													"Check Tile at x: %n y: %n and x: %n y: %n",
													["readVariable", "x"],
													["readVariable", "y"],
													["readVariable", "x"],
													["+", ["readVariable", "y"], 1]]]],
										["call", "Check Tile at x: %n y: %n", ["readVariable", "x"], ["readVariable", "y"]],
										["doUntil",
											["|", [">", ["readVariable", "Tile Is Solid"], "6.75"], ["<", ["readVariable", "y"], "1"]],
											[["changeVar:by:", "y", -1], ["call", "Check Tile at x: %n y: %n", ["readVariable", "x"], ["readVariable", "y"]]]]]],
								["call", "Check Tile at x: %n y: %n", ["readVariable", "x"], ["+", ["readVariable", "y"], 3]],
								["doIfElse",
									["<", ["readVariable", "Tile Is Solid"], "8"],
									[["changeVar:by:", "y", 2.2]],
									[["changeVar:by:", "y", 1.2]]]]],
						["setVar:to:", "SCROLL_X", ["readVariable", "x"]],
						["setVar:to:", "SCROLL_Y", ["readVariable", "y"]],
						["setVar:to:", "sx", "0"],
						["setVar:to:", "sy", "0"],
						["setVar:to:", "Hit Player", 0],
						["setVar:to:", "walkFrame", "2"],
						["setVar:to:", "grounded", 0],
						["setVar:to:", "Player Health", "10"],
						["setVar:to:", "Fall Height", "0"],
						["setVar:to:", "Player Hit Time", "-1000"],
						["setVar:to:", "inv_change", "2"]]],
				[967.5,
					4250.9,
					[["procDef", "Is Protected %n", ["idx"], [1], true],
						["setVar:to:", "Tile Type", "0"],
						["setVar:to:", "i", "1"],
						["doRepeat",
							["getAttribute:of:", "@Max Players", "Multiplayer"],
							[["doIf",
									["not", ["=", ["readVariable", "i"], ["getAttribute:of:", "@Player ID", "Multiplayer"]]],
									[["setVar:to:", "tmp", ["getLine:ofList:", ["+", ["readVariable", "i"], 50], "@PlayerNames"]],
										["doIf",
											[">", ["readVariable", "tmp"], "0"],
											[["doIf",
													["<",
														["computeFunction:of:",
															"abs",
															["-",
																["%", ["getParam", "idx", "r"], ["readVariable", "MAP_WIDTH"]],
																["%", ["readVariable", "tmp"], ["readVariable", "MAP_WIDTH"]]]],
														"10"],
													[["doIf",
															["<",
																["computeFunction:of:",
																	"abs",
																	["\/", ["-", ["getParam", "idx", "r"], ["readVariable", "tmp"]], ["readVariable", "MAP_WIDTH"]]],
																"9"],
															[["setVar:to:", "Tile Type", ["readVariable", "i"]]]]]]]]]],
								["changeVar:by:", "i", 1]]]]],
				[3415.25,
					74.55,
					[["whenIReceive", "found claim"],
						["setVar:to:", "y", ["getLine:ofList:", ["+", ["getAttribute:of:", "@Player ID", "Multiplayer"], 50], "@PlayerNames"]],
						["setVar:to:",
							"x",
							["+", ["%", ["-", ["readVariable", "y"], 1], ["readVariable", "MAP_WIDTH"]], 0.5]],
						["setVar:to:",
							"y",
							["computeFunction:of:", "floor", ["\/", ["-", ["readVariable", "y"], 1], ["readVariable", "MAP_WIDTH"]]]],
						["setVar:to:", "SCROLL_X", ["readVariable", "x"]],
						["setVar:to:", "SCROLL_Y", ["readVariable", "y"]],
						["setVar:to:", "sx", "0"],
						["setVar:to:", "sy", "0"]]],
				[2248.2,
					2481.9,
					[["procDef", "Find Item By Name %s", ["name"], [""], true],
						["setVar:to:", "s", ["+", 2, ["readVariable", "TMul"]]],
						["doUntil",
							["|",
								[">", ["readVariable", "s"], ["lineCountOfList:", "_TileData"]],
								["=", ["getLine:ofList:", ["readVariable", "s"], "_TileData"], ["getParam", "name", "r"]]],
							[["changeVar:by:", "s", ["readVariable", "TMul"]]]],
						["doIfElse",
							[">", ["readVariable", "s"], ["lineCountOfList:", "_TileData"]],
							[["setVar:to:", "s", "0"]],
							[["setVar:to:", "s", ["computeFunction:of:", "floor", ["\/", ["readVariable", "s"], ["readVariable", "TMul"]]]],
								["doIf",
									["<",
										["getLine:ofList:", ["+", 4, ["*", ["readVariable", "s"], ["readVariable", "TMul"]]], "_TileData"],
										"1000"],
									[["doIf",
											[">",
												["getLine:ofList:", ["+", 3, ["*", ["readVariable", "s"], ["readVariable", "TMul"]]], "_TileData"],
												"0"],
											[["doIf",
													[">",
														["getLine:ofList:", ["+", 6, ["*", ["readVariable", "s"], ["readVariable", "TMul"]]], "_TileData"],
														"0"],
													[["setVar:to:",
															"s",
															["getLine:ofList:", ["+", 6, ["*", ["readVariable", "s"], ["readVariable", "TMul"]]], "_TileData"]]]]]]]]]]]],
				[959.2,
					1825.6,
					[["procDef", "Get LData For Tile %n", ["tile index"], [1], true],
						["setVar:to:", "i", "1"],
						["doUntil",
							["|",
								[">", ["readVariable", "i"], ["lineCountOfList:", "_LData"]],
								["=", ["getLine:ofList:", ["readVariable", "i"], "_LData"], ["getParam", "tile index", "r"]]],
							[["changeVar:by:", "i", ["getLine:ofList:", ["+", ["readVariable", "i"], 1], "_LData"]]]]]],
				[503, 695, [["whenGreenFlag"], ["setVar:to:", "Mode", "-99"]]],
				[1049.4,
					551.2,
					[["procDef", "Key Presses", [], [], false],
						["doIf",
							[">", ["readVariable", "inv_change"], "0"],
							[["setVar:to:", "timout", ["+", ["timer"], 500]]]],
						["doIfElse",
							["<", ["+", ["timer"], 0.5], ["readVariable", "Player Hit Time"]],
							[["setVar:to:", "sx", ["*", ["readVariable", "sx"], 0.9]]],
							[["doIfElse",
									["=", ["getAttribute:of:", "Chatting", "Safe Chat"], "0"],
									[["doIfElse",
											["|", ["keyPressed:", "left arrow"], ["keyPressed:", "a"]],
											[["call", "Change Speed %n %n", -1, ["computeFunction:of:", "abs", ["readVariable", "sx"]]]],
											[["doIfElse",
													["|", ["keyPressed:", "right arrow"], ["keyPressed:", "d"]],
													[["call", "Change Speed %n %n", 1, ["computeFunction:of:", "abs", ["readVariable", "sx"]]]],
													[["setVar:to:", "sx", "0"], ["setVar:to:", "Action", "0"]]]]],
										["doIfElse",
											["|",
												["keyPressed:", "up arrow"],
												["|",
													["keyPressed:", "w"],
													["&", ["=", ["readVariable", "Space_Fire"], "false"], ["keyPressed:", "space"]]]],
											[["doIfElse",
													["|", ["<", ["readVariable", "grounded"], "2"], [">", ["readVariable", "grounded"], "99998"]],
													[["setVar:to:", "sy", "0.6"], ["setVar:to:", "grounded", "9"]],
													[["doIf",
															["&", [">", ["readVariable", "sy"], "0.35"], ["<", ["readVariable", "grounded"], "14"]],
															[["setVar:to:", "sy", "0.6"]]]]]],
											[["doIf",
													[">", ["readVariable", "In Liquid"], "0"],
													[["doIf",
															["|", ["=", ["readVariable", "In Liquid"], "1"], ["<", ["readVariable", "sy"], "0"]],
															[["setVar:to:", "grounded", "99999"]]]]]]],
										["doIfElse",
											["keyPressed:", "e"],
											[["doIf",
													["=", ["readVariable", "SpecialKey"], "0"],
													[["setVar:to:", "SpecialKey", "1"],
														["call", "Open Inventory %n", ["getAttribute:of:", "Inside Idx", "Cursor"]],
														["doIf", ["=", ["readVariable", "Mode"], "1"], [["doBroadcastAndWait", "Calc Recipe"]]]]]],
											[["setVar:to:", "SpecialKey", 0]]]],
									[["setVar:to:", "sx", "0"], ["setVar:to:", "walkFrame", "2"], ["setVar:to:", "Action", "0"]]]]],
						["doIf",
							["=", ["readVariable", "Action"], "0"],
							[["doIfElse",
									["&", ["=", ["readVariable", "MOUSE_PRESSED"], "true"], ["=", ["readVariable", "Mode"], "0"]],
									[["setVar:to:", "Action", "1"],
										["doIf", ["=", ["readVariable", "walkFrame"], "2"], [["setVar:to:", "walkFrame", "4"]]],
										["changeVar:by:", "walkFrame", ["\/", ["getAttribute:of:", "_Tick", "Multiplayer"], 3]]],
									[["setVar:to:", "walkFrame", "2"]]]]]]],
				[577.55,
					2016.7,
					[["procDef", "Hurt %n", ["amount"], [1], false],
						["setVar:to:", "Hit Player", "done"],
						["setVar:to:", "Player Hit Time", ["+", ["timer"], 1]],
						["doIf",
							["=", ["getAttribute:of:", "Peaceful?", "Frame"], "0"],
							[["changeVar:by:", "Player Health", ["-", 0, ["getParam", "amount", "r"]]],
								["doIf",
									["not", [">", ["readVariable", "Player Health"], "0"]],
									[["setVar:to:", "Player Hit Time", ["+", ["timer"], 5.5]]]]]]]],
				[1667.85,
					657.2,
					[["procDef", "Check Tile at x: %n y: %n and x: %n y: %n", ["x", "y", "x2", "y2"], [1, 1, 1, 1], true],
						["call", "Check Tile at x: %n y: %n", ["getParam", "x", "r"], ["getParam", "y", "r"]],
						["setVar:to:", "tmp", ["readVariable", "Tile Is Solid"]],
						["doIf",
							[">", ["-", ["getParam", "y2", "r"], ["getParam", "y", "r"]], "1"],
							[["call", "Check Tile at x: %n y: %n", ["getParam", "x2", "r"], ["+", ["getParam", "y", "r"], 1]],
								["doIf",
									[">", ["readVariable", "Tile Is Solid"], ["readVariable", "tmp"]],
									[["setVar:to:", "tmp", ["readVariable", "Tile Is Solid"]]]]]],
						["call", "Check Tile at x: %n y: %n", ["getParam", "x2", "r"], ["getParam", "y2", "r"]],
						["doIf",
							["<", ["readVariable", "Tile Is Solid"], ["readVariable", "tmp"]],
							[["setVar:to:", "Tile Is Solid", ["readVariable", "tmp"]]]]]],
				[1664.85,
					408.85,
					[["procDef", "Get Tile At %n %n", ["x", "y"], [1, 1], true],
						["setVar:to:",
							"Tile Index",
							["+",
								["+",
									["*", ["computeFunction:of:", "floor", ["getParam", "y", "r"]], ["readVariable", "MAP_WIDTH"]],
									["computeFunction:of:", "floor", ["getParam", "x", "r"]]],
								1]],
						["doIfElse",
							["|",
								["<", ["getParam", "x", "r"], "0"],
								["not", ["<", ["getParam", "x", "r"], ["readVariable", "MAP_WIDTH"]]]],
							[["setVar:to:", "Tile Type", "0"]],
							[["setVar:to:", "Tile Type", ["getLine:ofList:", ["readVariable", "Tile Index"], "_Level"]]]]]],
				[654.1,
					918.4,
					[["procDef", "Check State", [], [], false],
						["call", "Check Tile at x: %n y: %n", ["readVariable", "x"], ["readVariable", "y"]],
						["doIf", ["=", ["readVariable", "Tile Is Solid"], "4"], [["doBroadcastAndWait", "Open Door"]]],
						["doIfElse",
							[">", ["readVariable", "Player Health"], "0"],
							[["doIf",
									["not", ["=", ["readVariable", "Hit Player"], ""]],
									[["doIf",
											[">", ["timer"], ["readVariable", "Player Hit Time"]],
											[["doIfElse",
													["=", ["readVariable", "Hit Player"], "done"],
													[["setVar:to:", "Hit Player", ""]],
													[["setVar:to:", "tmp", ["readVariable", "Hit Player"]],
														["setVar:to:", "i", "1"],
														["call", "Next Token %b", false],
														["call", "Hurt %n", ["readVariable", "s"]],
														["call", "Next Token %b", false],
														["changeVar:by:", "sx", ["readVariable", "s"]],
														["call", "Next Token %b", false],
														["changeVar:by:", "sy", ["readVariable", "s"]],
														["setVar:to:", "grounded", "5"]]]]]]]],
							[["doIf",
									[">", ["timer"], ["-", ["readVariable", "Player Hit Time"], 1]],
									[["doBroadcastAndWait", "respawn"]]]]],
						["doIf",
							["<", ["readVariable", "Player Health"], ["readVariable", "Player Max Health"]],
							[["doIf",
									[">", ["timer"], ["+", ["readVariable", "Player Hit Time"], 20]],
									[["changeVar:by:", "Player Health", 1],
										["doIf",
											[">", ["readVariable", "Player Health"], ["readVariable", "Player Max Health"]],
											[["setVar:to:", "Player Health", ["readVariable", "Player Max Health"]]]],
										["setVar:to:", "Player Hit Time", ["-", ["timer"], 10]]]]]]]],
				[2304.7,
					918,
					[["whenIReceive", "New Buff"],
						["comeToFront"],
						["doIfElse",
							["=", ["getAttribute:of:", "BuffID", "Cursor"], "107"],
							[["say:", "Builder Potion - Super Crafting!"]],
							[["doIfElse",
									["=", ["getAttribute:of:", "BuffID", "Cursor"], "108"],
									[["say:", "Mining Potion - Double Speed Mining"]],
									[["doIfElse",
											["=", ["getAttribute:of:", "BuffID", "Cursor"], "109"],
											[["say:", "Swiftness Potion - Run extra fast"]],
											[["doIf",
													[">", ["getAttribute:of:", "BuffID", "Cursor"], "194"],
													[["doIfElse",
															["<", ["getAttribute:of:", "BuffID", "Cursor"], "198"],
															[["doIfElse",
																	["=", ["getAttribute:of:", "BuffID", "Cursor"], "195"],
																	[["say:", "+2.5 Health"], ["changeVar:by:", "Player Health", 2.5]],
																	[["doIfElse",
																			["=", ["getAttribute:of:", "BuffID", "Cursor"], "196"],
																			[["say:", "+5 Health"], ["changeVar:by:", "Player Health", 5]],
																			[["say:", "+7.5 Health"], ["changeVar:by:", "Player Health", 7.5]]]]],
																["doIf", [">", ["readVariable", "Player Health"], "10"], [["setVar:to:", "Player Health", "10"]]]],
															[["doIfElse",
																	["=", ["getAttribute:of:", "BuffID", "Cursor"], "198"],
																	[["say:", "Featherfall Potion - Fall more slowly"]],
																	[["doIfElse",
																			["=", ["getAttribute:of:", "BuffID", "Cursor"], "199"],
																			[["say:", "Spelunker Potion - Makes ores brighter"]],
																			[["doIfElse", ["=", ["getAttribute:of:", "BuffID", "Cursor"], "200"], [["say:", "Obsidian Skin Potion - Invulnerable to lava"]], null]]]]]]]]]]]]]]],
						["setVar:to:", "Chat Timer", ["+", ["timer"], 5]]]],
				[26,
					18,
					[["whenIReceive", "Start Game Loop"],
						["doIfElse",
							["|", ["=", ["getUserName"], "griffpatch"], ["=", ["getUserName"], "griffpatch_tutor"]],
							[["setVar:to:", "Profile_Hair", "1"], ["setVar:to:", "Space_Fire", "1"]],
							[["setVar:to:", "Profile_Hair", ["getAttribute:of:", "Options", "Frame"]]]],
						["doBroadcastAndWait", "Setup Level (Prep only)"],
						["setVar:to:", "SCROLL_X", ["randomFrom:to:", 20, ["-", ["readVariable", "MAP_WIDTH"], 20]]],
						["setVar:to:", "SCROLL_Y", ["*", ["readVariable", "MAP_HEIGHT"], 0.9]],
						["setVar:to:", "TICK", 0],
						["doBroadcastAndWait", "Clone Sprites"],
						["doBroadcastAndWait", "Back_clouds"],
						["changeVar:by:", "TICK", 1],
						["doBroadcastAndWait", "Back_clouds"],
						["changeVar:by:", "TICK", 1],
						["doBroadcastAndWait", "Back_clouds"],
						["changeVar:by:", "TICK", 1],
						["doBroadcastAndWait", "Back_clouds"],
						["changeVar:by:", "TICK", 0],
						["setVar:to:", "Space_Fire", "1"],
						["setVar:to:", "MOUSE_PRESSED", "false"],
						["setVar:to:", "dir", "90"],
						["setVar:to:", "Mode", 0],
						["setVar:to:", "timout", ["+", ["timer"], 300]],
						["setVar:to:", "Hit Player", ""],
						["setVar:to:", "Player Hit Time", "-1000"],
						["setVar:to:", "Player Health", "5"],
						["setVar:to:", "Player Max Health", "10"],
						["setVar:to:", "Fall Height", "0"],
						["doBroadcastAndWait", "@Allocate Gaming Slot"],
						["broadcast:", "Begin Actual Game Loop"]]],
				[1041,
					37.75,
					[["procDef", "Scroll Screen Following Player %n", ["lastY"], [1], true],
						["doRepeat",
							["getAttribute:of:", "_Tick", "Multiplayer"],
							[["doIfElse",
									["=", ["getAttribute:of:", "show console", "Multiplayer"], "0"],
									[["setVar:to:",
											"SCROLL_X",
											["\/",
												["+",
													["+", ["getAttribute:of:", "x", "Player"], ["\/", ["readVariable", "dir"], 65]],
													["*", ["readVariable", "SCROLL_X"], 6]],
												7]]],
									[["setVar:to:",
											"SCROLL_X",
											["\/",
												["+",
													["+", ["getAttribute:of:", "x", "Player"], 2.4],
													["*", ["readVariable", "SCROLL_X"], 2]],
												3]]]],
								["setVar:to:",
									"SCROLL_Y",
									["\/",
										["+",
											["+", ["getAttribute:of:", "y", "Player"], 0.5],
											["*", ["readVariable", "SCROLL_Y"], 2]],
										3]],
								["doIf", ["<", ["readVariable", "SCROLL_X"], "6"], [["setVar:to:", "SCROLL_X", "6"]]],
								["doIf",
									[">", ["readVariable", "SCROLL_X"], ["-", ["readVariable", "MAP_WIDTH"], 6]],
									[["setVar:to:", "SCROLL_X", ["-", ["readVariable", "MAP_WIDTH"], 6]]]],
								["doIf", ["<", ["readVariable", "SCROLL_Y"], "4"], [["setVar:to:", "SCROLL_Y", "4"]]]]]]],
				[505, 601.9, [["whenIReceive", "respawn"], ["call", "respawn"]]],
				[348, 713.1, [["setVar:to:", "In Liquid", 0]]],
				[711.35,
					660.95,
					[["procDef", "gameloop cmd %n", ["cmd"], [1], false],
						["setLine:ofList:to:", 27, "_Chat", ""],
						["doIf",
							["=", ["getParam", "cmd", "r"], "create new level"],
							[["doBroadcastAndWait", "CREATE NEW LEVEL"], ["broadcast:", "Begin Actual Game Loop"]]]]],
				[3090.25, 1086.6, [["startScene", "sky"]]],
				[515.6, 27.4, [["setVar:to:", "TMul", "8"]]],
				[3417.45,
					372.25,
					[["procDef", "Collection Message", [], [], false],
						["setLine:ofList:to:", 29, "_Chat", ""],
						["setVar:to:", "i", ["getLine:ofList:", 30, "_Chat"]],
						["doIfElse",
							["=", ["readVariable", "i"], "-1"],
							[["think:", "Inventory Full..."]],
							[["setVar:to:",
									"tmp",
									["getLine:ofList:", ["+", 2, ["*", ["readVariable", "i"], ["readVariable", "TMul"]]], "_TileData"]],
								["doIf",
									[">", ["getLine:ofList:", 31, "_Chat"], "1"],
									[["setVar:to:",
											"tmp",
											["concatenate:with:",
												["readVariable", "tmp"],
												["concatenate:with:", " (x", ["concatenate:with:", ["getLine:ofList:", 31, "_Chat"], ")"]]]]]],
								["setVar:to:", "i", ["getLine:ofList:", 32, "_Chat"]],
								["doIf",
									[">", ["readVariable", "i"], "0"],
									[["setVar:to:",
											"tmp",
											["concatenate:with:",
												["readVariable", "tmp"],
												["concatenate:with:",
													", ",
													["getLine:ofList:", ["+", 2, ["*", ["readVariable", "i"], ["readVariable", "TMul"]]], "_TileData"]]]],
										["doIf",
											[">", ["getLine:ofList:", 33, "_Chat"], "1"],
											[["setVar:to:",
													"tmp",
													["concatenate:with:",
														["readVariable", "tmp"],
														["concatenate:with:", " (x", ["concatenate:with:", ["getLine:ofList:", 33, "_Chat"], ")"]]]]]]]],
								["think:", ["readVariable", "tmp"]]]],
						["setVar:to:", "Chat Timer", ["+", ["timer"], 2.5]]]],
				[26,
					812.6,
					[["whenIReceive", "Begin Actual Game Loop"],
						["setVar:to:", "SCORE", 0],
						["setVar:to:", "howLong", ["timer"]],
						["call", "respawn"],
						["show"],
						["doUntil",
							["&",
								[">", ["timer"], ["readVariable", "timout"]],
								["=", ["getAttribute:of:", "@Offline", "Multiplayer"], "0"]],
							[["doIf",
									["not", ["=", ["getLine:ofList:", 29, "_Chat"], ""]],
									[["call", "Collection Message"]]],
								["doIf",
									["not", ["=", ["getLine:ofList:", 27, "_Chat"], ""]],
									[["call", "gameloop cmd %n", ["getLine:ofList:", 27, "_Chat"]]]],
								["doIf",
									["&", ["=", ["getAttribute:of:", "@Offline", "Multiplayer"], "1"], ["keyPressed:", "p"]],
									[["doIf",
											["=", ["getAttribute:of:", "Chatting", "Safe Chat"], "0"],
											[["doWaitUntil", ["not", ["keyPressed:", "p"]]],
												["doWaitUntil", ["keyPressed:", "p"]],
												["doWaitUntil", ["not", ["keyPressed:", "p"]]]]]]],
								["changeVar:by:", "howLong", ["*", 0.032, ["getAttribute:of:", "_Tick", "Multiplayer"]]],
								["doIfElse",
									["|",
										["<", ["timer"], ["readVariable", "howLong"]],
										[">", ["getAttribute:of:", "_Tick", "Multiplayer"], "1"]],
									[["wait:elapsed:from:", ["-", ["readVariable", "howLong"], ["timer"]]]],
									[["doIf",
											["<", ["+", ["timer"], 0.03], ["readVariable", "howLong"]],
											[["setVar:to:", "howLong", ["timer"]]]]]],
								["setVar:to:", "MOUSE_PRESSED", ["mousePressed"]],
								["doIf",
									["=", ["readVariable", "Space_Fire"], "1"],
									[["doIf",
											["&", ["=", ["getAttribute:of:", "Chatting", "Safe Chat"], "0"], ["keyPressed:", "space"]],
											[["setVar:to:", "MOUSE_PRESSED", "true"]]]]],
								["setVar:to:",
									"Day Night",
									["\/",
										["%", ["-", ["+", ["timer"], ["getAttribute:of:", "Time of Day", "Multiplayer"]], 420], 1440],
										720]],
								["changeVar:by:", "TICK", ["getAttribute:of:", "_Tick", "Multiplayer"]],
								["doIf", [">", ["getAttribute:of:", "@Player ID", "Multiplayer"], "-2"], [["doBroadcastAndWait", "@Update Multiplayer"]]],
								["doIf",
									["keyPressed:", ["concatenate:with:", "\/", ""]],
									[["doIf",
											["|",
												["=", ["getAttribute:of:", "Chatting", "Safe Chat"], "0"],
												["=", ["getAttribute:of:", "canHelp", "Safe Chat"], "1"]],
											[["broadcast:", "cmd button press"]]]]],
								["call", "Check State"],
								["call", "Key Presses"],
								["call", "Move Player X then Y"],
								["call", "Scroll Screen Following Player %n", ["readVariable", "SCROLL_Y"]],
								["doIfElse",
									[">", ["readVariable", "Player Health"], "0"],
									[["setVar:to:",
											"costume",
											["+", ["readVariable", "Action"], ["*", 13, ["getAttribute:of:", "Color", "Frame"]]]],
										["doIfElse",
											["=", ["readVariable", "Action"], "1"],
											[["changeVar:by:", "costume", ["%", ["computeFunction:of:", "floor", ["readVariable", "walkFrame"]], 4]]],
											[["doIf",
													["=", ["readVariable", "Action"], "6"],
													[["changeVar:by:", "costume", ["%", ["computeFunction:of:", "floor", ["readVariable", "walkFrame"]], 7]]]]]]],
									[["setVar:to:", "costume", "-1"]]],
								["doBroadcastAndWait", "pre animate"],
								["doBroadcastAndWait", "animate"],
								["doIf", [">", ["readVariable", "inv_change"], "0"], [["changeVar:by:", "inv_change", -1]]]]],
						["doBroadcastAndWait", "Disconnected"]]],
				[600.65,
					2517.85,
					[["procDef", "Hit Ground %b", ["fallBy?"], [false], false],
						["doIfElse",
							[">", ["-", ["readVariable", "Fall Height"], ["readVariable", "y"]], "10"],
							[["doIf",
									["not", ["getParam", "fallBy?", "b"]],
									[["call",
											"Hurt %n",
											["\/", ["-", ["-", ["readVariable", "Fall Height"], ["readVariable", "y"]], 10], 2]],
										["setVar:to:", "Fall Height", ["readVariable", "y"]]]]],
							[["setVar:to:", "Fall Height", ["readVariable", "y"]]]]]],
				[38,
					3620.1,
					[["procDef", "Move Player X then Y", [], [], true],
						["doRepeat",
							["getAttribute:of:", "_Tick", "Multiplayer"],
							[["doIfElse",
									["<", ["readVariable", "sx"], "0"],
									[["doIf",
											[">", ["readVariable", "x"], "1"],
											[["changeVar:by:", "x", ["readVariable", "sx"]],
												["call",
													"Check Tile at x: %n y: %n and x: %n y: %n",
													["-", ["readVariable", "x"], ["readVariable", "Player Width"]],
													["readVariable", "y"],
													["-", ["readVariable", "x"], ["readVariable", "Player Width"]],
													["+", ["readVariable", "y"], ["readVariable", "Player Height"]]],
												["doIf",
													[">", ["readVariable", "Tile Is Solid"], "9"],
													[["call",
															"Check Tile at x: %n y: %n and x: %n y: %n",
															["-", ["readVariable", "x"], ["readVariable", "Player Width"]],
															["computeFunction:of:", "floor", ["+", ["readVariable", "y"], 1]],
															["-", ["readVariable", "x"], ["readVariable", "Player Width"]],
															["+", ["computeFunction:of:", "floor", ["+", ["readVariable", "y"], 1]], ["readVariable", "Player Height"]]],
														["doIfElse",
															["&",
																["<", ["readVariable", "Tile Is Solid"], "10"],
																[">", ["%", ["readVariable", "y"], 1], "0.7"]],
															[["setVar:to:", "y", ["computeFunction:of:", "floor", ["+", ["readVariable", "y"], 1]]],
																["setVar:to:", "sy", "0"]],
															[["changeVar:by:", "x", ["-", 0, ["readVariable", "sx"]]],
																["setVar:to:", "sx", 0],
																["doIf",
																	["&", ["<", ["readVariable", "Tile Is Solid"], "10"], ["<", ["readVariable", "grounded"], "4"]],
																	[["setVar:to:", "sy", "0.45"], ["setVar:to:", "grounded", "2"], ["call", "Hit Ground %b", false]]]]]]]]]],
									[["doIf",
											["<", ["readVariable", "x"], ["-", ["readVariable", "MAP_WIDTH"], 1]],
											[["changeVar:by:", "x", ["readVariable", "sx"]],
												["call",
													"Check Tile at x: %n y: %n and x: %n y: %n",
													["+", ["readVariable", "x"], ["readVariable", "Player Width"]],
													["readVariable", "y"],
													["+", ["readVariable", "x"], ["readVariable", "Player Width"]],
													["+", ["readVariable", "y"], ["readVariable", "Player Height"]]],
												["doIf",
													[">", ["readVariable", "Tile Is Solid"], "9"],
													[["call",
															"Check Tile at x: %n y: %n and x: %n y: %n",
															["+", ["readVariable", "x"], ["readVariable", "Player Width"]],
															["computeFunction:of:", "floor", ["+", ["readVariable", "y"], 1]],
															["+", ["readVariable", "x"], ["readVariable", "Player Width"]],
															["+", ["computeFunction:of:", "floor", ["+", ["readVariable", "y"], 1]], ["readVariable", "Player Height"]]],
														["doIfElse",
															["&",
																["<", ["readVariable", "Tile Is Solid"], "10"],
																[">", ["%", ["readVariable", "y"], 1], "0.7"]],
															[["setVar:to:", "y", ["computeFunction:of:", "ceiling", ["readVariable", "y"]]], ["setVar:to:", "sy", "0"]],
															[["changeVar:by:", "x", ["-", 0, ["readVariable", "sx"]]],
																["setVar:to:", "sx", 0],
																["doIf",
																	["&", ["<", ["readVariable", "Tile Is Solid"], "10"], ["<", ["readVariable", "grounded"], "4"]],
																	[["setVar:to:", "sy", "0.45"], ["setVar:to:", "grounded", "2"], ["call", "Hit Ground %b", false]]]]]]]]]]],
								["setVar:to:", "In Liquid", 0],
								["call", "Get Tile At %n %n", ["readVariable", "x"], ["+", ["readVariable", "y"], 0.2]],
								["doIfElse",
									["&",
										[">", ["readVariable", "Tile Type"], "0"],
										["=",
											["getLine:ofList:", ["+", 3, ["*", ["readVariable", "Tile Type"], ["readVariable", "TMul"]]], "_TileData"],
											"2.5"]],
									[["doIf",
											["<",
												["%", ["+", ["readVariable", "y"], 0.2], 1],
												["\/",
													["getLine:ofList:", ["+", 5, ["*", ["readVariable", "Tile Type"], ["readVariable", "TMul"]]], "_TileData"],
													16]],
											[["setVar:to:", "In Liquid", "1"],
												["doIf",
													[">", ["readVariable", "Tile Type"], "177"],
													[["setVar:to:", "sy", ["*", ["readVariable", "sy"], 0.9]],
														["doIf",
															["&",
																["<", ["getAttribute:of:", "Peaceful?", "Frame"], "1"],
																[">", ["readVariable", "Player Health"], "0"]],
															[["doIf",
																	["not", ["=", ["getAttribute:of:", "BuffID", "Cursor"], "200"]],
																	[["changeVar:by:", "Player Health", -0.05],
																		["doIf",
																			["not", [">", ["readVariable", "Player Health"], "0"]],
																			[["setVar:to:", "Player Hit Time", ["+", ["timer"], 5.5]]]]]]]]]]]]],
									null],
								["call", "Get Tile At %n %n", ["readVariable", "x"], ["+", ["readVariable", "y"], 1.05]],
								["doIf",
									["&",
										[">", ["readVariable", "Tile Type"], "0"],
										["=",
											["getLine:ofList:", ["+", 3, ["*", ["readVariable", "Tile Type"], ["readVariable", "TMul"]]], "_TileData"],
											"2.5"]],
									[["doIf",
											["<",
												["%", ["+", ["readVariable", "y"], 1.05], 1],
												["\/",
													["getLine:ofList:", ["+", 5, ["*", ["readVariable", "Tile Type"], ["readVariable", "TMul"]]], "_TileData"],
													16]],
											[["setVar:to:", "In Liquid", "2"]]]]],
								["doIf",
									[">", ["readVariable", "In Liquid"], "0"],
									[["setVar:to:", "sx", ["*", ["readVariable", "sx"], 0.6]],
										["changeVar:by:", "Fall Height", ["*", ["-", ["readVariable", "y"], ["readVariable", "Fall Height"]], 0.2]]]],
								["doIfElse",
									[">", ["readVariable", "In Liquid"], "1"],
									[["setVar:to:", "sy", ["*", ["-", ["readVariable", "sy"], 0.03], 0.7]],
										["doIf",
											["&",
												["<", ["getAttribute:of:", "Breath", "Breath"], "0"],
												[">", ["readVariable", "Player Health"], "0"]],
											[["doIf",
													["<", ["getAttribute:of:", "Peaceful?", "Frame"], "1"],
													[["changeVar:by:", "Player Health", -0.05],
														["doIf",
															["not", [">", ["readVariable", "Player Health"], "0"]],
															[["setVar:to:", "Player Hit Time", ["+", ["timer"], 5.5]]]]]]]]],
									[["setVar:to:", "sy", ["*", ["-", ["readVariable", "sy"], 0.05], 0.96]],
										["doIf",
											["=", ["getAttribute:of:", "BuffID", "Cursor"], "198"],
											[["doIf",
													["<", ["readVariable", "sy"], "-0.3"],
													[["setVar:to:", "sy", "-0.3"], ["setVar:to:", "Fall Height", ["readVariable", "y"]]]]]]]],
								["doIf", ["<", ["readVariable", "sy"], "-0.9"], [["setVar:to:", "sy", "-0.9"]]],
								["changeVar:by:", "y", ["readVariable", "sy"]],
								["changeVar:by:", "grounded", 1],
								["doIfElse",
									["<", ["readVariable", "sy"], "0"],
									[["call",
											"Check Tile at x: %n y: %n and x: %n y: %n",
											["-", ["readVariable", "x"], ["readVariable", "Player Width"]],
											["readVariable", "y"],
											["+", ["readVariable", "x"], ["readVariable", "Player Width"]],
											["readVariable", "y"]],
										["doIfElse",
											["=", ["readVariable", "Tile Is Solid"], "5.5"],
											[["doIfElse",
													["&",
														["=", ["getAttribute:of:", "Chatting", "Safe Chat"], "0"],
														["|", ["keyPressed:", "s"], ["keyPressed:", "down arrow"]]],
													[["call", "Hit Ground %b", ["not", false]]],
													[["changeVar:by:", "y", ["-", 0, ["readVariable", "sy"]]],
														["setVar:to:", "sy", 0],
														["setVar:to:", "grounded", 0],
														["call", "Hit Ground %b", false]]]],
											[["doIf",
													["&",
														["&", [">", ["readVariable", "Tile Is Solid"], "6.75"], ["<", ["readVariable", "Tile Is Solid"], "10"]],
														["=",
															["computeFunction:of:", "ceiling", ["readVariable", "y"]],
															["computeFunction:of:", "floor", ["-", ["readVariable", "y"], ["readVariable", "sy"]]]]],
													[["doIfElse",
															["&",
																["=", ["getAttribute:of:", "Chatting", "Safe Chat"], "0"],
																["|", ["keyPressed:", "s"], ["keyPressed:", "down arrow"]]],
															[["call", "Hit Ground %b", ["not", false]]],
															[["setVar:to:", "Tile Is Solid", "10"]]]]],
												["doIf",
													["|", [">", ["readVariable", "Tile Is Solid"], "9"], ["<", ["readVariable", "y"], "0"]],
													[["setVar:to:", "y", ["computeFunction:of:", "ceiling", ["readVariable", "y"]]],
														["setVar:to:", "sy", 0],
														["setVar:to:", "grounded", 0],
														["call", "Hit Ground %b", false]]]]]],
									[["call",
											"Check Tile at x: %n y: %n and x: %n y: %n",
											["-", ["readVariable", "x"], ["readVariable", "Player Width"]],
											["+", ["readVariable", "y"], ["readVariable", "Player Height"]],
											["+", ["readVariable", "x"], ["readVariable", "Player Width"]],
											["+", ["readVariable", "y"], ["readVariable", "Player Height"]]],
										["doIf",
											[">", ["readVariable", "Tile Is Solid"], "9"],
											[["setVar:to:",
													"y",
													["-",
														["-",
															["computeFunction:of:", "floor", ["+", ["readVariable", "y"], ["readVariable", "Player Height"]]],
															["readVariable", "Player Height"]],
														0.001]],
												["setVar:to:", "sy", 0]]]]],
								["doIf",
									["|",
										["<", ["readVariable", "y"], "-25"],
										["|",
											["<", ["readVariable", "x"], "0"],
											["not", ["<", ["readVariable", "x"], ["readVariable", "MAP_WIDTH"]]]]],
									[["call", "respawn"]]],
								["doIf", [">", ["readVariable", "grounded"], "13"], [["setVar:to:", "Action", "5"]]],
								["call", "Send Data"]]]]],
				[473,
					5814.1,
					[["setVar:to:", "sy", ["*", ["-", ["readVariable", "sy"], 0.08], 0.95]],
						["doIf",
							["=", ["getAttribute:of:", "BuffID", "Cursor"], "198"],
							[["doIf",
									["<", ["readVariable", "sy"], "-0.3"],
									[["setVar:to:", "sy", "-0.3"], ["setVar:to:", "Fall Height", ["readVariable", "y"]]]]]]]],
				[1436.4,
					1478.2,
					[["doIfElse",
							["&", [">", ["readVariable", "grounded"], "99998"], ["<", ["readVariable", "grounded"], "100014"]],
							[["doIf", [">", ["readVariable", "sy"], "0.3"], [["setVar:to:", "sy", "0.55"]]]],
							null]]],
				[262, 340, [["broadcast:", "Begin Actual Game Loop"], ["broadcast:", "@Allocate Gaming Slot"]]],
				[28.6,
					2509.75,
					[["whenIReceive", "animate"],
						["xpos:",
							["computeFunction:of:",
								"floor",
								["*", ["-", ["readVariable", "x"], ["readVariable", "SCROLL_X"]], ["readVariable", "TILE_SIZE"]]]],
						["ypos:",
							["computeFunction:of:",
								"floor",
								["*", ["-", ["readVariable", "y"], ["readVariable", "SCROLL_Y"]], ["readVariable", "TILE_SIZE"]]]],
						["doIfElse",
							[">", ["getAttribute:of:", "Chatting", "Safe Chat"], "1"],
							[["doIfElse",
									["=", ["letter:of:", 1, ["getAttribute:of:", "Filtered", "Safe Chat"]], "\/"],
									[["call", "Do Command %s", ["getAttribute:of:", "Filtered", "Safe Chat"]]],
									[["doIfElse",
											["=", ["getAttribute:of:", "Chatting", "Safe Chat"], "3"],
											[["append:toList:", "0", "@Place"],
												["append:toList:",
													["concatenate:with:",
														"n",
														["concatenate:with:",
															["getAttribute:of:", "Tile Index", "Safe Chat"],
															["concatenate:with:", " ", ["concatenate:with:", ["getUserName"], ["concatenate:with:", " ", ["getAttribute:of:", "Filtered", "Safe Chat"]]]]]],
													"@Place"],
												["call", "Get LData For Tile %n", ["getAttribute:of:", "Tile Index", "Safe Chat"]],
												["doIfElse",
													[">", ["readVariable", "i"], ["lineCountOfList:", "_LData"]],
													[["append:toList:", ["getAttribute:of:", "Tile Index", "Safe Chat"], "_LData"],
														["append:toList:", "4", "_LData"],
														["append:toList:", ["getUserName"], "_LData"],
														["append:toList:", ["getAttribute:of:", "Filtered", "Safe Chat"], "_LData"]],
													[["setLine:ofList:to:", ["+", ["readVariable", "i"], 2], "_LData", ["getUserName"]],
														["setLine:ofList:to:", ["+", ["readVariable", "i"], 3], "_LData", ["getAttribute:of:", "Filtered", "Safe Chat"]]]]],
											[["say:", ["getAttribute:of:", "Filtered", "Safe Chat"]],
												["doIf",
													["=", ["getAttribute:of:", "Chatting", "Safe Chat"], "2"],
													[["append:toList:", "0", "@Place"],
														["append:toList:", ["concatenate:with:", "c", ["getAttribute:of:", "Filtered", "Safe Chat"]], "@Place"]]],
												["setVar:to:", "Chat Timer", ["+", ["timer"], 2.5]]]],
										["broadcast:", "Chat Sent"]]]],
							[["doIf",
									[">", ["timer"], ["readVariable", "Chat Timer"]],
									[["doIfElse",
											["=", ["readVariable", "Chat Timer"], ""],
											null,
											[["say:", ""],
												["setVar:to:", "Chat Timer", ""],
												["setLine:ofList:to:", 30, "_Chat", ""],
												["setLine:ofList:to:", 32, "_Chat", ""]]]]]]]]]],
			"scriptComments": [[644.6, 313.05, 205, 145, false, 584, "Send 5 times before a new placement drops off the end..."],
				[860.1, 1001.4, 100, 47, false, 1040, "A door"],
				[1066.6, 4065.4, 150, 200, false, 563, "Clear out crafting"],
				[498, 943.1, 171, 156, false, 1310, "No movement for 5 mins"],
				[1145.6, 2111.9, 150, 200, false, 409, "Items back to chest!"],
				[1301.6, 3752.4, 150, 200, false, 546, "remove from chest"],
				[1133.6, 2807.9, 150, 200, false, 475, "And Broadcast!"],
				[1242.6, 2141.9, 150, 200, false, 412, "Modified!"],
				[1177.6, 3300.9, 251, 57, false, 514, "Redirect to chest you are standing over"],
				[2656.2, 2763.9, 150, 200, false, 806, "Not a tool"],
				[343, 1051.1, 150, 200, false, 1322, "Game Loop command"]],
			"sounds": [{
					"soundName": "pop",
					"soundID": 0,
					"md5": "83a9787d4cb6f3b7632b4ddfebf74367.wav",
					"sampleCount": 258,
					"rate": 11025,
					"format": ""
				}],
			"costumes": [{
					"costumeName": "Player-male-Walk-0",
					"baseLayerID": 476,
					"baseLayerMD5": "a1f56f034ef6764eade40b153aef2bb3.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 1,
					"rotationCenterY": 44
				}],
			"currentCostumeIndex": 0,
			"scratchX": 55,
			"scratchY": -21,
			"scale": 1.5,
			"direction": 90,
			"rotationStyle": "leftRight",
			"isDraggable": false,
			"indexInLibrary": 1,
			"visible": false,
			"spriteInfo": {
			}
		},
		{
			"target": "NPC",
			"cmd": "getVar:",
			"param": "szx",
			"color": 15629590,
			"label": "NPC: szx",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 106,
			"y": 280,
			"visible": false
		},
		{
			"target": "NPC",
			"cmd": "getVar:",
			"param": "szy",
			"color": 15629590,
			"label": "NPC: szy",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 227,
			"y": 311,
			"visible": false
		},
		{
			"target": "Cursor",
			"cmd": "getVar:",
			"param": "PlaceTimer",
			"color": 15629590,
			"label": "Cursor: PlaceTimer",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 258,
			"y": 309,
			"visible": false
		},
		{
			"target": "Lighting",
			"cmd": "getVar:",
			"param": "ii",
			"color": 15629590,
			"label": "Lighting: ii",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 297,
			"y": 186,
			"visible": false
		},
		{
			"target": "Lighting",
			"cmd": "getVar:",
			"param": "iii",
			"color": 15629590,
			"label": "Lighting: iii",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 41,
			"y": 175,
			"visible": false
		},
		{
			"target": "Multiplayer",
			"cmd": "getVar:",
			"param": "@Offline",
			"color": 15629590,
			"label": "Multiplayer: @Offline",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 251,
			"y": 265,
			"visible": false
		},
		{
			"target": "Multiplayer",
			"cmd": "getVar:",
			"param": "@Player ID",
			"color": 15629590,
			"label": "Multiplayer: @Player ID",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 239,
			"y": 291,
			"visible": false
		},
		{
			"target": "Multiplayer",
			"cmd": "getVar:",
			"param": "Debug",
			"color": 15629590,
			"label": "Multiplayer: Debug",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 41,
			"y": 310,
			"visible": false
		},
		{
			"target": "Cursor",
			"cmd": "getVar:",
			"param": "Next Tile Say",
			"color": 15629590,
			"label": "Cursor: Next Tile Say",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 260,
			"y": 229,
			"visible": false
		},
		{
			"target": "Cursor",
			"cmd": "getVar:",
			"param": "Tile Say",
			"color": 15629590,
			"label": "Cursor: Tile Say",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 299,
			"y": 255,
			"visible": false
		},
		{
			"target": "Particles",
			"cmd": "getVar:",
			"param": "tok",
			"color": 15629590,
			"label": "Particles: tok",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 95,
			"y": 120,
			"visible": false
		},
		{
			"target": "Multiplayer",
			"cmd": "getVar:",
			"param": "Read Snapshot ID",
			"color": 15629590,
			"label": "Multiplayer: Read Snapshot ID",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 240,
			"y": 24,
			"visible": false
		},
		{
			"target": "Multiplayer",
			"cmd": "getVar:",
			"param": "Snapshot ID",
			"color": 15629590,
			"label": "Multiplayer: Snapshot ID",
			"mode": 2,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 21,
			"y": 309,
			"visible": false
		},
		{
			"target": "Stage",
			"cmd": "getVar:",
			"param": "debug",
			"color": 15629590,
			"label": "debug",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 64,
			"y": 265,
			"visible": false
		},
		{
			"target": "Cursor",
			"cmd": "getVar:",
			"param": "lifeTickX",
			"color": 15629590,
			"label": "Cursor: lifeTickX",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 193,
			"y": 256,
			"visible": false
		},
		{
			"target": "Body",
			"cmd": "getVar:",
			"param": "timeout",
			"color": 15629590,
			"label": "Body: timeout",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 153,
			"y": 271,
			"visible": false
		},
		{
			"target": "Setup Level",
			"cmd": "getVar:",
			"param": "sea level",
			"color": 15629590,
			"label": "Setup Level: sea level",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 294,
			"y": 242,
			"visible": false
		},
		{
			"target": "Sun2",
			"cmd": "getVar:",
			"param": "ghost",
			"color": 15629590,
			"label": "Sun2: ghost",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 135,
			"y": 34,
			"visible": false
		},
		{
			"target": "Sun2",
			"cmd": "getVar:",
			"param": "nxtGhost",
			"color": 15629590,
			"label": "Sun2: nxtGhost",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 288,
			"y": 60,
			"visible": false
		},
		{
			"target": "Multiplayer",
			"cmd": "getVar:",
			"param": "show console",
			"color": 15629590,
			"label": "Multiplayer: show console",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 383,
			"y": 288,
			"visible": false
		},
		{
			"target": "Hair",
			"cmd": "getVar:",
			"param": "visible",
			"color": 15629590,
			"label": "Hair: visible",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 124,
			"y": 305,
			"visible": false
		},
		{
			"target": "Cursor",
			"cmd": "getVar:",
			"param": "Cursor Visible",
			"color": 15629590,
			"label": "Cursor: Cursor Visible",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 53,
			"y": 153,
			"visible": false
		},
		{
			"target": "Warning",
			"cmd": "getVar:",
			"param": "Time Left",
			"color": 15629590,
			"label": "Warning: Time Left",
			"mode": 2,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 213,
			"y": 328,
			"visible": false
		},
		{
			"objName": "Map",
			"variables": [{
					"name": "index",
					"value": 0,
					"isPersistent": false
				},
				{
					"name": "t",
					"value": -1.2228571428571429,
					"isPersistent": false
				},
				{
					"name": "tile #",
					"value": "178",
					"isPersistent": false
				},
				{
					"name": "last Tile",
					"value": "178",
					"isPersistent": false
				},
				{
					"name": "Tile Is Solid",
					"value": 0,
					"isPersistent": false
				},
				{
					"name": "mat",
					"value": "5",
					"isPersistent": false
				},
				{
					"name": "water",
					"value": 39900,
					"isPersistent": false
				}],
			"scripts": [[49,
					139,
					[["procDef", "STAMP %n", ["expand"], [1], true],
						["broadcast:", "Hide All"],
						["clearPenTrails"],
						["setVar:to:", "index", ["*", ["readVariable", "MAP_WIDTH"], ["readVariable", "MAP_HEIGHT"]]],
						["setVar:to:",
							"t",
							["\/", ["*", 428, ["getParam", "expand", "r"]], ["readVariable", "MAP_WIDTH"]]],
						["ypos:", ["-", ["*", ["readVariable", "MAP_HEIGHT"], ["readVariable", "t"]], 140]],
						["penSize:", ["computeFunction:of:", "ceiling", ["*", ["readVariable", "t"], 1]]],
						["setVar:to:", "t", ["-", 0, ["readVariable", "t"]]],
						["setVar:to:",
							"water",
							["*", ["readVariable", "MAP_WIDTH"], ["-", ["getAttribute:of:", "sea level", "Setup Level"], 6]]],
						["doRepeat",
							["readVariable", "MAP_HEIGHT"],
							[["xpos:", 214],
								["putPenDown"],
								["doRepeat",
									["readVariable", "MAP_WIDTH"],
									[["setVar:to:", "tile #", ["getLine:ofList:", ["readVariable", "index"], "_Level"]],
										["doIfElse",
											["=", ["readVariable", "tile #"], ["readVariable", "last Tile"]],
											null,
											[["setVar:to:", "last Tile", ["readVariable", "tile #"]],
												["doIfElse",
													["=", ["readVariable", "tile #"], "0"],
													[["doIfElse",
															["<", ["readVariable", "index"], ["readVariable", "water"]],
															[["penColor:", -14277082]],
															[["penColor:", -10907909]]]],
													[["setVar:to:",
															"mat",
															["getLine:ofList:", ["+", 4, ["*", ["readVariable", "tile #"], ["readVariable", "TMul"]]], "_TileData"]],
														["doIfElse",
															["<", ["readVariable", "mat"], "30"],
															[["doIfElse",
																	["<", ["readVariable", "mat"], "20"],
																	[["doIfElse",
																			["<", ["readVariable", "mat"], "11"],
																			[["doIfElse",
																					["=", ["readVariable", "mat"], "5"],
																					[["doIfElse",
																							["<", ["readVariable", "tile #"], "178"],
																							[["penColor:", -16171839]],
																							[["penColor:", -188413]]]],
																					[["doIfElse",
																							["|",
																								["=", ["readVariable", "tile #"], "5"],
																								["&", [">", ["readVariable", "tile #"], "8"], ["<", ["readVariable", "tile #"], "19"]]],
																							[["penColor:", -14839739]],
																							[["penColor:", -4223121]]]]]],
																			[["penColor:", -10701038]]]],
																	[["doIfElse",
																			["=", ["readVariable", "mat"], "21"],
																			[["penColor:", -1841169]],
																			[["doIfElse",
																					["=", ["readVariable", "mat"], "22"],
																					[["penColor:", -8082696]],
																					[["doIfElse",
																							["=", ["readVariable", "mat"], "24"],
																							[["penColor:", -7188156]],
																							[["doIfElse",
																									["=", ["readVariable", "tile #"], "1"],
																									[["penColor:", -14886818]],
																									[["penColor:", -6853813]]]]]]]]]]]],
															[["doIfElse",
																	["<", ["readVariable", "mat"], "60"],
																	[["doIfElse",
																			["<", ["readVariable", "mat"], "40"],
																			[["penColor:", -3753625]],
																			[["doIfElse",
																					["<", ["readVariable", "mat"], "50"],
																					[["penColor:", -8355712]],
																					[["penColor:", -11248288]]]]]],
																	[["doIfElse",
																			["<", ["readVariable", "mat"], "70"],
																			[["penColor:", -1]],
																			[["penColor:", -4117717]]]]]]]]]]],
										["changeXposBy:", ["readVariable", "t"]],
										["changeVar:by:", "index", -1]]],
								["putPenUp"],
								["changeYposBy:", ["readVariable", "t"]]]]]],
				[48, 29, [["whenIReceive", "MAP"], ["call", "STAMP %n", 1], ["stopScripts", "all"]]]],
			"scriptComments": [[610.95, 807, 240, 99, true, 55, "Material - 1=Potion, 2=Summon, 10=Wood, 11=Veg, 20=dirt, 30=sand, 40=Stone, 50=Ore, 60=Metal, 63=Metal Chest, 70=Hellstone"]],
			"sounds": [{
					"soundName": "pop",
					"soundID": 0,
					"md5": "83a9787d4cb6f3b7632b4ddfebf74367.wav",
					"sampleCount": 258,
					"rate": 11025,
					"format": ""
				}],
			"costumes": [{
					"costumeName": "nothing",
					"baseLayerID": 477,
					"baseLayerMD5": "cd21514d0531fdffb22204e0ec5ed84a.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				}],
			"currentCostumeIndex": 0,
			"scratchX": -214.00000000000068,
			"scratchY": -139.9999999999999,
			"scale": 1,
			"direction": 90,
			"rotationStyle": "normal",
			"isDraggable": false,
			"indexInLibrary": 28,
			"visible": true,
			"spriteInfo": {
			}
		},
		{
			"target": "Map",
			"cmd": "getVar:",
			"param": "last Tile",
			"color": 15629590,
			"label": "Map: last Tile",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 350,
			"y": 188,
			"visible": false
		},
		{
			"target": "Map",
			"cmd": "getVar:",
			"param": "mat",
			"color": 15629590,
			"label": "Map: mat",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 373,
			"y": 246,
			"visible": false
		},
		{
			"target": "Map",
			"cmd": "getVar:",
			"param": "t",
			"color": 15629590,
			"label": "Map: t",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 49,
			"y": 180,
			"visible": false
		},
		{
			"target": "Map",
			"cmd": "getVar:",
			"param": "water",
			"color": 15629590,
			"label": "Map: water",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 321,
			"y": 140,
			"visible": false
		},
		{
			"target": "Cursor",
			"cmd": "getVar:",
			"param": "Mask",
			"color": 15629590,
			"label": "Cursor: Mask",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 35,
			"y": 17,
			"visible": false
		},
		{
			"objName": "Arms",
			"variables": [{
					"name": "player ID",
					"value": "1",
					"isPersistent": false
				},
				{
					"name": "i",
					"value": 1,
					"isPersistent": false
				},
				{
					"name": "len",
					"value": "0",
					"isPersistent": false
				},
				{
					"name": "x",
					"value": 246.81525263229187,
					"isPersistent": false
				},
				{
					"name": "y",
					"value": 124,
					"isPersistent": false
				},
				{
					"name": "costume",
					"value": 1,
					"isPersistent": false
				},
				{
					"name": "dx",
					"value": 2.8421709430404014e-14,
					"isPersistent": false
				},
				{
					"name": "dy",
					"value": -0.5000000000000213,
					"isPersistent": false
				},
				{
					"name": "named",
					"value": "griffpatch",
					"isPersistent": false
				},
				{
					"name": "Last Say",
					"value": "",
					"isPersistent": false
				}],
			"scripts": [[350.6,
					34.7,
					[["procDef", "clone", [], [], true],
						["setVar:to:", "player ID", "1"],
						["doRepeat",
							["-", ["getAttribute:of:", "@Max Players", "Multiplayer"], 1],
							[["changeVar:by:", "player ID", 1], ["createCloneOf", "_myself_"]]],
						["setVar:to:", "player ID", "1"]]],
				[45,
					236.95,
					[["whenIReceive", "animate"],
						["setVar:to:", "costume", ["getLine:ofList:", ["+", ["readVariable", "player ID"], 30], "@PlayerNames"]],
						["doIf", ["=", ["readVariable", "costume"], "-1"], [["hide"], ["stopScripts", "this script"]]],
						["doIfElse",
							["|",
								["=", ["readVariable", "player ID"], ["getAttribute:of:", "@Player ID", "Multiplayer"]],
								["&",
									["=", ["readVariable", "player ID"], "8"],
									["<", ["getAttribute:of:", "@Player ID", "Multiplayer"], "1"]]],
							[["setVar:to:", "x", ["getAttribute:of:", "x", "Player"]]],
							[["setVar:to:", "x", ["getLine:ofList:", ["+", ["readVariable", "player ID"], 10], "@PlayerNames"]]]],
						["setVar:to:", "y", ["getLine:ofList:", ["+", ["readVariable", "player ID"], 20], "@PlayerNames"]],
						["changeVar:by:", "costume", 1],
						["doIf",
							["not", ["=", ["readVariable", "costume"], ["costumeIndex"]]],
							[["lookLike:", ["readVariable", "costume"]]]],
						["gotoX:y:",
							["computeFunction:of:",
								"floor",
								["*", ["-", ["readVariable", "x"], ["readVariable", "SCROLL_X"]], ["readVariable", "TILE_SIZE"]]],
							["+",
								["computeFunction:of:",
									"floor",
									["*", ["-", ["readVariable", "y"], ["readVariable", "SCROLL_Y"]], ["readVariable", "TILE_SIZE"]]],
								37]],
						["doIfElse",
							["=", ["heading"], ["getLine:ofList:", ["+", ["readVariable", "player ID"], 70], "@PlayerNames"]],
							null,
							[["heading:", ["getLine:ofList:", ["+", ["readVariable", "player ID"], 70], "@PlayerNames"]]]],
						["show"]]],
				[716, 36, [["whenIReceive", "Hide All"], ["hide"]]],
				[42,
					40,
					[["whenIReceive", "Clone Sprites"],
						["hide"],
						["heading:", 90],
						["setSizeTo:", 300],
						["call", "clone"]]]],
			"sounds": [{
					"soundName": "pop",
					"soundID": 0,
					"md5": "83a9787d4cb6f3b7632b4ddfebf74367.wav",
					"sampleCount": 258,
					"rate": 11025,
					"format": ""
				}],
			"costumes": [{
					"costumeName": "arms_01",
					"baseLayerID": 478,
					"baseLayerMD5": "615710a052ae6b89487e91294a80693f.png",
					"bitmapResolution": 2,
					"rotationCenterX": 12,
					"rotationCenterY": 4
				},
				{
					"costumeName": "arms_02",
					"baseLayerID": 479,
					"baseLayerMD5": "1911252ed4bd8d3bd0d0e41847d289ca.png",
					"bitmapResolution": 2,
					"rotationCenterX": 14,
					"rotationCenterY": 12
				},
				{
					"costumeName": "arms_03",
					"baseLayerID": 480,
					"baseLayerMD5": "f6cd956f179cffd5db5f787a344bfd72.png",
					"bitmapResolution": 2,
					"rotationCenterX": 10,
					"rotationCenterY": 12
				},
				{
					"costumeName": "arms_04",
					"baseLayerID": 481,
					"baseLayerMD5": "fa80b4267c46e20855a9fe0624e103e2.png",
					"bitmapResolution": 2,
					"rotationCenterX": 10,
					"rotationCenterY": 4
				},
				{
					"costumeName": "arms_05",
					"baseLayerID": 482,
					"baseLayerMD5": "86e40370b8fd15fb34320d39fcc4c523.png",
					"bitmapResolution": 2,
					"rotationCenterX": 10,
					"rotationCenterY": 4
				},
				{
					"costumeName": "arms_06",
					"baseLayerID": 483,
					"baseLayerMD5": "c5ab5ad95f07536570f9675bc843b96f.png",
					"bitmapResolution": 2,
					"rotationCenterX": 14,
					"rotationCenterY": 12
				},
				{
					"costumeName": "arms_08",
					"baseLayerID": 484,
					"baseLayerMD5": "ee2f5aeba9aaf0f0911d609299519100.png",
					"bitmapResolution": 2,
					"rotationCenterX": 16,
					"rotationCenterY": 6
				},
				{
					"costumeName": "arms_10",
					"baseLayerID": 484,
					"baseLayerMD5": "ee2f5aeba9aaf0f0911d609299519100.png",
					"bitmapResolution": 2,
					"rotationCenterX": 16,
					"rotationCenterY": 6
				},
				{
					"costumeName": "arms_12",
					"baseLayerID": 485,
					"baseLayerMD5": "061322fee7c77aba8ae08fe28e149ea7.png",
					"bitmapResolution": 2,
					"rotationCenterX": 14,
					"rotationCenterY": 4
				},
				{
					"costumeName": "arms_14",
					"baseLayerID": 485,
					"baseLayerMD5": "061322fee7c77aba8ae08fe28e149ea7.png",
					"bitmapResolution": 2,
					"rotationCenterX": 14,
					"rotationCenterY": 4
				},
				{
					"costumeName": "arms_16",
					"baseLayerID": 486,
					"baseLayerMD5": "b84e72f0f860232a1d198fe661c29022.png",
					"bitmapResolution": 2,
					"rotationCenterX": 10,
					"rotationCenterY": 6
				},
				{
					"costumeName": "arms_18",
					"baseLayerID": 487,
					"baseLayerMD5": "87047a2005c72c701261b82d4c006e3d.png",
					"bitmapResolution": 2,
					"rotationCenterX": 12,
					"rotationCenterY": 4
				},
				{
					"costumeName": "arms_20",
					"baseLayerID": 488,
					"baseLayerMD5": "de702b1a19a9d45a1c9053ef6aff3e88.png",
					"bitmapResolution": 2,
					"rotationCenterX": 14,
					"rotationCenterY": 2
				},
				{
					"costumeName": "armB_01",
					"baseLayerID": 489,
					"baseLayerMD5": "5181bddecdf8a645b9c7efdd26eeaf94.png",
					"bitmapResolution": 2,
					"rotationCenterX": 12,
					"rotationCenterY": 4
				},
				{
					"costumeName": "armB_02",
					"baseLayerID": 490,
					"baseLayerMD5": "f0a25ebeff79c65ac05f673c13929e9c.png",
					"bitmapResolution": 2,
					"rotationCenterX": 14,
					"rotationCenterY": 12
				},
				{
					"costumeName": "armB_03",
					"baseLayerID": 491,
					"baseLayerMD5": "176991de3128a2ecc487806c17cf34c4.png",
					"bitmapResolution": 2,
					"rotationCenterX": 10,
					"rotationCenterY": 12
				},
				{
					"costumeName": "armB_04",
					"baseLayerID": 492,
					"baseLayerMD5": "fcb2da422fc328634f68091ed4acff86.png",
					"bitmapResolution": 2,
					"rotationCenterX": 10,
					"rotationCenterY": 4
				},
				{
					"costumeName": "armB_05",
					"baseLayerID": 493,
					"baseLayerMD5": "5a2ed2d1ea1da068e4727fa30b6d1ed2.png",
					"bitmapResolution": 2,
					"rotationCenterX": 10,
					"rotationCenterY": 4
				},
				{
					"costumeName": "armB_06",
					"baseLayerID": 494,
					"baseLayerMD5": "0987605a016d425fabc1d07f22533026.png",
					"bitmapResolution": 2,
					"rotationCenterX": 14,
					"rotationCenterY": 12
				},
				{
					"costumeName": "armB_08",
					"baseLayerID": 495,
					"baseLayerMD5": "88b6744a05ce32bc5c8f4a6c51e0abe7.png",
					"bitmapResolution": 2,
					"rotationCenterX": 16,
					"rotationCenterY": 6
				},
				{
					"costumeName": "armB_10",
					"baseLayerID": 495,
					"baseLayerMD5": "88b6744a05ce32bc5c8f4a6c51e0abe7.png",
					"bitmapResolution": 2,
					"rotationCenterX": 16,
					"rotationCenterY": 6
				},
				{
					"costumeName": "armB_12",
					"baseLayerID": 496,
					"baseLayerMD5": "1124e7e771418b2a03bdeaaab6731bf9.png",
					"bitmapResolution": 2,
					"rotationCenterX": 14,
					"rotationCenterY": 4
				},
				{
					"costumeName": "armB_14",
					"baseLayerID": 496,
					"baseLayerMD5": "1124e7e771418b2a03bdeaaab6731bf9.png",
					"bitmapResolution": 2,
					"rotationCenterX": 14,
					"rotationCenterY": 4
				},
				{
					"costumeName": "armB_16",
					"baseLayerID": 497,
					"baseLayerMD5": "822814ecacbede6cca0644d0406bad3e.png",
					"bitmapResolution": 2,
					"rotationCenterX": 10,
					"rotationCenterY": 6
				},
				{
					"costumeName": "armB_18",
					"baseLayerID": 498,
					"baseLayerMD5": "650d7e6baac7cbcfddd490f2e8f28e15.png",
					"bitmapResolution": 2,
					"rotationCenterX": 12,
					"rotationCenterY": 4
				},
				{
					"costumeName": "armB_20",
					"baseLayerID": 499,
					"baseLayerMD5": "85f055af8e17a2dca802b5498fe0d529.png",
					"bitmapResolution": 2,
					"rotationCenterX": 14,
					"rotationCenterY": 2
				}],
			"currentCostumeIndex": 0,
			"scratchX": 55,
			"scratchY": 16,
			"scale": 3,
			"direction": 90,
			"rotationStyle": "leftRight",
			"isDraggable": false,
			"indexInLibrary": 5,
			"visible": false,
			"spriteInfo": {
			}
		},
		{
			"objName": "Safe Chat",
			"variables": [{
					"name": "Filtered",
					"value": "\/load ",
					"isPersistent": false
				},
				{
					"name": "c",
					"value": " ",
					"isPersistent": false
				},
				{
					"name": "i",
					"value": 6,
					"isPersistent": false
				},
				{
					"name": "word",
					"value": "",
					"isPersistent": false
				},
				{
					"name": "isFiltered",
					"value": 0,
					"isPersistent": false
				},
				{
					"name": "Chatting",
					"value": "0",
					"isPersistent": false
				},
				{
					"name": "Tile Index",
					"value": 0,
					"isPersistent": false
				},
				{
					"name": "pre",
					"value": "",
					"isPersistent": false
				},
				{
					"name": "Tile Type",
					"value": "0",
					"isPersistent": false
				},
				{
					"name": "tmp",
					"value": "4. Material (1=Potion, 2=Summon, 10=Wood, 11=Veg, 20=dirt, 50=Ore, 60=Metal, 63=Metal Chest, 70=Hellstone, 100=Mob, 1001=Pick, 1002=Axe, 1003=Sword, 1004=Staff, 1098=Bucket, 1099=Net) ",
					"isPersistent": false
				},
				{
					"name": "canHelp",
					"value": "0",
					"isPersistent": false
				}],
			"lists": [{
					"listName": "Dictionary",
					"contents": ["the",
						"scratch",
						"and",
						"i",
						"a",
						"to",
						"was",
						"it",
						"in",
						"we",
						"they",
						"he",
						"my",
						"of",
						"on",
						"so",
						"went",
						"said",
						"had",
						"she",
						"there",
						"then",
						"but",
						"that",
						"got",
						"were",
						"is",
						"one",
						"you",
						"for",
						"when",
						"day",
						"her",
						"with",
						"at",
						"all",
						"up",
						"me",
						"out",
						"go",
						"mum",
						"his",
						"have",
						"get",
						"as",
						"came",
						"time",
						"back",
						"what",
						"because",
						"home",
						"called",
						"are",
						"like",
						"saw",
						"house",
						"not",
						"after",
						"going",
						"them",
						"him",
						"be",
						"this",
						"school",
						"down",
						"from",
						"dad",
						"did",
						"two",
						"into",
						"ran",
						"could",
						"do",
						"just",
						"next",
						"their",
						"some",
						"no",
						"about",
						"am",
						"can",
						"people",
						"will",
						"an",
						"didn't",
						"see",
						"off",
						"very",
						"our",
						"started",
						"once",
						"would",
						"big",
						"friends",
						"found",
						"who",
						"name",
						"put",
						"little",
						"other",
						"night",
						"over",
						"really",
						"i'm",
						"bed",
						"know",
						"by",
						"took",
						"looked",
						"away",
						"first",
						"girl",
						"if",
						"door",
						"it's",
						"made",
						"come",
						"where",
						"lived",
						"play",
						"your",
						"again",
						"now",
						"us",
						"look",
						"best",
						"morning",
						"later",
						"find",
						"or",
						"around",
						"good",
						"three",
						"want",
						"thought",
						"don't",
						"dog",
						"how",
						"car",
						"something",
						"way",
						"has",
						"only",
						"think",
						"here",
						"lots",
						"more",
						"game",
						"well",
						"told",
						"make",
						"new",
						"OK",
						"water",
						"room",
						"still",
						"until",
						"black",
						"family",
						"walked",
						"brother",
						"played",
						"upon",
						"boy",
						"everyone",
						"man",
						"ball",
						"couldn't",
						"ever",
						"too",
						"woke",
						"friend",
						"old",
						"five",
						"wanted",
						"dark",
						"fell",
						"fun",
						"happy",
						"heard",
						"long",
						"suddenly",
						"named",
						"asked",
						"inside",
						"last",
						"outside",
						"yes",
						"every",
						"through",
						"another",
						"never",
						"playing",
						"why",
						"help",
						"stopped",
						"even",
						"left",
						"that's",
						"world",
						"looking",
						"teacher",
						"turned",
						"been",
						"party",
						"place",
						"yelled",
						"before",
						"four",
						"hit",
						"scared",
						"things",
						"ready",
						"tried",
						"years",
						"also",
						"fast",
						"gave",
						"jumped",
						"head",
						"opened",
						"running",
						"dinner",
						"king",
						"sleep",
						"tell",
						"won",
						"coming",
						"screamed",
						"food",
						"while",
						"always",
						"kicked",
						"minutes",
						"each",
						"everything",
						"finally",
						"say",
						"tree",
						"which",
						"year",
						"hair",
						"hours",
						"let's",
						"lot",
						"rain",
						"work",
						"bad",
						"football",
						"front",
						"let",
						"life",
						"thing",
						"birthday",
						"cold",
						"days",
						"eat",
						"great",
						"red",
						"different",
						"eyes",
						"fish",
						"knew",
						"run",
						"take",
						"walking",
						"class",
						"getting",
						"girls",
						"monster",
						"person",
						"shot",
						"straight",
						"stuff",
						"happened",
						"love",
						"parents",
						"park",
						"right",
						"felt",
						"its",
						"nice",
						"sister",
						"soon",
						"week",
						"bought",
						"cool",
						"decided",
						"died",
						"Saturday",
						"today",
						"watched",
						"ate",
						"finished",
						"ground",
						"hear",
						"lunch",
						"much",
						"nothing",
						"shop",
						"Sunday",
						"whole",
						"animals",
						"beach",
						"boys",
						"favourite",
						"lost",
						"six",
						"any",
						"chocolate",
						"doing",
						"end",
						"hole",
						"kept",
						"noise",
						"noone",
						"small",
						"fire",
						"goal",
						"need",
						"having",
						"live",
						"replied",
						"stay",
						"story",
						"ten",
						"window",
						"dream",
						"give",
						"gun",
						"police",
						"quickly",
						"shopping",
						"store",
						"street",
						"top",
						"anything",
						"bit",
						"brown",
						"dragon",
						"few",
						"kids",
						"open",
						"same",
						"someone",
						"space",
						"under",
						"wait",
						"wasn't",
						"asleep",
						"blue",
						"excited",
						"hard",
						"light",
						"names",
						"white",
						"can't",
						"children",
						"evil",
						"forest",
						"green",
						"huge",
						"loved",
						"pet",
						"plane",
						"they're",
						"town",
						"weeks",
						"ago",
						"baby",
						"fairy",
						"goes",
						"gone",
						"i'll",
						"keep",
						"we're",
						"both",
						"cat",
						"footy",
						"grabbed",
						"hi",
						"most",
						"should",
						"show",
						"sky",
						"sound",
						"talking",
						"than",
						"together",
						"weekend",
						"across",
						"arrived",
						"bang",
						"beautiful",
						"dinosaurs",
						"hour",
						"kill",
						"myself",
						"sat",
						"giant",
						"hand",
						"i've",
						"land",
						"second",
						"TV",
						"being",
						"bus",
						"cars",
						"cave",
						"everywhere",
						"games",
						"landed",
						"money",
						"moved",
						"picked",
						"please",
						"set",
						"stop",
						"there's",
						"walk",
						"behind",
						"breakfast",
						"call",
						"Earth",
						"face",
						"horse",
						"kitchen",
						"own",
						"queen",
						"real",
						"rest",
						"sun",
						"team",
						"these",
						"trying",
						"you're",
						"comes",
						"dead",
						"guy",
						"half",
						"high",
						"Mr",
						"nearly",
						"onto",
						"pretty",
						"puppy",
						"ride",
						"turn",
						"used",
						"watch",
						"dogs",
						"flew",
						"floor",
						"happily",
						"killed",
						"lady",
						"middle",
						"movie",
						"quarter",
						"rock",
						"ship",
						"side",
						"storm",
						"toilet",
						"basketball",
						"caught",
						"centre",
						"crazy",
						"eating",
						"fight",
						"hello",
						"leave",
						"rocket",
						"saying",
						"says",
						"scary",
						"seen",
						"seven",
						"shouted",
						"sorry",
						"tomorrow",
						"twenty",
						"already",
						"bag",
						"book",
						"city",
						"cute",
						"else",
						"except",
						"Friday",
						"friend's",
						"he's",
						"hill",
						"jump",
						"lightning",
						"luck",
						"paper",
						"pink",
						"points",
						"sure",
						"air",
						"bigger",
						"boat",
						"camp",
						"corner",
						"eight",
						"fly",
						"flying",
						"grew",
						"knocked",
						"must",
						"oh",
						"past",
						"swimming",
						"toy",
						"voice",
						"wet",
						"win",
						"became",
						"better",
						"coach",
						"colour",
						"cousin",
						"dance",
						"done",
						"dragons",
						"hope",
						"kind",
						"liked",
						"making",
						"many",
						"mother",
						"pool",
						"power",
						"pushed",
						"rang",
						"screaming",
						"sick",
						"strange",
						"trouble",
						"war",
						"weird",
						"wind",
						"writing",
						"cut",
						"deep",
						"dollars",
						"dressed",
						"ended",
						"enough",
						"far",
						"forever",
						"gets",
						"goals",
						"island",
						"kid",
						"late",
						"near",
						"passed",
						"pets",
						"piece",
						"plan",
						"race",
						"realised",
						"ring",
						"secret",
						"she's",
						"shops",
						"siren",
						"sitting",
						"snow",
						"stayed",
						"strong",
						"tall",
						"thank",
						"what's",
						"without",
						"yesterday",
						"alien",
						"ask",
						"attack",
						"bike",
						"buy",
						"cake",
						"care",
						"closer",
						"clothes",
						"clouds",
						"couple",
						"cried",
						"dirt",
						"disappeared",
						"drink",
						"everybody",
						"farm",
						"free",
						"full",
						"hotel",
						"idea",
						"instead",
						"jungle",
						"match",
						"mud",
						"nobody",
						"remember",
						"road",
						"scream",
						"sea",
						"start",
						"though",
						"use",
						"village",
						"waiting",
						"wrong",
						"zoo",
						"amazing",
						"anyway",
						"bush",
						"does",
						"drove",
						"famous",
						"feed",
						"hot",
						"human",
						"kitten",
						"lights",
						"map",
						"maybe",
						"monkey",
						"Mrs",
						"number",
						"phone",
						"princess",
						"sight",
						"step",
						"sudden",
						"super",
						"those",
						"tired",
						"training",
						"trees",
						"watching",
						"aliens",
						"almost",
						"believe",
						"bird",
						"castle",
						"destroy",
						"doesn't",
						"dropped",
						"eggs",
						"father",
						"fighting",
						"holiday",
						"horrible",
						"job",
						"legs",
						"loud",
						"magic",
						"men",
						"month",
						"moon",
						"music",
						"needed",
						"nowhere",
						"packed",
						"pants",
						"pigs",
						"popcorn",
						"robot",
						"sad",
						"saved",
						"seconds",
						"sheep",
						"shoes",
						"slept",
						"sports",
						"stick",
						"surprise",
						"talk",
						"third",
						"thirty",
						"threw",
						"thunder",
						"toys",
						"try",
						"warm",
						"wow",
						"airport",
						"awhile",
						"bedroom",
						"bell",
						"box",
						"bridge",
						"broken",
						"cats",
						"computer",
						"course",
						"crash",
						"early",
						"fall",
						"garden",
						"guys",
						"heaps",
						"himself",
						"knife",
						"least",
						"luckily",
						"met",
						"metres",
						"missing",
						"mouse",
						"mummy",
						"news",
						"owner",
						"pieces",
						"probably",
						"save",
						"sent",
						"shut",
						"soccer",
						"stairs",
						"stepped",
						"stood",
						"tiger",
						"times",
						"wear",
						"won't",
						"working",
						"young",
						"afternoon",
						"along",
						"answer",
						"answered",
						"anyone",
						"bark",
						"bear",
						"biggest",
						"birds",
						"board",
						"cage",
						"chair",
						"chest",
						"destroyed",
						"doll",
						"draw",
						"goodbye",
						"helped",
						"hey",
						"humans",
						"jail",
						"kick",
						"likes",
						"line",
						"looks",
						"lovely",
						"million",
						"minute",
						"Miss",
						"Monday",
						"normal",
						"oval",
						"pig",
						"point",
						"prince",
						"pulled",
						"reached",
						"river",
						"roof",
						"since",
						"sit",
						"sleeping",
						"special",
						"sunny",
						"table",
						"themselves",
						"tiny",
						"wall",
						"whispered",
						"wish",
						"beat",
						"boss",
						"break",
						"bright",
						"broke",
						"case",
						"catch",
						"close",
						"closed",
						"competition",
						"cricket",
						"drop",
						"egg",
						"fat",
						"feet",
						"fifty",
						"gold",
						"grass",
						"hands",
						"happen",
						"hide",
						"led",
						"lives",
						"meet",
						"might",
						"missed",
						"months",
						"netball",
						"nine",
						"present",
						"reading",
						"safe",
						"score",
						"snake",
						"sport",
						"stand",
						"standing",
						"starting",
						"stuck",
						"tea",
						"thinking",
						"ugly",
						"upstairs",
						"wake",
						"weren't",
						"wings",
						"wood",
						"worked",
						"wouldn't",
						"against",
						"alpaca",
						"angry",
						"anymore",
						"Australia",
						"bags",
						"born",
						"bread",
						"bring",
						"brought",
						"built",
						"bushes",
						"changed",
						"chasing",
						"chicken",
						"chose",
						"classroom",
						"clean",
						"cow",
						"cross",
						"dad's",
						"dear",
						"diamond",
						"dinosaur",
						"downstairs",
						"dwarf",
						"field",
						"final",
						"followed",
						"forgot",
						"guess",
						"happening",
						"haunted",
						"heads",
						"hopped",
						"houses",
						"hungry",
						"hurt",
						"jelly",
						"kangaroo",
						"makes",
						"mansion",
						"massive",
						"maths",
						"motorbike",
						"move",
						"movies",
						"nose",
						"orange",
						"pizza",
						"planet",
						"racing",
						"rocks",
						"sand",
						"sing",
						"sleepover",
						"smell",
						"songs",
						"spider",
						"teddy",
						"treasure",
						"trip",
						"truck",
						"wave",
						"wonder",
						"yelling",
						"yet",
						"actually",
						"add",
						"allowed",
						"arm",
						"armour",
						"arms",
						"army",
						"attacked",
						"babies",
						"backyard",
						"bathroom",
						"blood",
						"bored",
						"brother's",
						"build",
						"building",
						"bully",
						"circus",
						"control",
						"cream",
						"cupboard",
						"dancing",
						"devil",
						"driving",
						"flash",
						"fold",
						"foot",
						"ghost",
						"haven't",
						"hero",
						"hid",
						"hospital",
						"hundred",
						"ice",
						"invisible",
						"journey",
						"jumping",
						"knock",
						"knows",
						"lake",
						"learnt",
						"leg",
						"lesson",
						"longer",
						"married",
						"mouth",
						"mum's",
						"pitch",
						"punched",
						"puppies",
						"quiet",
						"rabbit",
						"raining",
						"read",
						"rich",
						"ripped",
						"robber",
						"round",
						"search",
						"short",
						"skinny",
						"sometimes",
						"son",
						"song",
						"sounded",
						"stars",
						"stole",
						"struck",
						"teachers",
						"terrible",
						"towards",
						"track",
						"underground",
						"word",
						"yellow",
						"able",
						"alive",
						"amulet",
						"annoying",
						"bikes",
						"blanket",
						"body",
						"bowling",
						"brothers",
						"cabin",
						"captain",
						"cattle",
						"charm",
						"chips",
						"circle",
						"cottage",
						"country",
						"crashed",
						"creatures",
						"doctor",
						"doorbell",
						"escape",
						"escaped",
						"exploded",
						"eye",
						"fairies",
						"falling",
						"feel",
						"feeling",
						"flooded",
						"following",
						"forget",
						"forward",
						"gate",
						"hall",
						"heavy",
						"laptop",
						"laughed",
						"living",
						"locked",
						"lounge",
						"lucky",
						"May",
						"mind",
						"mini",
						"monsters",
						"note",
						"ones",
						"others",
						"pack",
						"popular",
						"presents",
						"rides",
						"rode",
						"rooms",
						"rushed",
						"shelter",
						"showed",
						"sign",
						"size",
						"slipped",
						"snakes",
						"spelling",
						"star",
						"stared",
						"starts",
						"steps",
						"tap",
						"teased",
						"test",
						"thousand",
						"toast",
						"trampoline",
						"travelled",
						"tripped",
						"tunnel",
						"waited",
						"wants",
						"waves",
						"Wednesday",
						"west",
						"winning",
						"write",
						"adventure",
						"afraid",
						"appeared",
						"art",
						"babysitter",
						"balloons",
						"beds",
						"bone",
						"bones",
						"bounced",
						"busy",
						"button",
						"change",
						"chase",
						"check",
						"climbed",
						"clock",
						"clown",
						"couch",
						"crashing",
						"creature",
						"crying",
						"cup",
						"dangerous",
						"death",
						"diary",
						"ding",
						"dresses",
						"drive",
						"ear",
						"fashion",
						"finish",
						"fit",
						"fluffy",
						"fox",
						"funny",
						"glass",
						"golden",
						"grey",
						"herself",
						"holding",
						"homework",
						"i'd",
						"isn't",
						"kite",
						"kittens",
						"knight",
						"ladybug",
						"learn",
						"leaves",
						"letter",
						"lift",
						"low",
						"mad",
						"marked",
						"meeting",
						"mess",
						"midnight",
						"mirror",
						"moment",
						"mountain",
						"museum",
						"neighbour",
						"nest",
						"ocean",
						"o'clock",
						"ordered",
						"packing",
						"pass",
						"pay",
						"peanuts",
						"pharaoh",
						"pick",
						"planets",
						"problem",
						"purple",
						"push",
						"putting",
						"rabbits",
						"reason",
						"robots",
						"rope",
						"shape",
						"shells",
						"singers",
						"smash",
						"smoke",
						"snack",
						"somewhere",
						"sort",
						"speed",
						"spent",
						"staying",
						"stream",
						"swam",
						"takes",
						"taking",
						"tasted",
						"teach",
						"teeth",
						"telling",
						"tent",
						"tonight",
						"torch",
						"tourists",
						"train",
						"TRUE",
						"Tuesday",
						"turning",
						"twelve",
						"uncle",
						"unicorn",
						"upset",
						"versus",
						"warrior",
						"wore",
						"worried",
						"yell",
						"accidentally",
						"agreed",
						"alone",
						"animal",
						"asking",
						"barn",
						"bears",
						"blew",
						"boy's",
						"bullies",
						"burning",
						"burnt",
						"calm",
						"camera",
						"champ",
						"chance",
						"cheese",
						"choose",
						"cleaning",
						"climb",
						"club",
						"cousin's",
						"crabs",
						"customers",
						"delicious",
						"desert",
						"dong",
						"dreamt",
						"dummy",
						"eaten",
						"evening",
						"explore",
						"extremely",
						"falls",
						"fantastic",
						"fine",
						"fishing",
						"flies",
						"flowers",
						"fountain",
						"fourteen",
						"freaky",
						"grade",
						"grand",
						"grandma",
						"grow",
						"ham",
						"hardly",
						"hat",
						"held",
						"helicopter",
						"holes",
						"holidays",
						"horses",
						"hotdog",
						"I",
						"July",
						"jumps",
						"key",
						"kicking",
						"kinds",
						"laughing",
						"lead",
						"leaving",
						"library",
						"lion",
						"lollies",
						"lonely",
						"lord",
						"loves",
						"machine",
						"main",
						"mates",
						"may",
						"mermaid",
						"meteor",
						"miles",
						"monkeys",
						"mother's",
						"normally",
						"oldest",
						"peaceful",
						"pen",
						"penguins",
						"playful",
						"playground",
						"poor",
						"pop",
						"pressed",
						"project",
						"promise",
						"quick",
						"raced",
						"rat",
						"recess",
						"remembered",
						"riding",
						"rings",
						"roll",
						"scare",
						"science",
						"scientist",
						"scores",
						"season",
						"seat",
						"seemed",
						"shadow",
						"shed",
						"shoe",
						"shooting",
						"singer",
						"sink",
						"sister's",
						"skirts",
						"slimy",
						"slowly",
						"snail",
						"soft",
						"stage",
						"staring",
						"stormy",
						"studied",
						"such",
						"sushi",
						"sword",
						"tail",
						"tells",
						"tennis",
						"terriers",
						"thick",
						"thirteen",
						"throw",
						"tickets",
						"transformer",
						"trust",
						"umpire",
						"upside",
						"vine",
						"wearing",
						"we'll",
						"wondered",
						"woods",
						"wrote",
						"youngest",
						"yuk",
						"zombies",
						"adults",
						"aeroplane",
						"alright",
						"answers",
						"ant",
						"anywhere",
						"apple",
						"aunty",
						"awesome",
						"bar",
						"battle",
						"bedtime",
						"beep",
						"between",
						"boots",
						"bottom",
						"bull",
						"butter",
						"cabins",
						"careful",
						"carefully",
						"championship",
						"cheeky",
						"cleaned",
						"cliff",
						"coat",
						"collar",
						"computers",
						"confused",
						"cooked",
						"cops",
						"cousins",
						"crowd",
						"cry",
						"crystals",
						"cubby",
						"danced",
						"daughter",
						"deeper",
						"digging",
						"dress",
						"drew",
						"drops",
						"during",
						"dwarfs",
						"Easter",
						"either",
						"entrance",
						"eventually",
						"fact",
						"faint",
						"fainted",
						"flips",
						"flower",
						"follow",
						"footsteps",
						"form",
						"forty",
						"fright",
						"fruit",
						"fuel",
						"fur",
						"garage",
						"gardening",
						"gates",
						"ghostly",
						"goblins",
						"government",
						"grab",
						"growing",
						"guns",
						"hanging",
						"helping",
						"hop",
						"humungous",
						"hurried",
						"iguana",
						"interesting",
						"jewellery",
						"joy",
						"jumper",
						"June",
						"lands",
						"large",
						"laser",
						"lawn",
						"leader",
						"lips",
						"listen",
						"lollipop",
						"lunchtime",
						"mail",
						"meat",
						"metre",
						"neck",
						"nightmare",
						"opening",
						"paint",
						"palace",
						"pancakes",
						"passage",
						"pasta",
						"path",
						"peach",
						"perfect",
						"photo",
						"picture",
						"pile",
						"places",
						"plants",
						"plays",
						"pocket",
						"pools",
						"possum",
						"poured",
						"powerful",
						"principal",
						"pump",
						"rag",
						"recipe",
						"roar",
						"rolled",
						"ruckman",
						"ruled",
						"rumble",
						"sang",
						"sausage",
						"scored",
						"scratching",
						"screams",
						"sell",
						"shaking",
						"sheriff",
						"shining",
						"ships",
						"sighed",
						"silence",
						"silent",
						"simulation",
						"chances",
						"skate",
						"skeleton",
						"skin",
						"sleepy",
						"slug",
						"smelt",
						"smile",
						"sorts",
						"spend",
						"split",
						"spooky",
						"spot",
						"station",
						"sticks",
						"stomach",
						"stone",
						"summer",
						"surfer",
						"swim",
						"taken",
						"teams",
						"thin",
						"thrown",
						"thump",
						"Thursday",
						"totally",
						"touched",
						"trolls",
						"trophy",
						"twice",
						"valley",
						"villains",
						"volcano",
						"weather",
						"weenie",
						"welcome",
						"where's",
						"wife",
						"wild",
						"windows",
						"wing",
						"wondering",
						"woof",
						"worse",
						"worst",
						"wrapped",
						"you've",
						"above",
						"adopted",
						"agent",
						"ahead",
						"aisles",
						"alpaca's",
						"annoyed",
						"attic",
						"aunty's",
						"awake",
						"awoke",
						"banned",
						"bat",
						"bite",
						"blaster",
						"blizzard",
						"bomb",
						"booked",
						"books",
						"boom",
						"brain",
						"breath",
						"breathe",
						"brush",
						"bubbles",
						"buildings",
						"bullets",
						"bunny",
						"burgers",
						"bye",
						"captured",
						"chairs",
						"checked",
						"choc",
						"click",
						"clothing",
						"cloud",
						"clowns",
						"coloured",
						"colourful",
						"complained",
						"cook",
						"copper",
						"court",
						"courts",
						"covered",
						"crawled",
						"crime",
						"curiously",
						"cutest",
						"darkness",
						"deer",
						"diamonds",
						"dishes",
						"distance",
						"dog's",
						"dreams",
						"driver",
						"ducks",
						"earthquake",
						"edge",
						"elephant",
						"enormous",
						"exactly",
						"expected",
						"factory",
						"fed",
						"fence",
						"fifth",
						"filled",
						"fingers",
						"fought",
						"fridge",
						"frightened",
						"frozen",
						"gang",
						"giving",
						"glad",
						"gloomy",
						"gnome",
						"golf",
						"gravity",
						"guard",
						"gum",
						"hamburger",
						"hamstring",
						"hang",
						"hated",
						"healthy",
						"heap",
						"homes",
						"hoped",
						"hugged",
						"hurting",
						"husband",
						"icecream",
						"jam",
						"jeans",
						"jobs",
						"joker",
						"kilometres",
						"knee",
						"knocking",
						"lab",
						"ladder",
						"languages",
						"laugh",
						"lily",
						"list",
						"lit",
						"lock",
						"lose",
						"magical",
						"mark",
						"master",
						"meant",
						"metal",
						"middles",
						"mist",
						"motor",
						"moving",
						"mums",
						"mystery",
						"necklace",
						"north",
						"noticed",
						"office",
						"older",
						"orphanage",
						"ostrich",
						"painted",
						"palm",
						"pansy",
						"part",
						"passes",
						"periods",
						"pictures",
						"pin",
						"planning",
						"plate",
						"player",
						"players",
						"pointed",
						"portal",
						"potion",
						"powers",
						"practise",
						"practised",
						"primary",
						"probe",
						"problems",
						"protect",
						"proud",
						"puzzle",
						"pyjamas",
						"question",
						"questions",
						"quit",
						"quite",
						"rained",
						"rainy",
						"random",
						"recognised",
						"rescue",
						"revenge",
						"rid",
						"rivers",
						"roared",
						"robbers",
						"rollercoaster",
						"rolling",
						"rough",
						"routine",
						"rule",
						"sandwich",
						"scarecrows",
						"scene",
						"shone",
						"sir",
						"sisters",
						"skateboard",
						"ski",
						"slaves",
						"smashed",
						"sneak",
						"sneaked",
						"socks",
						"sold",
						"solve",
						"spare",
						"speaker",
						"spotted",
						"sprint",
						"spun",
						"spy",
						"square",
						"squirted",
						"stacked",
						"steal",
						"steep",
						"stopping",
						"storey",
						"string",
						"students",
						"subject",
						"sugar",
						"superman",
						"supposed",
						"surfboard",
						"surfing",
						"surprised",
						"surrounded",
						"sweet",
						"talked",
						"taxi",
						"tear",
						"temple",
						"terrified",
						"thanks",
						"theme",
						"thinks",
						"tied",
						"toe",
						"tower",
						"traffic",
						"travel",
						"triangle",
						"trick",
						"tube",
						"twin",
						"types",
						"unfortunately",
						"using",
						"usually",
						"video",
						"visited",
						"voices",
						"walks",
						"wardrobe",
						"wars",
						"wash",
						"web",
						"wedding",
						"werewolf",
						"whistle",
						"whistling",
						"whoever",
						"wins",
						"winter",
						"wishes",
						"witch",
						"woken",
						"woman",
						"words",
						"yard",
						"zone",
						"accident",
						"actor",
						"adult",
						"age",
						"ages",
						"ah",
						"aimed",
						"amazed",
						"ancient",
						"ankle",
						"ants",
						"aren't",
						"arrive",
						"attacking",
						"backwards",
						"badly",
						"balcony",
						"bananas",
						"banger",
						"banging",
						"barked",
						"barking",
						"basket",
						"batteries",
						"bay",
						"beast",
						"begged",
						"belongings",
						"belt",
						"bench",
						"beside",
						"bet",
						"bin",
						"blonde",
						"blow",
						"bogey",
						"bombs",
						"borax",
						"boyfriend",
						"bracelet",
						"branch",
						"breathing",
						"breeze",
						"brushed",
						"bucket",
						"bunch",
						"calling",
						"calls",
						"camping",
						"cards",
						"caring",
						"carrot",
						"ceiling",
						"celebrate",
						"ceremony",
						"challenge",
						"chased",
						"chat",
						"cheer",
						"cheering",
						"chewing",
						"choice",
						"chopped",
						"Christmas",
						"cities",
						"classrooms",
						"clay",
						"clinic",
						"clone",
						"closet",
						"coffee",
						"collect",
						"colours",
						"comfortable",
						"compass",
						"complete",
						"concert",
						"consoles",
						"contact",
						"continued",
						"cover",
						"cracked",
						"crane",
						"crate",
						"crater",
						"creak",
						"creative",
						"creek",
						"creepy",
						"crows",
						"crystal",
						"cuddly",
						"damage",
						"defeat",
						"defeated",
						"destroying",
						"detention",
						"dialled",
						"dig",
						"directions",
						"dirty",
						"disco",
						"dolphins",
						"doors",
						"dots",
						"doughnuts",
						"drinking",
						"duel",
						"duty",
						"dying",
						"earlier",
						"ears",
						"east",
						"easy",
						"eclair",
						"eerie",
						"effect",
						"elevator",
						"eleven",
						"enemies",
						"enemy",
						"engines",
						"enjoyed",
						"enter",
						"erupted",
						"excitement",
						"exciting",
						"explain",
						"explained",
						"explorer",
						"exploring",
						"fear",
						"fifteen",
						"finds",
						"fired",
						"firstly",
						"fixed",
						"flashed",
						"flushed",
						"foods",
						"force",
						"forgave",
						"fourth",
						"frame",
						"friendly",
						"funeral",
						"galaxy",
						"garbage",
						"gasped",
						"gear",
						"ghosts",
						"given",
						"gives",
						"glasses",
						"glow",
						"glowed",
						"gong",
						"goodnight",
						"goods",
						"grandparents",
						"greeted",
						"grin",
						"group",
						"grown",
						"guarding",
						"guards",
						"guy's",
						"gym",
						"handball",
						"happens",
						"happiest",
						"happiness",
						"hardest",
						"hare",
						"hasn't",
						"hay",
						"heading",
						"headquarters",
						"heart",
						"heaven",
						"helmet",
						"heroes",
						"hiding",
						"hiking",
						"hired",
						"history",
						"hold",
						"honey",
						"hoping",
						"horror",
						"hovering",
						"hurry",
						"icecreams",
						"icing",
						"important",
						"impossible",
						"internet",
						"invasion",
						"invented",
						"items",
						"jet",
						"jewel",
						"joined",
						"kangaroos",
						"kennel",
						"kettle",
						"kicks",
						"known",
						"laid",
						"landing",
						"language",
						"laughter",
						"lava",
						"lay",
						"leading",
						"learning",
						"ledge",
						"lemon",
						"lemonade",
						"lessons",
						"lets",
						"liquid",
						"listening",
						"losing",
						"louder",
						"loudly",
						"loving",
						"lunchbox",
						"lying",
						"machines",
						"magnificent",
						"mall",
						"managed",
						"market",
						"marks",
						"marry",
						"mascot",
						"medal",
						"medicine",
						"melting",
						"meteorite",
						"miaow",
						"mighty",
						"mine",
						"miss",
						"moaned",
						"monkey's",
						"motorbikes",
						"mountains",
						"mumbled",
						"murder",
						"murdered",
						"mysterious",
						"needs",
						"neighbourhood",
						"newspaper",
						"nicer",
						"nicest",
						"none",
						"notice",
						"oil",
						"opens",
						"order",
						"ordinary",
						"ours",
						"oven",
						"overboard",
						"paddled",
						"paddock",
						"pair",
						"paradise",
						"parks",
						"parts",
						"patch",
						"paws",
						"pens",
						"per",
						"picnic",
						"pilot",
						"ping",
						"pirates",
						"pistol",
						"placed",
						"plain",
						"plank",
						"plant",
						"platform",
						"poison",
						"pole",
						"pong",
						"pony",
						"popped",
						"post",
						"posters",
						"powder",
						"practice",
						"private",
						"production",
						"pull",
						"pup",
						"puzzles",
						"quiz",
						"racers",
						"radio",
						"raft",
						"rainbow",
						"rains",
						"rats",
						"reinforcements",
						"reloaded",
						"repeated",
						"rhinoceros",
						"rider",
						"rocked",
						"rockpool",
						"rooks",
						"rooster",
						"ruck",
						"ruffle",
						"rush",
						"sale",
						"saturday",
						"sauce",
						"scar",
						"scariest",
						"scent",
						"schools",
						"scoop",
						"scooter",
						"searched",
						"seek",
						"seems",
						"seniors",
						"seventh",
						"shack",
						"shark",
						"shine",
						"shivered",
						"shocked",
						"shoot",
						"shorter",
						"shorts",
						"shotgun",
						"shots",
						"shouldn't",
						"shovel",
						"shower",
						"showing",
						"sides",
						"signs",
						"singing",
						"single",
						"sketch",
						"skiing",
						"skip",
						"slide",
						"sling",
						"smack",
						"smartest",
						"smooth",
						"soaked",
						"somebody",
						"sounds",
						"spaghetti",
						"sparkling",
						"sparkly",
						"spell",
						"spilt",
						"spinning",
						"spiral",
						"splashing",
						"spotty",
						"spray",
						"spread",
						"squished",
						"stadium",
						"staff",
						"stands",
						"state",
						"stolen",
						"stores",
						"stranger",
						"strike",
						"stripe",
						"stripes",
						"strongest",
						"struggled",
						"sty",
						"sucked",
						"suggested",
						"suit",
						"sunlight",
						"superheroes",
						"swing",
						"switch",
						"tables",
						"tapped",
						"teacher's",
						"tears",
						"teddies",
						"thief",
						"thousands",
						"throwing",
						"tie",
						"tigers",
						"tin",
						"tiring",
						"titanium",
						"tops",
						"tournament",
						"tracks",
						"transformed",
						"transported",
						"trapped",
						"trenches",
						"tress",
						"triple",
						"troll",
						"trucks",
						"tshirt",
						"turns",
						"type",
						"unpacked",
						"usual",
						"vampires",
						"vegetable",
						"vicious",
						"view",
						"visit",
						"vulture",
						"waist",
						"washed",
						"waste",
						"weapon",
						"weeds",
						"whale",
						"whatever",
						"whenever",
						"whilst",
						"whimpered",
						"winds",
						"wished",
						"wishing",
						"wolf",
						"wonderful",
						"wooden",
						"worm",
						"worry",
						"wreck",
						"you'll",
						"yum",
						"yummy",
						"zero",
						"zombie",
						"aboard",
						"absolutely",
						"academy",
						"acid",
						"acids",
						"action",
						"activated",
						"ad",
						"admit",
						"aerobics",
						"agree",
						"alley",
						"although",
						"ambulance",
						"amount",
						"amusement",
						"ape",
						"apostles",
						"apparently",
						"apples",
						"arcade",
						"area",
						"arena",
						"arriving",
						"ash",
						"asteroid",
						"astronaut",
						"attention",
						"attraction",
						"August",
						"aunt",
						"awful",
						"background",
						"badge",
						"balled",
						"balls",
						"banana",
						"banged",
						"barely",
						"bars",
						"basement",
						"basically",
						"bath",
						"bats",
						"battleground",
						"beasts",
						"beauty",
						"become",
						"becomes",
						"beer",
						"began",
						"begging",
						"beginning",
						"begins",
						"begun",
						"behaviour",
						"bend",
						"beneath",
						"bent",
						"bill",
						"blacker",
						"blamed",
						"blankets",
						"blast",
						"blind",
						"blinked",
						"block",
						"blowing",
						"blows",
						"boarding",
						"boards",
						"boats",
						"bobcat",
						"boiling",
						"bonfire",
						"boost",
						"boot",
						"bottle",
						"bounces",
						"bound",
						"bow",
						"boxing",
						"brave",
						"breed",
						"bridle",
						"brilliant",
						"bringing",
						"bubble",
						"budgies",
						"bump",
						"bumped",
						"bumps",
						"bumpy",
						"burned",
						"burst",
						"butterfly",
						"calmly",
						"canoes",
						"capital",
						"caravan",
						"cardboard",
						"career",
						"carnivore",
						"carnivores",
						"carpet",
						"carried",
						"carry",
						"cash",
						"caterpillar",
						"caused",
						"cavern",
						"cell",
						"cents",
						"cereal",
						"certainly",
						"chamber",
						"champion",
						"changing",
						"channel",
						"cheeks",
						"chewed",
						"chick",
						"chickens",
						"child",
						"children's",
						"chill",
						"chin",
						"chip",
						"choir",
						"chop",
						"chubby",
						"clear",
						"clones",
						"clump",
						"cockatiels",
						"cockroach",
						"code",
						"collected",
						"concentrate",
						"condition",
						"confidence",
						"controller",
						"convenient",
						"cookie",
						"cookies",
						"cordial",
						"cornflakes",
						"cost",
						"costume",
						"cosy",
						"cough",
						"counted",
						"countries",
						"courage",
						"cows",
						"crack",
						"crawling",
						"creaked",
						"creep",
						"crept",
						"crow",
						"crowding",
						"cub",
						"cubs",
						"cups",
						"cure",
						"curious",
						"curled",
						"curved",
						"cushions",
						"cutting",
						"dads",
						"dam",
						"dared",
						"daring",
						"descending",
						"designer",
						"designing",
						"difference",
						"disappointed",
						"disguised",
						"disgusting",
						"display",
						"dogs'",
						"dollar",
						"dolls",
						"doorway",
						"doughnut",
						"dragon's",
						"drama",
						"dreaming",
						"drinks",
						"dripping",
						"droid",
						"dropping",
						"droppings",
						"ducked",
						"eagles",
						"earrings",
						"eats",
						"eighteen",
						"elbow",
						"electric",
						"elephants",
						"embarrassing",
						"empty",
						"enchanted",
						"engine",
						"English",
						"enjoy",
						"enjoying",
						"entire",
						"ere",
						"estate",
						"evacuate",
						"example",
						"excitedly",
						"excuse",
						"executed",
						"exhausting",
						"experiment",
						"exploration",
						"explosion",
						"expression",
						"extinct",
						"extra",
						"faces",
						"fairyland",
						"fake",
						"fame",
						"faraway",
						"fetch",
						"finding",
						"firemen",
						"fireworks",
						"fitting",
						"fix",
						"fixing",
						"flames",
						"flip",
						"floating",
						"flu",
						"foggy",
						"freak",
						"freaked",
						"freedom",
						"freeze",
						"freezer",
						"frog",
						"frosty",
						"froze",
						"fully",
						"furry",
						"fury",
						"future",
						"gather",
						"gentle",
						"gigantic",
						"giraffes",
						"girlfriend",
						"glittering",
						"goats",
						"goodbyes",
						"gorgeous",
						"gothic",
						"grandma's",
						"grant",
						"grave",
						"gravitational",
						"greatest",
						"grenade",
						"groaned",
						"groove",
						"grounded",
						"growl",
						"grubs",
						"guinea",
						"guitar",
						"hailing",
						"hairy",
						"handed",
						"handle",
						"handstand",
						"hares",
						"harm",
						"hatch",
						"hates",
						"hats",
						"heat",
						"heavier",
						"height",
						"helium",
						"he'll",
						"herbivores",
						"here's",
						"hermit",
						"hideous",
						"higher",
						"highest",
						"hills",
						"hip",
						"hits",
						"hitting",
						"hobbies",
						"hooked",
						"horn",
						"hose",
						"hostel",
						"hover",
						"howling",
						"hug",
						"hung",
						"hunk",
						"hunters",
						"ignore",
						"ignored",
						"imagined",
						"imagining",
						"immediately",
						"including",
						"information",
						"ingredients",
						"initials",
						"insane",
						"insects",
						"interested",
						"interview",
						"invent",
						"invention",
						"investigate",
						"invite",
						"jacket",
						"jams",
						"jar",
						"jellybean",
						"jellyfish",
						"juice",
						"keeps",
						"kidnapped",
						"killer",
						"killing",
						"kiss",
						"knives",
						"lair",
						"lamb",
						"lambs",
						"lane",
						"lap",
						"laps",
						"laughs",
						"leaf",
						"lean",
						"leggings",
						"lemons",
						"lifetime",
						"lifted",
						"lighting",
						"likely",
						"lines",
						"literacy",
						"loads",
						"locker",
						"log",
						"longest",
						"loose",
						"lottery",
						"luggage",
						"lungs",
						"maker",
						"mammals",
						"manage",
						"mane",
						"manual",
						"march",
						"mash",
						"massage",
						"matches",
						"mate",
						"matter",
						"maze",
						"meal",
						"means",
						"mechanic",
						"medals",
						"message",
						"miaowed",
						"miaows",
						"mice",
						"milk",
						"miner",
						"mirrors",
						"mission",
						"mix",
						"mixed",
						"mixture",
						"monday",
						"mood",
						"motocross",
						"mount",
						"mower",
						"mrs",
						"muddy",
						"musical",
						"mysteries",
						"name's",
						"neighbour's",
						"neither",
						"newsman",
						"nil",
						"ninth",
						"notes",
						"obviously",
						"October",
						"odd",
						"oddly",
						"often",
						"olden",
						"Olympics",
						"omnivores",
						"opposite",
						"orders",
						"organised",
						"orphan",
						"otherwise",
						"outback",
						"outfit",
						"overgrown",
						"owners",
						"paddling",
						"pain",
						"pairs",
						"panicking",
						"parade",
						"parent",
						"parent's",
						"parrot",
						"particular",
						"partied",
						"patted",
						"peace",
						"pear",
						"pegs",
						"pencil",
						"people's",
						"pepper",
						"perfume",
						"petal",
						"picking",
						"piercing",
						"pinched",
						"pipe",
						"pipes",
						"pirate",
						"pistols",
						"pitches",
						"planes",
						"plastic",
						"plenty",
						"pods",
						"pointy",
						"poked",
						"policeman",
						"popstar",
						"possums",
						"poster",
						"potions",
						"pour",
						"pouring",
						"president",
						"prix",
						"pro",
						"professional",
						"promised",
						"property",
						"puddles",
						"puffed",
						"pulling",
						"pure",
						"puts",
						"quarters",
						"queen's",
						"questioned",
						"races",
						"railway",
						"rattled",
						"realise",
						"recently",
						"reckon",
						"rectangle",
						"register",
						"relax",
						"release",
						"relieved",
						"reminded",
						"remote",
						"rented",
						"repairer",
						"reply",
						"reporting",
						"reptiles",
						"restaurant",
						"rested",
						"retired",
						"return",
						"returned",
						"ribbon",
						"riders",
						"rifle",
						"roasted",
						"rockets",
						"ropes",
						"rose",
						"roses",
						"row",
						"royal",
						"ruins",
						"ruler",
						"rules",
						"rumbling",
						"sail",
						"salad",
						"sample",
						"sandy",
						"Saturdays",
						"saucepan",
						"saucer",
						"scales",
						"scanned",
						"scanning",
						"scarf",
						"scientists",
						"scrape",
						"scraped",
						"screen",
						"seahorses",
						"searching",
						"seats",
						"secondly",
						"self",
						"send",
						"sending",
						"settle",
						"shade",
						"shadows",
						"shaggy",
						"shake",
						"shall",
						"shampoo",
						"shaped",
						"sharp",
						"sheet",
						"shell",
						"Sheridan",
						"shiny",
						"shipping",
						"shiver",
						"shock",
						"shore",
						"shoulder",
						"shouting",
						"shoved",
						"shrank",
						"shrieked",
						"sill",
						"skier",
						"skies",
						"skipping",
						"slamball",
						"slamdunks",
						"slap",
						"slapped",
						"slides",
						"slipping",
						"slow",
						"slowed",
						"slower",
						"smaller",
						"smart",
						"snacks",
						"snap",
						"sniffed",
						"snowing",
						"snowy",
						"snuffle",
						"snuggled",
						"soup",
						"speak",
						"speedy",
						"spiders",
						"spider's",
						"spied",
						"spins",
						"splattered",
						"spoke",
						"spookier",
						"spots",
						"sprained",
						"sprayed",
						"sprinted",
						"sprinting",
						"sprocket",
						"squad",
						"squashed",
						"starvation",
						"statues",
						"status",
						"steel",
						"storms",
						"stranded",
						"streets",
						"stripy",
						"stronger",
						"stuffed",
						"stumbled",
						"submarine",
						"suitcases",
						"summer's",
						"sunday",
						"sung",
						"sunset",
						"sunshine",
						"supermarket",
						"supreme",
						"survive",
						"survived",
						"suspended",
						"swinging",
						"swirling",
						"swirly",
						"swooped",
						"swung",
						"system",
						"tackle",
						"tag",
						"talks",
						"target",
						"taught",
						"teaching",
						"tease",
						"teenager",
						"tem",
						"tenth",
						"tents",
						"terminator",
						"terror",
						"thanked",
						"threatened",
						"throughout",
						"thunderstorms",
						"tick",
						"ticket",
						"tight",
						"tights",
						"till",
						"timer",
						"tip",
						"tiptoed",
						"toilets",
						"tooth",
						"topic",
						"torches",
						"tortoise",
						"torture",
						"tow",
						"towel",
						"toxic",
						"tractor",
						"trail",
						"trap",
						"trashed",
						"tricks",
						"trimming",
						"tucked",
						"tumbling",
						"tune",
						"turtle",
						"twins",
						"twisted",
						"unconscious",
						"understand",
						"underwear",
						"undies",
						"university",
						"unlocked",
						"unlucky",
						"unpack",
						"unusual",
						"unwrapped",
						"uses",
						"valuable",
						"vampire",
						"van",
						"velvet",
						"videos",
						"villagers",
						"vines",
						"violence",
						"visible",
						"volcanoes",
						"waking",
						"walls",
						"warn",
						"warned",
						"warning",
						"waterfall",
						"webs",
						"we'd",
						"weighed",
						"wetsuit",
						"we've",
						"wherever",
						"whining",
						"whip",
						"whipped",
						"who's",
						"whose",
						"widow",
						"wife's",
						"windy",
						"witches",
						"wobbly",
						"workmen",
						"works",
						"worms",
						"worries",
						"writes",
						"yawn",
						"yours",
						"zapped",
						"zoomed",
						"abalone",
						"abandoned",
						"abducted",
						"abilities",
						"abnormal",
						"accelerated",
						"accommodate",
						"accommodation",
						"accused",
						"achievement",
						"acrobatics",
						"act",
						"active",
						"activities",
						"activity",
						"actors",
						"actress",
						"actresses",
						"added",
						"addicted",
						"addle",
						"adenoids",
						"admiring",
						"adorable",
						"adore",
						"advantage",
						"adventures",
						"advertisement",
						"afford",
						"aged",
						"agency",
						"ahs",
						"aisle",
						"al",
						"alarm",
						"alert",
						"alleged",
						"allergic",
						"alongs",
						"altogether",
						"amazingly",
						"ambled",
						"among",
						"amounts",
						"amputate",
						"amusing",
						"anaconda",
						"analysis",
						"andy",
						"angel",
						"angels",
						"anger",
						"angles",
						"angrily",
						"animated",
						"antelope",
						"antennae",
						"anxious",
						"anxiously",
						"anybody",
						"anytime",
						"apart",
						"apartment",
						"apartments",
						"apologies",
						"appears",
						"April",
						"aqua",
						"aquamarine",
						"aquatic",
						"arch",
						"archery",
						"arrested",
						"arrows",
						"ashes",
						"asks",
						"assigned",
						"association",
						"asthma",
						"astounded",
						"asylum",
						"atomic",
						"attached",
						"attended",
						"aunties",
						"Australian",
						"autograph",
						"autographs",
						"automated",
						"automatic",
						"award",
						"awarded",
						"awoken",
						"axe",
						"baby's",
						"backhand",
						"backpack",
						"backpacks",
						"backstage",
						"bacon",
						"baddies",
						"badges",
						"bait",
						"balance",
						"balanced",
						"bald",
						"ballet",
						"ballistic",
						"balloon",
						"bamboo",
						"ban",
						"band",
						"bandage",
						"bare",
						"barrackers",
						"barricade",
						"base",
						"baseball",
						"bashed",
						"basic",
						"bass",
						"bathing",
						"batters",
						"bays",
						"beanie",
						"beaten",
						"becoming",
						"bedrooms",
						"beef",
						"beeping",
						"begin",
						"behaved",
						"believed",
						"believes",
						"bells",
						"belong",
						"below",
						"besides",
						"beware",
						"beyond",
						"bicycle",
						"bid",
						"bikini",
						"billions",
						"bills",
						"binoculars",
						"bird's",
						"birth",
						"biscuits",
						"biting",
						"bits",
						"blackness",
						"blades",
						"blasted",
						"blink",
						"blizzards",
						"blocking",
						"blocks",
						"blond",
						"blotches",
						"blown",
						"bluey",
						"BMX",
						"boarded",
						"boarders",
						"bodies",
						"boil",
						"boils",
						"bolted",
						"bolts",
						"bombed",
						"bonus",
						"booby",
						"booing",
						"bookshelf",
						"booster",
						"booth",
						"bore",
						"borrow",
						"borrowed",
						"bosses",
						"bothered",
						"bounce",
						"bouncing",
						"bowl",
						"boxer",
						"boyfriends",
						"boys'",
						"bragging",
						"brains",
						"brat",
						"braver",
						"breaking",
						"breaths",
						"breathtaking",
						"breeding",
						"breeds",
						"brick",
						"bricks",
						"bridges",
						"brightest",
						"brightly",
						"brings",
						"brittle",
						"brothers'",
						"bruises",
						"brushes",
						"brushing",
						"buckets",
						"buckled",
						"bud",
						"buddies",
						"buddy",
						"budge",
						"budget",
						"budgie",
						"bug",
						"bugs",
						"bulgey",
						"bulgy",
						"bullet",
						"bumping",
						"bunched",
						"bunks",
						"buried",
						"burn",
						"burns",
						"burped",
						"burrow",
						"bursting",
						"bury",
						"buses",
						"busily",
						"byt",
						"cackle",
						"cafe",
						"cages",
						"cakes",
						"calmed",
						"calming",
						"canaries",
						"canary",
						"cancer",
						"cane",
						"cannibals",
						"cannons",
						"cannot",
						"canoe",
						"cans",
						"cap",
						"capsized",
						"captains",
						"capture",
						"card",
						"cardigan",
						"cares",
						"caretaker",
						"carport",
						"carrying",
						"car's",
						"carton",
						"cartoon",
						"cast",
						"casting",
						"castles",
						"catchers",
						"cauliflower",
						"caved",
						"caveman",
						"caves",
						"ccol",
						"celebrated",
						"celebration",
						"cent",
						"centimetre",
						"centimetres",
						"century",
						"certain",
						"certificates",
						"chain",
						"champions",
						"chanted",
						"chaos",
						"chapter",
						"character",
						"characters",
						"charge",
						"charging",
						"chasey",
						"chasy",
						"chatter",
						"chattered",
						"cheat",
						"cheating",
						"checkers",
						"cheek",
						"cheered",
						"cheerful",
						"cheetah",
						"chef",
						"cherry",
						"chew",
						"chews",
						"chicken's",
						"child's",
						"chilli",
						"chimney",
						"chimneys",
						"chimpanzees",
						"chives",
						"chocolates",
						"chopper",
						"chores",
						"chosen",
						"chuckled",
						"church",
						"circles",
						"civil",
						"clack",
						"clanked",
						"clanky",
						"clap",
						"clapped",
						"classic",
						"classmate",
						"clearly",
						"clicked",
						"clicking",
						"climbers",
						"climbing",
						"cloth",
						"cloths",
						"clubrooms",
						"clue",
						"coach's",
						"coast",
						"coats",
						"cockatiel",
						"cockatoo",
						"cockroaches",
						"coconuts",
						"coffees",
						"coldness",
						"collapse",
						"collects",
						"colossal",
						"colts",
						"combination",
						"comedy",
						"comets",
						"comfort",
						"comforting",
						"comic",
						"commentators",
						"companions",
						"compassion",
						"competitions",
						"complaining",
						"completely",
						"completing",
						"concerned",
						"concerns",
						"concerts",
						"concrete",
						"conditioner",
						"cone",
						"cones",
						"connect",
						"connected",
						"connection",
						"considerate",
						"constellations",
						"container",
						"contest",
						"contestants",
						"continue",
						"continues",
						"conversation",
						"convincing",
						"cooking",
						"cooled",
						"cool's",
						"cop",
						"copied",
						"copping",
						"copy",
						"cords",
						"coriander",
						"costumes",
						"cottages",
						"coughed",
						"courageously",
						"covers",
						"crackle",
						"crackling",
						"craft",
						"crammed",
						"crashes",
						"craters",
						"creaky",
						"create",
						"creates",
						"creating",
						"creator",
						"creeping",
						"creeps",
						"crew",
						"criminals",
						"crisis",
						"croaked",
						"croaky",
						"crossed",
						"crossing",
						"crowded",
						"crown",
						"crumbled",
						"crush",
						"crutches",
						"cubbies",
						"cubes",
						"cuddle",
						"cuddled",
						"cuddles",
						"cuddling",
						"cuffed",
						"cultures",
						"cupboards",
						"cupcakes",
						"curl",
						"curly",
						"cursive",
						"curtains",
						"customs",
						"daddy",
						"damaged",
						"damp",
						"dams",
						"dancer",
						"danger",
						"dare",
						"darkened",
						"darling",
						"dart",
						"darted",
						"dash",
						"date",
						"daydreaming",
						"daylights",
						"daytime",
						"deadly",
						"deal",
						"dearly",
						"decapitate",
						"decide",
						"deck",
						"declared",
						"decorated",
						"decorations",
						"deers",
						"defeating",
						"definitely",
						"delighted",
						"delightful",
						"demanded",
						"demandingly",
						"denied",
						"depending",
						"depths",
						"descend",
						"describe",
						"description",
						"deserted",
						"desks",
						"desperate",
						"dessert",
						"detective",
						"detentions",
						"determined",
						"devastating",
						"devastation",
						"di",
						"diablo",
						"dictionary",
						"dies",
						"difficult",
						"diggers",
						"dinner's",
						"direct",
						"directly",
						"disappear",
						"disappearing",
						"disappears",
						"disaster",
						"discipline",
						"discover",
						"discovered",
						"discovers",
						"discus",
						"discussed",
						"discussing",
						"disguise",
						"disguises",
						"disliked",
						"dislocated",
						"dismissed",
						"dissolving",
						"distant",
						"distracted",
						"distracting",
						"distraction",
						"disturbed",
						"dived",
						"dives",
						"division",
						"divisions",
						"doctors",
						"dodged",
						"doll's",
						"dolly",
						"dome",
						"dominoes",
						"doom",
						"doorbells",
						"doorstop",
						"double",
						"dragged",
						"drank",
						"dreamed",
						"dreamily",
						"dreamless",
						"dribble",
						"dribbling",
						"dried",
						"drill",
						"drilled",
						"drip",
						"drivers",
						"driver's",
						"drives",
						"driveway",
						"drizzling",
						"droids",
						"drum",
						"dry",
						"dude",
						"duffer",
						"dull",
						"dummy's",
						"dumped",
						"dumping",
						"dungeon",
						"dunk",
						"dunks",
						"duster",
						"dusty",
						"dye",
						"dyed",
						"eager",
						"earth",
						"earthling",
						"easier",
						"easily",
						"eater",
						"eaters",
						"effects",
						"eighties",
						"elderly",
						"elected",
						"election",
						"electricity",
						"electrocuted",
						"electronic",
						"element",
						"elves",
						"emailed",
						"embarrassed",
						"emergency",
						"empress",
						"emptying",
						"encouraged",
						"encouragement",
						"endangered",
						"energy",
						"entered",
						"entering",
						"enters",
						"entertainment",
						"envelope",
						"environment",
						"environmental",
						"equally",
						"equipment",
						"estimated",
						"estimation",
						"everyday",
						"everyone's",
						"eveywhere",
						"evreyday",
						"exact",
						"exam",
						"examination",
						"exclaimed",
						"excursion",
						"exercise",
						"exercised",
						"exhibits",
						"expecting",
						"experience",
						"experiencing",
						"explorers",
						"explorer's",
						"explosive",
						"extraterrestrial",
						"eyeballs",
						"fabulous",
						"facial",
						"fading",
						"fair",
						"falg",
						"fallen",
						"families",
						"family's",
						"fan",
						"fangs",
						"fans",
						"farmed",
						"farmers",
						"fascinating",
						"fascination",
						"faster",
						"fastest",
						"father's",
						"fault",
						"feared",
						"February",
						"feeding",
						"feels",
						"felines",
						"fellow",
						"ferns",
						"festival",
						"fever",
						"fiddled",
						"fiftieth",
						"fights",
						"figure",
						"figured",
						"filth",
						"filthy",
						"firing",
						"firm",
						"firmly",
						"fitfully",
						"fitted",
						"flamingo",
						"flamingoes",
						"flap",
						"flapping",
						"flashing",
						"flavour",
						"flick",
						"flight",
						"float",
						"floss",
						"flowing",
						"flown",
						"fluke",
						"focus",
						"fog",
						"folded",
						"folks",
						"footballers",
						"footballs",
						"footprints",
						"forced",
						"forehand",
						"forehead",
						"forgotten",
						"formed",
						"forming",
						"forwards",
						"fossils",
						"freely",
						"friends'",
						"friendships",
						"fries",
						"fro",
						"frogs",
						"fungus",
						"furious",
						"furniture",
						"further",
						"fused",
						"futuristic",
						"fuzzy",
						"galactic",
						"gaMes",
						"gaming",
						"gangs",
						"gas",
						"gasp",
						"gat",
						"gathered",
						"geared",
						"geeky",
						"geese",
						"gem",
						"gems",
						"gemstone",
						"gender",
						"general",
						"gently",
						"germy",
						"ghost's",
						"giants",
						"giddy",
						"giggled",
						"ginger",
						"girlfriends",
						"girl's",
						"girls'",
						"glinting",
						"glittered",
						"glorious",
						"glove",
						"gloves",
						"glowing",
						"goalie",
						"goat",
						"gobsmacked",
						"goggles",
						"gorge",
						"gorilla",
						"grabbbing",
						"grades",
						"graduated",
						"graduation",
						"grandfather",
						"grandmother",
						"grandpa",
						"grandson",
						"grasp",
						"gravy",
						"gray",
						"grazed",
						"greener",
						"greens",
						"greeny",
						"greetings",
						"grenades",
						"groans",
						"groceries",
						"grocery",
						"groomer",
						"groovy",
						"growled",
						"growling",
						"grub",
						"gruelling",
						"grump",
						"grunted",
						"guard's",
						"guesses",
						"guide",
						"guitars",
						"gumboots",
						"gushing",
						"guts",
						"gymnastics",
						"hadn't",
						"hail",
						"haircut",
						"hairier",
						"halftime",
						"hallelujah",
						"hallway",
						"halo",
						"halt",
						"hammer",
						"hammocks",
						"hamster",
						"hamsters",
						"handbag",
						"handballed",
						"handballing",
						"handgun",
						"handsome",
						"hanged",
						"happenings",
						"happier",
						"harmless",
						"hatched",
						"haunt",
						"haven",
						"hazel",
						"headband",
						"headmaster",
						"headphones",
						"health",
						"hearted",
						"heater",
						"heavily",
						"heel",
						"helicopters",
						"helpers",
						"helpful",
						"helps",
						"hen",
						"herbivore",
						"herd",
						"hesitate",
						"hidden",
						"hideout",
						"highway",
						"hilarious",
						"hippopotamuses",
						"hippy",
						"hissing",
						"hive",
						"holds",
						"hollow",
						"hom",
						"homeless",
						"hook",
						"hops",
						"horns",
						"horrific",
						"host",
						"hostages",
						"hostess",
						"hosting",
						"hotdogs",
						"hum",
						"hundreds",
						"hunt",
						"hunted",
						"hunting",
						"hurl",
						"hurling",
						"hurriedly",
						"hurts",
						"hut",
						"hutch",
						"hypersleep",
						"icy",
						"ideas",
						"imagination",
						"imaginations",
						"immigrants",
						"implanted",
						"importance",
						"included",
						"increase",
						"incredible",
						"independence",
						"indigo",
						"indistinguishable",
						"indoor",
						"injured",
						"injuries",
						"injury",
						"insight",
						"instantly",
						"instructed",
						"interchange",
						"interviews",
						"invade",
						"invaded",
						"inventing",
						"investigations",
						"invitation",
						"invitations",
						"invited",
						"ir",
						"irresistible",
						"It",
						"itself",
						"ivory",
						"jabbed",
						"jack",
						"jacks",
						"jammed",
						"jazz",
						"jets",
						"jetty",
						"jingle",
						"join",
						"jokes",
						"judge",
						"juggling",
						"juicy",
						"junior",
						"junkyard",
						"karate",
						"keepers",
						"kelp",
						"keyring",
						"keys",
						"kidding",
						"kids'",
						"kig",
						"kills",
						"kilograms",
						"kinder",
						"kingdom",
						"king's",
						"kneed",
						"knees",
						"knifed",
						"knowing",
						"koala",
						"labrador",
						"labradors",
						"laces",
						"ladders",
						"lady's",
						"lamb's",
						"laneway",
						"lapping",
						"laptop's",
						"lasted",
						"lastly",
						"latch",
						"lately",
						"latest",
						"launcher",
						"lavender",
						"law",
						"layby",
						"layer",
						"layers",
						"laying",
						"lazily",
						"leaders",
						"leads",
						"leafless",
						"league",
						"leak",
						"leant",
						"leaps",
						"lectured",
						"leftover",
						"legend",
						"legendary",
						"leopard",
						"leotard",
						"letters",
						"lettuce",
						"level",
						"levitation",
						"liberty",
						"librarian",
						"lick",
						"licked",
						"licking",
						"lid",
						"lifejackets",
						"lighthouse",
						"likea",
						"limo",
						"limousine",
						"lined",
						"lipstick",
						"listened",
						"literally",
						"litter",
						"littlest",
						"lizard",
						"loaded",
						"loaf",
						"local",
						"lockers",
						"locket",
						"locks",
						"logged",
						"logs",
						"lollipops",
						"losers",
						"loudest",
						"lube",
						"lump",
						"lyrics",
						"madman",
						"madness",
						"major",
						"male",
						"manager",
						"mango",
						"man's",
						"maple",
						"March",
						"marching",
						"margin",
						"margins",
						"markers",
						"marking",
						"marshmallow",
						"marshmallows",
						"mask",
						"masks",
						"massaged",
						"mast",
						"mat",
						"material",
						"materials",
						"meaner",
						"meanwhile",
						"medium",
						"melted",
						"mental",
						"mention",
						"meow",
						"mermaids",
						"merry",
						"messed",
						"messy",
						"metallic",
						"meteorites",
						"metropolitan",
						"microchip",
						"mid",
						"milkbar",
						"milked",
						"milky",
						"millimetres",
						"millions",
						"mirror's",
						"mischief",
						"misery",
						"missiles",
						"mistake",
						"mitten",
						"mo",
						"mobs",
						"model",
						"models",
						"mole",
						"moles",
						"monk",
						"monkeybars",
						"monopoly",
						"moods",
						"moons",
						"moral",
						"mosquito",
						"moss",
						"mossy",
						"mostly",
						"mouthguard",
						"mouths",
						"movement",
						"Ms",
						"mu",
						"multiplication",
						"mummies",
						"murderer",
						"muscle",
						"muscles",
						"musty",
						"mut",
						"mutant",
						"mutated",
						"muttered",
						"mutts",
						"mythical",
						"nagging",
						"nails",
						"naked",
						"nap",
						"nasal",
						"nation",
						"national",
						"native",
						"natives",
						"nature",
						"nearing",
						"neatly",
						"nectar",
						"needing",
						"needle",
						"needles",
						"neighbours'",
						"nephew",
						"nerve",
						"net",
						"newspapers",
						"nibbling",
						"nickname",
						"nights",
						"nineteen",
						"nodded",
						"noises",
						"non",
						"northern",
						"noticing",
						"nozzle",
						"nudge",
						"nudged",
						"nudging",
						"nuisance",
						"numbers",
						"o",
						"obedient",
						"obey",
						"object",
						"objects",
						"observes",
						"observing",
						"obstacle",
						"occasion",
						"occasionally",
						"occurred",
						"officer",
						"official",
						"offs",
						"oink",
						"omnivore",
						"one's",
						"onion",
						"opener",
						"opponent",
						"oranges",
						"orangutan",
						"ordering",
						"organise",
						"organising",
						"orphan's",
						"ouch",
						"ought",
						"outer",
						"outfits",
						"overall",
						"overcome",
						"overheard",
						"overloaded",
						"overthrow",
						"ow",
						"owls",
						"owned",
						"owns",
						"paces",
						"packets",
						"packs",
						"pad",
						"paddle",
						"paddocks",
						"pages",
						"paid",
						"panel",
						"panels",
						"pantry",
						"papers",
						"parachute",
						"paralysed",
						"parcel",
						"parties",
						"partners",
						"passenger",
						"passport",
						"pat",
						"paths",
						"pathway",
						"patience",
						"pats",
						"patter",
						"pattern",
						"pause",
						"payed",
						"peacefully",
						"peacock",
						"peak",
						"peanut",
						"pearl",
						"pedicure",
						"peed",
						"peeked",
						"peel",
						"pelted",
						"pencils",
						"penguin",
						"perfectly",
						"perform",
						"performance",
						"performances",
						"perhaps",
						"permanent",
						"persistent",
						"personality",
						"perspiration",
						"pest",
						"pestering",
						"petrifying",
						"petrol",
						"pharaoh's",
						"photos",
						"piano",
						"pie",
						"pies",
						"pill",
						"pillow",
						"pills",
						"pimple",
						"pinch",
						"pines",
						"pinkish",
						"pit",
						"pitchforks",
						"pitter",
						"planned",
						"plans",
						"planted",
						"plates",
						"plating",
						"platypus",
						"playdough",
						"playtime",
						"pleaded",
						"pleasure",
						"pliers",
						"plop",
						"plumber",
						"plummeted",
						"pluses",
						"plush",
						"ply",
						"pneumonia",
						"poach",
						"poisonous",
						"polluted",
						"pommel",
						"portable",
						"possible",
						"pouch",
						"pounce",
						"pounced",
						"pound",
						"pounded",
						"pounds",
						"pours",
						"practiced",
						"practises",
						"practising",
						"prank",
						"precious",
						"predator",
						"prepare",
						"preparing",
						"press",
						"presses",
						"pressing",
						"pressure",
						"pretend",
						"pretended",
						"pretending",
						"previously",
						"price",
						"princes",
						"princesses",
						"print",
						"prison",
						"prize",
						"professor",
						"profile",
						"progress",
						"properly",
						"properties",
						"protection",
						"protested",
						"proudly",
						"proven",
						"provisions",
						"puddle",
						"puff",
						"puffball",
						"puller",
						"pulls",
						"pulse",
						"pumped",
						"punch",
						"punching",
						"punishment",
						"punishments",
						"punk",
						"puppies'",
						"pups",
						"purpose",
						"purr",
						"purse",
						"pussy",
						"pyramids",
						"quest",
						"quietly",
						"racer",
						"racquet",
						"radioactive",
						"radish",
						"raged",
						"rags",
						"raid",
						"rainbows",
						"raincoat",
						"rainforest",
						"rally",
						"rammed",
						"ramp",
						"rampage",
						"rampaging",
						"ramps",
						"ranger",
						"rapidly",
						"rascal",
						"rather",
						"rattling",
						"ray",
						"rays",
						"reach",
						"reaching",
						"realm",
						"received",
						"recognise",
						"records",
						"recovered",
						"recruited",
						"reddish",
						"referee",
						"refill",
						"refuel",
						"refused",
						"related",
						"relaxed",
						"relay",
						"released",
						"remains",
						"remarkable",
						"remarried",
						"remembers",
						"reminds",
						"renovated",
						"rent",
						"rental",
						"repacking",
						"replay",
						"reporter",
						"repulsive",
						"rescued",
						"response",
						"results",
						"returning",
						"revved",
						"reward",
						"rewarded",
						"rewind",
						"rhinos",
						"ribs",
						"rice",
						"ridden",
						"ridiculous",
						"rightful",
						"rip",
						"ripe",
						"ripples",
						"rising",
						"risk",
						"roaming",
						"roaring",
						"robbery",
						"rockpools",
						"rod",
						"roller",
						"rolls",
						"roofs",
						"root",
						"rosellas",
						"rosy",
						"rotten",
						"routines",
						"royalty",
						"rub",
						"rubbed",
						"rubber",
						"rubies",
						"rubs",
						"ruby",
						"ruffles",
						"rugby",
						"rumour",
						"runners",
						"runs",
						"rushing",
						"rustle",
						"rustling",
						"sack",
						"saddle",
						"sadly",
						"sadness",
						"safely",
						"safety",
						"sailed",
						"samll",
						"sandcastle",
						"sank",
						"sapce",
						"sarcastically",
						"satring",
						"saturated",
						"sausages",
						"saver",
						"saving",
						"saviour",
						"scares",
						"scarier",
						"scenes",
						"schnitzel",
						"scholarship",
						"school's",
						"scissors",
						"scout",
						"scram",
						"scrapbooking",
						"scratched",
						"screech",
						"scurrying",
						"seagulls",
						"seahorse",
						"seas",
						"seatbelt",
						"seating",
						"secrets",
						"section",
						"security",
						"seed",
						"seeder",
						"seeds",
						"seeing",
						"seem",
						"sees",
						"selling",
						"sells",
						"senior",
						"sense",
						"sensed",
						"sentenced",
						"separately",
						"September",
						"series",
						"serious",
						"servant",
						"servants",
						"servant's",
						"served",
						"serves",
						"service",
						"services",
						"setting",
						"seventeen",
						"seventy",
						"severe",
						"shakes",
						"shame",
						"share",
						"shattered",
						"shattering",
						"sheared",
						"sheep's",
						"sheer",
						"sheered",
						"shelves",
						"sheriff's",
						"shift",
						"shifting",
						"shirt",
						"shirts",
						"shivering",
						"shook",
						"shopped",
						"shopper",
						"shotput",
						"should've",
						"shouts",
						"shows",
						"shreds",
						"shrinker",
						"shrug",
						"shutting",
						"shuttle",
						"shy",
						"sic",
						"sickness",
						"sideways",
						"sighted",
						"sights",
						"signal",
						"silky",
						"silver",
						"silverbeet",
						"sings",
						"sinking",
						"sirens",
						"site",
						"sits",
						"situation",
						"sixteen",
						"sixth",
						"sixty",
						"sized",
						"skateboarder",
						"skateboarding",
						"skated",
						"skatepark",
						"skater",
						"skidded",
						"skids",
						"skill",
						"skills",
						"skins",
						"skull",
						"slammed",
						"slapping",
						"slaughter",
						"slaughtered",
						"slave",
						"slaving",
						"slayed",
						"slayer",
						"slaying",
						"sled",
						"sledge",
						"sliced",
						"slid",
						"slider",
						"sliding",
						"slight",
						"slingshot",
						"slip",
						"slithering",
						"slot",
						"slowing",
						"smacked",
						"smallest",
						"smashing",
						"smelling",
						"smells",
						"smiled",
						"smiles",
						"smiling",
						"smirk",
						"smoked",
						"sniping",
						"snobby",
						"snort",
						"snorted",
						"snowball",
						"snowflake",
						"snowpeas",
						"snugly",
						"soared",
						"social",
						"society",
						"socket",
						"softball",
						"softest",
						"softly",
						"solar",
						"soldier",
						"soldiers",
						"solid",
						"solved",
						"solving",
						"sombrero",
						"somebody's",
						"someday",
						"somehow",
						"someone's",
						"somersault",
						"something's",
						"sore",
						"sores",
						"sorted",
						"soul",
						"souls",
						"soups",
						"sour",
						"soursob",
						"soursobs",
						"south",
						"souvenir",
						"sowed",
						"soya",
						"spaceship",
						"spade",
						"sparkle",
						"sparkled",
						"spatula",
						"speaking",
						"speaks",
						"spear",
						"species",
						"speechless",
						"spells",
						"spending",
						"spewed",
						"sphere",
						"spies",
						"spiky",
						"spine",
						"splash",
						"splits",
						"spoilt",
						"sponge",
						"spoon",
						"spreads",
						"spree",
						"squares",
						"squawk",
						"squawking",
						"squeezed",
						"squid",
						"squishing",
						"squishy",
						"stabbed",
						"stable",
						"stables",
						"staircase",
						"stammered",
						"stamping",
						"stapler",
						"stardom",
						"starfish",
						"staright",
						"starter",
						"starve",
						"starving",
						"stated",
						"statue",
						"steady",
						"stealing",
						"steals",
						"steered",
						"steering",
						"stepping",
						"stepson",
						"sternly",
						"sticker",
						"stink",
						"stinks",
						"stinky",
						"stitch",
						"stocks",
						"stoked",
						"stomp",
						"stomping",
						"stones",
						"stool",
						"storeys",
						"stories",
						"stormier",
						"straightaway",
						"strangers",
						"strangest",
						"strawberries",
						"strawberry",
						"stray",
						"strength",
						"stressed",
						"stretch",
						"stretched",
						"strict",
						"strikes",
						"strings",
						"stroke",
						"stroll",
						"strolled",
						"strolling",
						"stromy",
						"study",
						"stupidest",
						"stuttered",
						"style",
						"styles",
						"sub",
						"subjects",
						"substitute",
						"success",
						"successfully",
						"suffered",
						"suitcase",
						"suits",
						"sum",
						"summit",
						"summoned",
						"sums",
						"sundaes",
						"Sundays",
						"sunk",
						"sun's",
						"superb",
						"superhero",
						"supply",
						"surely",
						"surf",
						"surface",
						"surfers",
						"surgery",
						"surprising",
						"surprisingly",
						"surrounding",
						"surroundings",
						"suspicious",
						"swallowed",
						"swarm",
						"sway",
						"swayed",
						"swearing",
						"sweat",
						"sweating",
						"sweaty",
						"sweets",
						"swerving",
						"swimmers",
						"swings",
						"swiped",
						"swished",
						"swishing",
						"switched",
						"switching",
						"symmetrical",
						"syrup",
						"systems",
						"t",
						"tablespoon",
						"tackles",
						"tails",
						"takeaways",
						"tale",
						"talkies",
						"talky",
						"tamed",
						"tank",
						"tanker",
						"tape",
						"tapping",
						"targeted",
						"taste",
						"tattered",
						"technically",
						"technology",
						"teddy's",
						"tee",
						"teen",
						"teh",
						"teleport",
						"teleportation",
						"telescope",
						"television",
						"temper",
						"temperature",
						"temperatures",
						"term",
						"terrain",
						"terribly",
						"terrific",
						"terrifying",
						"textas",
						"thankfully",
						"thanking",
						"theft",
						"theirs",
						"they'll",
						"thieves",
						"thoughts",
						"threatening",
						"thrill",
						"thrilled",
						"thrilling",
						"throat",
						"throne",
						"tickly",
						"tide",
						"tidy",
						"tile",
						"tiles",
						"timber",
						"tipper",
						"tipping",
						"tiptoeing",
						"tokens",
						"tomato",
						"tomatoes",
						"tomorrow's",
						"ton",
						"tone",
						"tongue",
						"tons",
						"tonsils",
						"tools",
						"toppings",
						"toppled",
						"tornado",
						"torturing",
						"tossed",
						"total",
						"toucans",
						"touch",
						"touches",
						"tough",
						"tour",
						"tourist",
						"towels",
						"towering",
						"towns",
						"trade",
						"trained",
						"trainer",
						"trampolines",
						"transform",
						"transport",
						"trapdoor",
						"trapdoors",
						"trapeze",
						"trapping",
						"traps",
						"travelling",
						"treated",
						"treetops",
						"trembled",
						"trembling",
						"trembly",
						"trickled",
						"trickling",
						"trips",
						"trolley",
						"trophies",
						"trotted",
						"trunks",
						"trusted",
						"tsunami",
						"tubes",
						"tumbled",
						"tummy",
						"tunneling",
						"turnout",
						"turtles",
						"twelves",
						"twinkling",
						"twit",
						"twitch",
						"twitches",
						"twitchy",
						"tyre",
						"ultrafast",
						"umbrella",
						"uncivilised",
						"uncles",
						"uncle's",
						"uncomfortable",
						"undefeatable",
						"undefeated",
						"underneath",
						"unfamiliar",
						"unfold",
						"unicorns",
						"unique",
						"united",
						"universe",
						"unless",
						"unlocks",
						"unpacking",
						"unstuck",
						"ups",
						"upstages",
						"upwards",
						"urged",
						"ute",
						"utes",
						"valleys",
						"vanishes",
						"vegemite",
						"vegetables",
						"vegetarian",
						"vegies",
						"vehicles",
						"version",
						"vet",
						"vey",
						"villain",
						"violent",
						"visiting",
						"vivid",
						"volleyball",
						"vomit",
						"vote",
						"voucher",
						"waitress",
						"wakes",
						"walker",
						"walkie",
						"walky",
						"wand",
						"wandered",
						"wanting",
						"warehouse",
						"warmish",
						"warmth",
						"warriors",
						"wasting",
						"waterfalls",
						"waterhole",
						"weak",
						"weaker",
						"weaponry",
						"weapons",
						"webcam",
						"weddings",
						"wedges",
						"weekly",
						"weight",
						"weirder",
						"weirdest",
						"weirdo",
						"welcomed",
						"werewolf's",
						"werewolves",
						"whacked",
						"wheat",
						"wheel",
						"wheels",
						"whimpering",
						"whisper",
						"whispering",
						"whoops",
						"whoosh",
						"wide",
						"widescreen",
						"widow's",
						"willow",
						"winding",
						"winner",
						"winter's",
						"wiped",
						"wiping",
						"wired",
						"wirey",
						"wise",
						"wisely",
						"wisp",
						"wizard",
						"wizards",
						"wnt",
						"wobbled",
						"wombats",
						"woodpecker",
						"woofed",
						"wool",
						"worker",
						"workshops",
						"wounded",
						"wraps",
						"wreckage",
						"wrecking",
						"wrench",
						"wrinkly",
						"writer",
						"writers",
						"y",
						"yawned",
						"yells",
						"yelp",
						"yippee",
						"yoghurt",
						"yourself",
						"zap",
						"zebras",
						"zigzagging",
						"zip",
						"zoom",
						"color",
						"website",
						"snowman",
						"soil",
						"minecraft",
						"terraria",
						"griffpatch",
						"griff",
						"forum",
						"wiki",
						"yep",
						"uh",
						"omg",
						"idk",
						"ikr",
						"c",
						"astounding",
						"filter",
						"filtered",
						"testing",
						"debugging",
						"debug",
						"buggy",
						"YAY",
						"reload",
						"load",
						"restart",
						"respawn",
						"argh",
						"oops",
						"erase",
						"erasing",
						"deleting",
						"yeah",
						"unlimited",
						"script",
						"user",
						"username",
						"Multiplayer",
						"laggy",
						"lag",
						"stuttering",
						"stutter",
						"glitch",
						"glitchy",
						"dizzy",
						"whoa",
						"cant",
						"potato",
						"ahhh",
						"ahh",
						"D",
						"S",
						"epic",
						"aww",
						"bruh",
						"brah",
						"hmm",
						"hmmm",
						"ummm",
						"umm",
						"nope",
						"LOL",
						"comment",
						"comments",
						"thats",
						"secretly",
						"Efficient",
						"plz",
						"survival",
						"reset",
						"programming",
						"python",
						"java",
						"pickle",
						"spam",
						"spamming",
						"S'up",
						"Howdy",
						"Purposefully",
						"Compress",
						"Undead",
						"Ensure",
						"m8s",
						"spleef",
						"mojang",
						"Parkour",
						"graveyard",
						"xylophone",
						"woah",
						"ugh",
						"wat",
						"china",
						"ima",
						"thx",
						"wanna",
						"dont",
						"dug",
						"Simplified",
						"Hotbar",
						"YOLO",
						"Pickaxe",
						"Variable",
						"Tool",
						"u",
						"r",
						"lamp",
						"yarg",
						"chatting",
						"server",
						"update",
						"carve",
						"painting",
						"cobble",
						"notch",
						"yarn",
						"thread",
						"remix",
						"pitted",
						"eeyup",
						"jk",
						"pvp",
						"modify",
						"expects",
						"expect",
						"diggy",
						"count",
						"counting",
						"counts",
						"counter",
						"XD",
						"bro",
						"yo",
						"grief",
						"sup",
						"auto",
						"heal",
						"program",
						"programme",
						"programs",
						"scripts",
						"nametag",
						"okay",
						"wot",
						"m8",
						"lagging",
						"scratcher",
						"appear",
						"Shrek",
						"extend",
						"crafting",
						"destroys",
						"allow",
						"0",
						"helo",
						"ello",
						"task",
						"tasks",
						"spelt",
						"account",
						"chopping",
						"chipped",
						"projects",
						"enabled",
						"math",
						"mathematics",
						"Zealand",
						"nyan ",
						"acorn",
						"iron",
						"ore",
						"acorns",
						"mins",
						"min",
						"marker",
						"pleased",
						"assume",
						"planting",
						"saplings",
						"sapling",
						"recent",
						"uppermost",
						"placement",
						"repeat",
						"tab",
						"inventory",
						"inv",
						"tricky",
						"bother",
						"gotta",
						"furnace",
						"crafted",
						"smelting",
						"workbench",
						"Considering",
						"benches",
						"benchs",
						"chandelier",
						"chandeliers",
						"sawmill",
						"sawmills",
						"furnaces",
						"anvil",
						"anvils",
						"scratcharia",
						"sandstone",
						"griefing",
						"platforms",
						"signpost",
						"fancy",
						"confusing",
						"brb",
						"fiddle",
						"drag",
						"ingredient",
						"recipes",
						"swag",
						"fresh",
						"bunker",
						"mode",
						"community",
						"tickle",
						"belly",
						"nyan",
						"chests",
						"e",
						"flag",
						"flags",
						"issues",
						"select",
						"selection",
						"item",
						"sprite",
						"sprites",
						"bookcase",
						"useful",
						"equip",
						"builder",
						"builders",
						"valuables",
						"bunnies",
						"mob",
						"mining",
						"mean",
						"bank",
						"banks",
						"banking",
						"slime",
						"gel",
						"slimes",
						"platinum",
						"sofa",
						"checking",
						"reports",
						"request",
						"1000's",
						"simple",
						"demon",
						"whats",
						"synchronised",
						"YouTube",
						"claim",
						"original",
						"claiming",
						"personal",
						"claimed",
						"refresh",
						"clever",
						"logic",
						"re",
						"np",
						"nm",
						"gg",
						"crab",
						"moves",
						"scroll",
						"changes",
						"nah",
						"frongs",
						"x",
						"ha",
						"uhh",
						"ur",
						"gliching",
						"ebug",
						"aggressive",
						"passive",
						"fences",
						"spawned",
						"spawn",
						"q",
						"pardon",
						"gosh",
						"involved",
						"simplify",
						"tutor",
						"im",
						"fires",
						"uk",
						"whether",
						"dire",
						"ire",
						"structured",
						"lags",
						"command",
						"swaps",
						"clicks",
						"direction",
						"spawning",
						"dask",
						"less",
						"default",
						"stocking",
						"commands",
						"offscreen",
						"settled",
						"worth",
						"happenned",
						"flow",
						"scrolling",
						"k",
						"brightness",
						"scripting",
						"issue",
						"ahha",
						"blade",
						"obsidian",
						"kil",
						"ooh",
						"gills",
						"coding",
						"peacful",
						"excellent",
						"remove",
						"console",
						"moo",
						"corrupt",
						"reloading",
						"particles",
						"loading",
						"levels",
						"calculate",
						"data",
						"process",
						"happenning",
						"blame",
						"ya",
						"obsidion",
						"slabs",
						"shared",
						"upper",
						"lower",
						"axes",
						"phew",
						"glitching",
						"spin",
						"happends",
						"obvious",
						"flowed",
						"hopfully",
						"anyhow",
						"joins",
						"passages",
						"require",
						"tinker",
						"indeed",
						"em",
						"v2",
						"v",
						"squirrels",
						"squirrel",
						"firefly",
						"fireflies",
						"lockups",
						"kiln",
						"hmmd",
						"hides",
						"cause",
						"disconnect",
						"affects",
						"speeds",
						"tags",
						"upsetting",
						"pushing",
						"limit",
						"speech",
						"spawns",
						"dea",
						"hellforge",
						"dongeon",
						"gen"],
					"isPersistent": false,
					"x": 111,
					"y": 36,
					"width": 371,
					"height": 326,
					"visible": false
				},
				{
					"listName": "whitespace",
					"contents": [" ",
						"\/",
						"\\",
						"#",
						",",
						".",
						"!",
						":",
						"\"",
						"?",
						"(",
						")",
						"@",
						";",
						"=",
						"£",
						"$",
						"%",
						"+",
						"*",
						"<",
						">"],
					"isPersistent": false,
					"x": 77,
					"y": 35,
					"width": 405,
					"height": 327,
					"visible": false
				},
				{
					"listName": "bad",
					"contents": [],
					"isPersistent": false,
					"x": 5,
					"y": 68,
					"width": 477,
					"height": 294,
					"visible": false
				}],
			"scripts": [[689,
					129,
					[["whenIReceive", "reset blocked"], ["setVar:to:", "Chatting", "3"], ["setVar:to:", "Filtered", "(You must wait 30 seconds between resets)"]]],
				[1394, 1449, [["not", false]]],
				[355,
					28,
					[["whenKeyPressed", "t"],
						["doIf",
							[">", ["getAttribute:of:", "Mode", "Player"], "-99"],
							[["setVar:to:", "Chatting", "1"],
								["setVar:to:", "canHelp", "1"],
								["doAsk", "Filtered Safe Chat:"],
								["setVar:to:", "canHelp", "0"],
								["lookLike:", "blank"],
								["hide"],
								["doIfElse",
									["=", ["answer"], ""],
									[["setVar:to:", "Chatting", "0"]],
									[["call", "Filter %s", ["concatenate:with:", ["answer"], " "]],
										["doIf",
											["not",
												["|",
													["=", ["readVariable", "Filtered"], ""],
													["=", ["letter:of:", 1, ["readVariable", "Filtered"]], "\/"]]],
											[["setVar:to:", "Filtered", ["concatenate:with:", ["getUserName"], ["concatenate:with:", ": ", ["readVariable", "Filtered"]]]],
												["doBroadcastAndWait", "Log Chat"]]],
										["setVar:to:", "Chatting", "2"]]]]]]],
				[1088,
					26,
					[["whenKeyPressed", "n"],
						["setVar:to:", "Tile Index", ["getAttribute:of:", "Tile Index", "Cursor"]],
						["setVar:to:", "i", ["getLine:ofList:", ["readVariable", "Tile Index"], "_Level"]],
						["setVar:to:",
							"tmp",
							["getLine:ofList:", ["+", 4, ["*", ["readVariable", "i"], ["readVariable", "TMul"]]], "_TileData"]],
						["doIf",
							["not",
								["|",
									["=", ["readVariable", "i"], "58"],
									["=", ["letter:of:", 2, ["readVariable", "tmp"]], "3"]]],
							[["stopScripts", "this script"]]],
						["call", "Is Protected %n", ["readVariable", "Tile Index"]],
						["doIf", [">", ["readVariable", "Tile Type"], "0"], [["stopScripts", "this script"]]],
						["setVar:to:", "Chatting", "1"],
						["doIfElse",
							["=", ["readVariable", "i"], "58"],
							[["doAsk", "Write on sign:"]],
							[["doAsk", "Write on chest:"]]],
						["doIf",
							["=", ["answer"], ""],
							[["setVar:to:", "Chatting", "0"], ["stopScripts", "this script"]]],
						["call", "Filter %s", ["concatenate:with:", ["answer"], " "]],
						["setVar:to:", "Chatting", "3"]]],
				[1568,
					24,
					[["procDef", "Is Protected %n", ["idx"], [1], true],
						["setVar:to:", "Tile Type", "0"],
						["setVar:to:", "i", "1"],
						["doRepeat",
							["getAttribute:of:", "@Max Players", "Multiplayer"],
							[["doIf",
									["not", ["=", ["readVariable", "i"], ["getAttribute:of:", "@Player ID", "Multiplayer"]]],
									[["setVar:to:", "tmp", ["getLine:ofList:", ["+", ["readVariable", "i"], 50], "@PlayerNames"]],
										["doIf",
											[">", ["readVariable", "tmp"], "0"],
											[["doIf",
													["<",
														["computeFunction:of:",
															"abs",
															["-",
																["%", ["getParam", "idx", "r"], ["readVariable", "MAP_WIDTH"]],
																["%", ["readVariable", "tmp"], ["readVariable", "MAP_WIDTH"]]]],
														"10"],
													[["doIf",
															["<",
																["computeFunction:of:",
																	"abs",
																	["\/", ["-", ["getParam", "idx", "r"], ["readVariable", "tmp"]], ["readVariable", "MAP_WIDTH"]]],
																"9"],
															[["setVar:to:", "Tile Type", ["readVariable", "i"]]]]]]]]]],
								["changeVar:by:", "i", 1]]]]],
				[1090.8,
					1255.4,
					[["procDef", "Get LData For Tile %n", ["tile index"], [1], true],
						["setVar:to:", "i", "1"],
						["doUntil",
							["|",
								[">", ["readVariable", "i"], ["lineCountOfList:", "_LData"]],
								["=", ["getLine:ofList:", ["readVariable", "i"], "_LData"], ["getParam", "tile index", "r"]]],
							[["changeVar:by:", "i", ["getLine:ofList:", ["+", ["readVariable", "i"], 1], "_LData"]]]]]],
				[1089.3,
					1081.4,
					[["procDef", "Remove Bad Words", [], [], true],
						["doRepeat",
							["lineCountOfList:", "bad"],
							[["call", "Remove Word %s", ["getLine:ofList:", "last", "bad"]], ["deleteLine:ofList:", "last", "bad"]]]]],
				[1089,
					795.8,
					[["procDef", "Remove Word %s", ["word"], [""], true],
						["setVar:to:", "i", 0],
						["doRepeat",
							["lineCountOfList:", "Dictionary"],
							[["doIfElse",
									["=", ["getParam", "word", "r"], ["getLine:ofList:", ["readVariable", "i"], "Dictionary"]],
									[["deleteLine:ofList:", ["readVariable", "i"], "Dictionary"]],
									[["changeVar:by:", "i", 1]]]]]]],
				[1086,
					630.1,
					[["procDef", "Add Word %s", ["word"], [""], true],
						["doIf",
							["not", ["list:contains:", "Dictionary", ["getParam", "word", "r"]]],
							[["append:toList:", ["getParam", "word", "r"], "Dictionary"]]]]],
				[687,
					21,
					[["whenIReceive", "Chat Sent"], ["setVar:to:", "Chatting", "0"], ["setVar:to:", "Filtered", ""]]],
				[27.2,
					318.4,
					[["procDef", "Filter %s", ["text"], [""], true],
						["doIfElse",
							["=", ["letter:of:", 1, ["getParam", "text", "r"]], "\/"],
							[["setVar:to:", "Filtered", ["getParam", "text", "r"]]],
							[["setVar:to:", "isFiltered", 0],
								["setVar:to:", "Filtered", ""],
								["setVar:to:", "word", ""],
								["setVar:to:", "i", "1"],
								["setVar:to:", "pre", ""],
								["doUntil",
									["|",
										[">", ["readVariable", "i"], ["stringLength:", ["getParam", "text", "r"]]],
										[">", ["readVariable", "i"], "50"]],
									[["setVar:to:", "c", ["letter:of:", ["readVariable", "i"], ["getParam", "text", "r"]]],
										["doIf",
											["=", ["readVariable", "c"], "'"],
											[["setVar:to:", "pre", ["readVariable", "word"]]]],
										["doIfElse",
											["|",
												["list:contains:", "whitespace", ["readVariable", "c"]],
												["&",
													["=", ["readVariable", "c"], "-"],
													["=", ["stringLength:", ["readVariable", "word"]], "0"]]],
											[["doIf",
													[">", ["stringLength:", ["readVariable", "word"]], "0"],
													[["doIfElse",
															["|",
																["list:contains:", "Dictionary", ["readVariable", "word"]],
																["|",
																	["list:contains:", "@PlayerNames", ["readVariable", "word"]],
																	["=", ["readVariable", "word"], ["getUserName"]]]],
															[["setVar:to:", "Filtered", ["concatenate:with:", ["readVariable", "Filtered"], ["readVariable", "word"]]]],
															[["doIf",
																	["not", ["=", ["concatenate:with:", ["readVariable", "pre"], "'s"], ["readVariable", "word"]]],
																	[["setVar:to:", "pre", "@@@"]]],
																["doIfElse",
																	["|",
																		["list:contains:", "Dictionary", ["readVariable", "pre"]],
																		["|",
																			["list:contains:", "@PlayerNames", ["readVariable", "pre"]],
																			["=", ["readVariable", "pre"], ["getUserName"]]]],
																	[["setVar:to:", "Filtered", ["concatenate:with:", ["readVariable", "Filtered"], ["readVariable", "word"]]]],
																	[["doIfElse",
																			["=", ["+", 0, ["readVariable", "word"]], "0"],
																			[["doIfElse",
																					["|", ["=", ["getUserName"], "griffpatch"], ["=", ["getUserName"], "griffpatch_tutor"]],
																					[["append:toList:", ["readVariable", "word"], "Dictionary"],
																						["setVar:to:",
																							"Filtered",
																							["concatenate:with:", ["readVariable", "Filtered"], ["concatenate:with:", "*", ["concatenate:with:", ["readVariable", "word"], "*"]]]]],
																					[["doRepeat",
																							["stringLength:", ["readVariable", "word"]],
																							[["setVar:to:", "Filtered", ["concatenate:with:", ["readVariable", "Filtered"], "."]]]],
																						["changeVar:by:", "isFiltered", 1]]]],
																			[["setVar:to:", "Filtered", ["concatenate:with:", ["readVariable", "Filtered"], ["readVariable", "word"]]]]]]]]]]],
												["doIf",
													["<", ["readVariable", "i"], ["stringLength:", ["getParam", "text", "r"]]],
													[["setVar:to:", "Filtered", ["concatenate:with:", ["readVariable", "Filtered"], ["readVariable", "c"]]]]],
												["setVar:to:", "pre", ""],
												["setVar:to:", "word", ""]],
											[["setVar:to:", "word", ["concatenate:with:", ["readVariable", "word"], ["readVariable", "c"]]]]],
										["changeVar:by:", "i", 1]]]]]]],
				[27,
					26,
					[["whenGreenFlag"],
						["setVar:to:", "canHelp", "0"],
						["lookLike:", "blank"],
						["gotoX:y:", 0, 0],
						["hide"]]],
				[164, 284, [["readVariable", "canHelp"]]],
				[26, 185, [["whenIReceive", "Clone Sprites"], ["setVar:to:", "Chatting", "0"]]],
				[425, 646, [["call", "Remove Bad Words"]]],
				[388, 609, [["call", "Add Word %s", "fireflies"]]],
				[697,
					447,
					[["whenIReceive", "cmd button press"],
						["doIfElse",
							["=", ["readVariable", "Chatting"], "1"],
							[["doIf",
									["=", ["readVariable", "canHelp"], "1"],
									[["comeToFront"], ["lookLike:", "help"], ["show"]]],
								["setVar:to:", "canHelp", "0"]],
							[["doIf",
									[">", ["getAttribute:of:", "Mode", "Player"], "-99"],
									[["comeToFront"],
										["lookLike:", "help"],
										["show"],
										["setVar:to:", "Chatting", "1"],
										["doAsk", ""],
										["lookLike:", "blank"],
										["hide"],
										["doIfElse",
											["=", ["answer"], ""],
											[["setVar:to:", "Chatting", "0"]],
											[["doIfElse",
													["=", ["letter:of:", 1, ["answer"]], "\/"],
													[["call", "Filter %s", ["concatenate:with:", ["answer"], " "]]],
													[["call", "Filter %s", ["concatenate:with:", ["concatenate:with:", "\/", ["answer"]], " "]]]],
												["doIf",
													["not",
														["|",
															["=", ["readVariable", "Filtered"], ""],
															["=", ["letter:of:", 1, ["readVariable", "Filtered"]], "\/"]]],
													[["setVar:to:", "Filtered", ["concatenate:with:", ["getUserName"], ["concatenate:with:", ": ", ["readVariable", "Filtered"]]]]]],
												["setVar:to:", "Chatting", "2"]]]]]]]]],
				[530, 608.2, [["call", "Remove Word %s", ""]]]],
			"sounds": [{
					"soundName": "pop",
					"soundID": 0,
					"md5": "83a9787d4cb6f3b7632b4ddfebf74367.wav",
					"sampleCount": 258,
					"rate": 11025,
					"format": ""
				}],
			"costumes": [{
					"costumeName": "blank",
					"baseLayerID": 427,
					"baseLayerMD5": "d36f6603ec293d2c2198d3ea05109fe0.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 0
				},
				{
					"costumeName": "help",
					"baseLayerID": 500,
					"baseLayerMD5": "994a262eadfa15cac280f95f9edd9549.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 193,
					"rotationCenterY": 69
				},
				{
					"costumeName": "costume1",
					"baseLayerID": 501,
					"baseLayerMD5": "7e53670fbe043fef06302c268e9bd02e.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 7,
					"rotationCenterY": 7
				}],
			"currentCostumeIndex": 0,
			"scratchX": 0,
			"scratchY": 0,
			"scale": 1,
			"direction": 90,
			"rotationStyle": "normal",
			"isDraggable": false,
			"indexInLibrary": 14,
			"visible": false,
			"spriteInfo": {
			}
		},
		{
			"objName": "Setup Level",
			"variables": [{
					"name": "index",
					"value": 2460,
					"isPersistent": false
				},
				{
					"name": "y",
					"value": 94,
					"isPersistent": false
				},
				{
					"name": "x",
					"value": 330,
					"isPersistent": false
				},
				{
					"name": "ly",
					"value": 108.1187153788684,
					"isPersistent": false
				},
				{
					"name": "seed",
					"value": 69777,
					"isPersistent": false
				},
				{
					"name": "t",
					"value": 132,
					"isPersistent": false
				},
				{
					"name": "t2",
					"value": -1,
					"isPersistent": false
				},
				{
					"name": "t3",
					"value": -1,
					"isPersistent": false
				},
				{
					"name": "last tree x",
					"value": 328,
					"isPersistent": false
				},
				{
					"name": "h",
					"value": "20",
					"isPersistent": false
				},
				{
					"name": "reset timeout",
					"value": 66.268,
					"isPersistent": false
				},
				{
					"name": "total",
					"value": -12,
					"isPersistent": false
				},
				{
					"name": "x2",
					"value": 157.51898066122592,
					"isPersistent": false
				},
				{
					"name": "y2",
					"value": 102.41964203623247,
					"isPersistent": false
				},
				{
					"name": "dir",
					"value": 570,
					"isPersistent": false
				},
				{
					"name": "wid",
					"value": 0.26184360552579167,
					"isPersistent": false
				},
				{
					"name": "Last User",
					"value": "griffpatch",
					"isPersistent": false
				},
				{
					"name": "sea level",
					"value": 120,
					"isPersistent": false
				}],
			"lists": [{
					"listName": "Height",
					"contents": [125,
						126,
						128,
						130,
						131,
						132,
						133,
						133,
						132,
						132,
						132,
						131,
						130,
						129,
						128,
						127,
						126,
						126,
						126,
						126,
						126,
						127,
						128,
						128,
						128,
						129,
						129,
						129,
						129,
						130,
						129,
						129,
						129,
						128,
						128,
						127,
						127,
						126,
						126,
						126,
						125,
						126,
						126,
						127,
						127,
						128,
						128,
						128,
						129,
						129,
						129,
						129,
						129,
						129,
						129,
						128,
						128,
						127,
						126,
						125,
						124,
						123,
						122,
						122,
						121,
						121,
						121,
						121,
						122,
						122,
						123,
						123,
						123,
						123,
						123,
						123,
						124,
						124,
						123,
						123,
						122,
						122,
						122,
						121,
						121,
						121,
						121,
						121,
						121,
						121,
						121,
						121,
						121,
						122,
						122,
						122,
						123,
						124,
						124,
						124,
						124,
						124,
						125,
						125,
						125,
						126,
						126,
						126,
						126,
						125,
						124,
						124,
						123,
						122,
						122,
						121,
						121,
						121,
						121,
						121,
						121,
						122,
						122,
						122,
						123,
						123,
						124,
						124,
						124,
						125,
						125,
						125,
						125,
						125,
						125,
						125,
						125,
						125,
						124,
						124,
						124,
						124,
						124,
						124,
						124,
						125,
						125,
						126,
						127,
						128,
						128,
						129,
						129,
						130,
						130,
						131,
						131,
						131,
						131,
						131,
						131,
						131,
						131,
						131,
						130,
						130,
						130,
						129,
						129,
						128,
						128,
						128,
						128,
						128,
						128,
						128,
						128,
						128,
						128,
						129,
						129,
						129,
						129,
						129,
						130,
						130,
						129,
						129,
						129,
						129,
						129,
						128,
						128,
						128,
						128,
						128,
						127,
						127,
						128,
						128,
						128,
						129,
						129,
						130,
						131,
						132,
						132,
						132,
						133,
						133,
						132,
						132,
						132,
						131,
						130,
						130,
						129,
						128,
						128,
						127,
						126,
						126,
						126,
						126,
						126,
						126,
						126,
						125,
						126,
						126,
						126,
						127,
						127,
						127,
						127,
						127,
						126,
						125,
						125,
						125,
						124,
						124,
						123,
						123,
						122,
						122,
						122,
						121,
						121,
						121,
						121,
						121,
						122,
						122,
						122,
						123,
						124,
						125,
						125,
						126,
						126,
						126,
						127,
						126,
						126,
						126,
						125,
						125,
						124,
						124,
						123,
						122,
						121,
						121,
						121,
						121,
						121,
						122,
						122,
						122,
						123,
						123,
						123,
						123,
						123,
						123,
						123,
						123,
						123,
						122,
						122,
						122,
						122,
						121,
						121,
						121,
						121,
						121,
						121,
						121,
						121,
						121,
						121,
						121,
						121,
						122,
						123,
						123,
						124,
						125,
						126,
						127,
						127,
						128,
						128,
						129,
						129,
						128,
						128,
						127,
						127,
						126,
						125,
						125,
						125,
						124,
						124,
						124,
						125,
						125,
						125,
						126,
						127,
						128,
						129,
						130,
						130,
						130,
						131,
						130,
						130,
						130,
						130,
						129,
						128,
						127,
						126,
						125,
						125,
						124],
					"isPersistent": false,
					"x": 245,
					"y": 20,
					"width": 237,
					"height": 342,
					"visible": false
				},
				{
					"listName": "_ChestSpawn",
					"contents": ["1. Block ID",
						"2. Name",
						"3. Probability",
						"4. Amont",
						"",
						"107",
						"Builder Potion",
						"0",
						"1",
						"",
						"159",
						"Diamond Staff",
						"0",
						"1",
						"",
						"158",
						"Blue Phaseblade",
						"0",
						"1",
						"",
						"148",
						"Platinum Sword",
						"0",
						"1",
						"",
						"147",
						"Platinum Axe",
						"0",
						"1",
						"",
						"146",
						"Platinum Pickaxe",
						"0",
						"1",
						"",
						"145",
						"Gold Sword",
						"0",
						"1",
						"",
						"143",
						"Gold Pickaxe",
						"0",
						"1",
						"",
						"144",
						"Gold Axe",
						"0",
						"1"],
					"isPersistent": false,
					"x": 84,
					"y": 56,
					"width": 398,
					"height": 306,
					"visible": false
				},
				{
					"listName": "_ChestSpawnCommon",
					"contents": ["1. Block ID",
						"2. Name",
						"3. Probability",
						"4. Amount",
						"",
						"061",
						"Chain",
						"0.33",
						"50",
						"",
						"039 077 082 142",
						"Iron Bar, Gold Bar, Silver Bar, Platinum Bar",
						"0.5",
						"15",
						"",
						"195",
						"Lesser Healing Potion",
						"0.5",
						"5",
						"",
						"108 109 198 200 201",
						"Mining Potion, Swiftness Potion, Featherfall Potion, Obsidian Skin Potion, Gills Potion",
						"0.67",
						"3",
						"",
						"196",
						"Healing Potion",
						"0.1",
						"1",
						"",
						"047",
						"Torch",
						"0.5",
						"20",
						"",
						"300",
						"Santa Mask",
						"0.33",
						"1"],
					"isPersistent": false,
					"x": 58,
					"y": 48,
					"width": 377,
					"height": 279,
					"visible": false
				}],
			"scripts": [[3326.8,
					85.4,
					[["procDef", "Add Chest %n %n", ["idx", "typ"], [1, 1], true],
						["setLine:ofList:to:", ["getParam", "idx", "r"], "_Level", ["getParam", "typ", "r"]],
						["setVar:to:", "dir", ["lineCountOfList:", "_LData"]],
						["append:toList:", ["getParam", "idx", "r"], "_LData"],
						["append:toList:", "set at end...", "_LData"],
						["append:toList:", "", "_LData"],
						["append:toList:", "", "_LData"],
						["setVar:to:",
							"t",
							["*",
								5,
								["randomFrom:to:", 1, ["computeFunction:of:", "floor", ["\/", ["lineCountOfList:", "_ChestSpawn"], 5]]]]],
						["append:toList:", ["getLine:ofList:", ["+", ["readVariable", "t"], 1], "_ChestSpawn"], "_LData"],
						["setVar:to:", "t2", ["getLine:ofList:", ["+", ["readVariable", "t"], 4], "_ChestSpawn"]],
						["append:toList:",
							["randomFrom:to:", ["computeFunction:of:", "ceiling", ["\/", ["readVariable", "t2"], 2]], ["readVariable", "t2"]],
							"_LData"],
						["setVar:to:", "t", "0"],
						["doRepeat",
							["computeFunction:of:", "floor", ["\/", ["lineCountOfList:", "_ChestSpawnCommon"], 5]],
							[["changeVar:by:", "t", 5],
								["doIf",
									["<",
										["randomFrom:to:", 0, 1],
										["getLine:ofList:", ["+", ["readVariable", "t"], 3], "_ChestSpawnCommon"]],
									[["setVar:to:", "t2", ["getLine:ofList:", ["+", ["readVariable", "t"], 1], "_ChestSpawnCommon"]],
										["setVar:to:",
											"t3",
											["*",
												4,
												["randomFrom:to:", 0, ["computeFunction:of:", "floor", ["\/", ["stringLength:", ["readVariable", "t2"]], 4]]]]],
										["append:toList:",
											["+",
												0,
												["concatenate:with:",
													["letter:of:", ["+", ["readVariable", "t3"], 1], ["readVariable", "t2"]],
													["concatenate:with:",
														["letter:of:", ["+", ["readVariable", "t3"], 2], ["readVariable", "t2"]],
														["letter:of:", ["+", ["readVariable", "t3"], 3], ["readVariable", "t2"]]]]],
											"_LData"],
										["setVar:to:", "t2", ["getLine:ofList:", ["+", ["readVariable", "t"], 4], "_ChestSpawnCommon"]],
										["append:toList:",
											["randomFrom:to:", ["computeFunction:of:", "ceiling", ["\/", ["readVariable", "t2"], 3]], ["readVariable", "t2"]],
											"_LData"]]]]],
						["setLine:ofList:to:",
							["+", ["readVariable", "dir"], 2],
							"_LData",
							["-", ["lineCountOfList:", "_LData"], ["readVariable", "dir"]]]]],
				[901,
					152,
					[["whenIReceive", "MASTER"], ["setVar:to:", "reset timeout", ["+", ["timer"], 60]]]],
				[1827.2,
					61,
					[["procDef",
							"Fill Horizontal Line %s %n %n %n %n",
							["typ", "x", "y", "x2", "onlyInID"],
							["", 1, 1, 1, 1],
							true],
						["setVar:to:",
							"t2",
							["+",
								["getParam", "x", "r"],
								["*", ["getParam", "y", "r"], ["readVariable", "MAP_WIDTH"]]]],
						["doRepeat",
							["+", ["-", ["getParam", "x2", "r"], ["getParam", "x", "r"]], 1],
							[["changeVar:by:", "t2", 1],
								["doIf",
									["not", ["=", ["getParam", "typ", "r"], ["getLine:ofList:", ["readVariable", "t2"], "_Level"]]],
									[["doIf",
											["|",
												["=", ["getParam", "onlyInID", "r"], "0"],
												["=", ["getParam", "onlyInID", "r"], ["getLine:ofList:", ["readVariable", "t2"], "_Level"]]],
											[["setLine:ofList:to:", ["readVariable", "t2"], "_Level", ["getParam", "typ", "r"]],
												["changeVar:by:", "total", -1]]]]]]]]],
				[1842,
					501,
					[["procDef",
							"Fill Circle %s %n %n %n %n %n",
							["typ", "x", "y", "radius", "roughness", "onlyInID"],
							["", 1, 1, 1, 1, 1],
							true],
						["setVar:to:", "y", ["-", 0.5, ["getParam", "radius", "r"]]],
						["setVar:to:", "t", ["*", ["getParam", "radius", "r"], ["getParam", "radius", "r"]]],
						["doUntil",
							[">", ["readVariable", "y"], ["getParam", "radius", "r"]],
							[["setVar:to:",
									"x",
									["computeFunction:of:",
										"sqrt",
										["-", ["readVariable", "t"], ["*", ["readVariable", "y"], ["readVariable", "y"]]]]],
								["call",
									"Fill Horizontal Line %s %n %n %n %n",
									["getParam", "typ", "r"],
									["rounded",
										["+",
											["-", ["getParam", "x", "r"], ["readVariable", "x"]],
											["randomFrom:to:", ["-", 0, ["getParam", "roughness", "r"]], ["getParam", "roughness", "r"]]]],
									["rounded", ["+", ["getParam", "y", "r"], ["readVariable", "y"]]],
									["rounded",
										["+",
											["+", ["getParam", "x", "r"], ["readVariable", "x"]],
											["randomFrom:to:", ["-", 0, ["getParam", "roughness", "r"]], ["getParam", "roughness", "r"]]]],
									["getParam", "onlyInID", "r"]],
								["changeVar:by:", "y", 1]]]]],
				[1850.8,
					914.4,
					[["procDef",
							"Add Seams %n %n replacing %n radius %n level %n %n",
							["typ", "percent", "replace", "radius", "high", "low"],
							[1, 1, 1, 1, 1, 1],
							true],
						["setVar:to:",
							"total",
							["*",
								["*", ["*", ["readVariable", "MAP_WIDTH"], ["readVariable", "MAP_HEIGHT"]], 0.25],
								["getParam", "percent", "r"]]],
						["doUntil",
							["<", ["readVariable", "total"], "1"],
							[["call",
									"Fill Circle %s %n %n %n %n %n",
									["getParam", "typ", "r"],
									["randomFrom:to:", 0, ["readVariable", "MAP_WIDTH"]],
									["randomFrom:to:",
										["*", ["getParam", "low", "r"], ["readVariable", "MAP_HEIGHT"]],
										["*", ["getParam", "high", "r"], ["readVariable", "MAP_HEIGHT"]]],
									["randomFrom:to:", 0.4, ["*", ["getParam", "radius", "r"], 0.6]],
									["randomFrom:to:", 0.5, 1.2],
									["getParam", "replace", "r"]]]],
						["setVar:to:",
							"total",
							["*",
								["*", ["*", ["readVariable", "MAP_WIDTH"], ["readVariable", "MAP_HEIGHT"]], 0.25],
								["getParam", "percent", "r"]]],
						["doUntil",
							["<", ["readVariable", "total"], "1"],
							[["call",
									"Fill Circle %s %n %n %n %n %n",
									["getParam", "typ", "r"],
									["randomFrom:to:", 0, ["readVariable", "MAP_WIDTH"]],
									["randomFrom:to:",
										["*", ["getParam", "low", "r"], ["readVariable", "MAP_HEIGHT"]],
										["*", ["getParam", "high", "r"], ["readVariable", "MAP_HEIGHT"]]],
									["randomFrom:to:", 0.5, ["getParam", "radius", "r"]],
									["randomFrom:to:", 0.5, 1.8],
									["getParam", "replace", "r"]]]]]],
				[1855.4,
					1373.4,
					[["procDef",
							"Add Cut %n replacing %n %n width %n upper %n len %n",
							["typ", "replace", "percent", "width", "upper y", "len"],
							[1, 1, 1, 1, 1, 1],
							true],
						["setVar:to:",
							"total",
							["*",
								["*", ["*", ["readVariable", "MAP_WIDTH"], ["readVariable", "MAP_HEIGHT"]], 0.5],
								["getParam", "percent", "r"]]],
						["doUntil",
							["<", ["readVariable", "total"], "1"],
							[["setVar:to:", "x2", ["randomFrom:to:", 0, ["readVariable", "MAP_WIDTH"]]],
								["setVar:to:", "y2", ["randomFrom:to:", 0, ["*", ["readVariable", "MAP_HEIGHT"], 0.6]]],
								["doIfElse",
									["=", ["randomFrom:to:", 1, 2], "1"],
									[["setVar:to:", "dir", ["randomFrom:to:", 60, 120]]],
									[["setVar:to:", "dir", ["randomFrom:to:", -60, -120]]]],
								["setVar:to:",
									"wid",
									["randomFrom:to:", ["*", ["getParam", "width", "r"], 0.5], ["getParam", "width", "r"]]],
								["doRepeat",
									["randomFrom:to:", 2, 6],
									[["doRepeat",
											["randomFrom:to:",
												["rounded", ["*", ["getParam", "len", "r"], 0.4]],
												["getParam", "len", "r"]],
											[["doIf",
													["<", ["readVariable", "y2"], ["*", ["getParam", "upper y", "r"], ["readVariable", "MAP_HEIGHT"]]],
													[["call",
															"Fill Circle %s %n %n %n %n %n",
															["getParam", "typ", "r"],
															["readVariable", "x2"],
															["readVariable", "y2"],
															["readVariable", "wid"],
															["randomFrom:to:", 0.5, 1.8],
															["getParam", "replace", "r"]]]],
												["changeVar:by:", "x2", ["computeFunction:of:", "sin", ["readVariable", "dir"]]],
												["changeVar:by:", "y2", ["computeFunction:of:", "cos", ["readVariable", "dir"]]],
												["changeVar:by:", "dir", ["randomFrom:to:", -5, 5]]]],
										["setVar:to:",
											"wid",
											["randomFrom:to:", ["*", ["getParam", "width", "r"], 0.5], ["getParam", "width", "r"]]],
										["doIfElse",
											["=", ["randomFrom:to:", 1, 4], "1"],
											[["doIfElse",
													["=", ["randomFrom:to:", 1, 4], "1"],
													[["setVar:to:", "dir", ["randomFrom:to:", 0, 359]]],
													[["doIfElse",
															["=", ["randomFrom:to:", 1, 2], "1"],
															[["setVar:to:", "dir", ["randomFrom:to:", 60, 120]]],
															[["setVar:to:", "dir", ["randomFrom:to:", -60, -120]]]]]]],
											[["changeVar:by:", "dir", ["randomFrom:to:", -65, 65]]]]]]]]]],
				[1862.6,
					2375,
					[["whenIReceive", "Grow Sapling"],
						["setVar:to:", "index", ["getAttribute:of:", "Tile Index", "Cursor"]],
						["setVar:to:", "x", ["%", ["-", ["readVariable", "index"], 1], ["readVariable", "MAP_WIDTH"]]],
						["setVar:to:",
							"y",
							["computeFunction:of:", "floor", ["\/", ["-", ["readVariable", "index"], 1], ["readVariable", "MAP_WIDTH"]]]],
						["setVar:to:", "last tree x", "-999"],
						["setVar:to:", "total", 0],
						["setVar:to:", "ly", ["lineCountOfList:", "@Place"]],
						["setLine:ofList:to:", ["readVariable", "index"], "_Level", "0"],
						["call", "Plant? %n %n", ["readVariable", "x"], ["readVariable", "y"]],
						["doIf",
							[">", ["readVariable", "total"], "0"],
							[["doRepeat",
									["\/", ["-", ["lineCountOfList:", "@Place"], ["readVariable", "ly"]], 2],
									[["deleteLine:ofList:", "last", "@Place"],
										["setLine:ofList:to:", ["getLine:ofList:", "last", "@Place"], "_Level", "0"],
										["deleteLine:ofList:", "last", "@Place"]]]]]]],
				[5677, 3840, [["not", false]]],
				[897.4,
					265,
					[["whenIReceive", "CREATE NEW LEVEL"],
						["call", "Create the Level in the Level List"],
						["doBroadcastAndWait", "Settle Water"],
						["call", "CreatePostWater"],
						["doBroadcastAndWait", "LightingAll"],
						["lookLike:", "mini"],
						["hide"],
						["doBroadcastAndWait", "Force New Level"],
						["doBroadcastAndWait", "respawn"],
						["setVar:to:", "reset timeout", ["+", ["timer"], 60]]]],
				[3326.4,
					822.6,
					[["procDef", "Spawn Cave Chest %n on %n of type %n max h %n", ["count", "typ", "typ2", "h"], [1, 1, 1, 1], true],
						["doRepeat",
							["getParam", "count", "r"],
							[["setVar:to:", "index", "0"],
								["doUntil",
									[">", ["readVariable", "index"], "0"],
									[["setVar:to:",
											"index",
											["randomFrom:to:",
												["rounded", ["*", ["readVariable", "MAP_WIDTH"], 4]],
												["rounded",
													["*", ["readVariable", "MAP_WIDTH"], ["*", ["readVariable", "MAP_HEIGHT"], ["getParam", "h", "r"]]]]]],
										["doUntil",
											["|",
												["<", ["readVariable", "index"], "1"],
												["=", ["getLine:ofList:", ["readVariable", "index"], "_Level"], ["getParam", "typ", "r"]]],
											[["changeVar:by:", "index", ["readVariable", "MAP_WIDTH_NEG"]]]],
										["doUntil",
											["|",
												["<", ["readVariable", "index"], "1"],
												["not", ["=", ["getLine:ofList:", ["readVariable", "index"], "_Level"], ["getParam", "typ", "r"]]]],
											[["changeVar:by:", "index", ["readVariable", "MAP_WIDTH_NEG"]]]],
										["setVar:to:", "h", ["getLine:ofList:", ["readVariable", "index"], "_Level"]],
										["doIfElse",
											["|",
												["=", ["readVariable", "h"], "20"],
												["|",
													["=", ["readVariable", "h"], "20"],
													["|", ["=", ["readVariable", "h"], "26"], ["=", ["readVariable", "h"], "27"]]]],
											null,
											[["setVar:to:", "index", "0"]]]]],
								["doIfElse",
									["<", ["\/", ["readVariable", "index"], ["readVariable", "MAP_WIDTH"]], "13"],
									[["call", "Add Chest %n %n", ["+", ["readVariable", "index"], ["readVariable", "MAP_WIDTH"]], 225]],
									[["call",
											"Add Chest %n %n",
											["+", ["readVariable", "index"], ["readVariable", "MAP_WIDTH"]],
											["getParam", "typ2", "r"]]]]]]]],
				[4141.95,
					812,
					[["procDef", "Spawn Station %n %n %n %n", ["count", "typ", "top y", "bot y"], [1, 1, 1, 1], true],
						["doRepeat",
							["getParam", "count", "r"],
							[["setVar:to:", "index", "0"],
								["doUntil",
									[">", ["readVariable", "index"], "0"],
									[["setVar:to:",
											"index",
											["randomFrom:to:",
												["rounded", ["*", ["readVariable", "MAP_WIDTH"], ["getParam", "bot y", "r"]]],
												["rounded",
													["*", ["readVariable", "MAP_WIDTH"], ["*", ["readVariable", "MAP_HEIGHT"], ["getParam", "top y", "r"]]]]]],
										["doUntil",
											["|",
												["<", ["readVariable", "index"], "1"],
												["=", ["getLine:ofList:", ["readVariable", "index"], "_Level"], "0"]],
											[["changeVar:by:", "index", ["readVariable", "MAP_WIDTH_NEG"]]]],
										["doUntil",
											["|",
												["<", ["readVariable", "index"], "1"],
												["not", ["=", ["getLine:ofList:", ["readVariable", "index"], "_Level"], "0"]]],
											[["changeVar:by:", "index", ["readVariable", "MAP_WIDTH_NEG"]]]],
										["setVar:to:", "h", ["getLine:ofList:", ["readVariable", "index"], "_Level"]],
										["doIfElse",
											["|",
												["=", ["readVariable", "h"], "20"],
												["|",
													["=", ["readVariable", "h"], "20"],
													["|", ["=", ["readVariable", "h"], "26"], ["=", ["readVariable", "h"], "27"]]]],
											null,
											[["setVar:to:", "index", "0"]]]]],
								["setLine:ofList:to:",
									["+", ["readVariable", "index"], ["readVariable", "MAP_WIDTH"]],
									"_Level",
									["getParam", "typ", "r"]]]]]],
				[3330.5,
					1582.8,
					[["procDef", "Spawn Cloud %n %n %n", ["x", "y", "width"], [1, 1, 1], true],
						["setVar:to:",
							"index",
							["+",
								1,
								["+",
									["*", ["getParam", "y", "r"], ["readVariable", "MAP_WIDTH"]],
									["getParam", "x", "r"]]]],
						["call",
							"Add Chest %n %n",
							["+",
								["readVariable", "index"],
								["+", ["rounded", ["\/", ["getParam", "width", "r"], 2]], ["readVariable", "MAP_WIDTH"]]],
							122],
						["changeVar:by:", "index", 1],
						["doRepeat",
							["-", ["getParam", "width", "r"], 2],
							[["setLine:ofList:to:", ["readVariable", "index"], "_Level", "66"], ["changeVar:by:", "index", 1]]],
						["changeVar:by:", "index", ["-", 1, ["getParam", "width", "r"]]],
						["changeVar:by:", "index", ["readVariable", "MAP_WIDTH_NEG"]],
						["doRepeat",
							["getParam", "width", "r"],
							[["setLine:ofList:to:", ["readVariable", "index"], "_Level", "66"], ["changeVar:by:", "index", 1]]],
						["changeVar:by:", "index", ["-", 0, ["getParam", "width", "r"]]],
						["changeVar:by:", "index", ["readVariable", "MAP_WIDTH_NEG"]],
						["doRepeat",
							["getParam", "width", "r"],
							[["setLine:ofList:to:", ["readVariable", "index"], "_Level", "66"], ["changeVar:by:", "index", 1]]],
						["changeVar:by:", "index", ["-", 1, ["getParam", "width", "r"]]],
						["changeVar:by:", "index", ["readVariable", "MAP_WIDTH_NEG"]],
						["setVar:to:", "t", ["randomFrom:to:", 3, 6]],
						["doRepeat",
							["-", ["getParam", "width", "r"], 2],
							[["doIf",
									[">", ["readVariable", "t"], "0"],
									[["setLine:ofList:to:", ["readVariable", "index"], "_Level", "66"]]],
								["changeVar:by:", "t", -1],
								["doIf",
									["<", ["readVariable", "t"], ["randomFrom:to:", -3, -1]],
									[["setVar:to:", "t", ["randomFrom:to:", 3, 6]]]],
								["changeVar:by:", "index", 1]]]]],
				[3335.6,
					2532.6,
					[["procDef", "Beach %n %n from %n step %n", ["water level", "sea bed", "x", "addx"], [1, 1, 1, 1], true],
						["setVar:to:", "x", ["getParam", "x", "r"]],
						["setVar:to:", "t2", 0],
						["setVar:to:", "ly", ["rounded", ["getLine:ofList:", ["+", ["readVariable", "x"], 1], "Height"]]],
						["setVar:to:", "t", "0"],
						["doRepeat",
							40,
							[["doIfElse",
									["<",
										["*", ["-", ["getParam", "sea bed", "r"], ["readVariable", "ly"]], 0.16],
										["readVariable", "t"]],
									[["changeVar:by:", "ly", ["readVariable", "t"]]],
									[["changeVar:by:",
											"ly",
											["*", ["-", ["getParam", "sea bed", "r"], ["readVariable", "ly"]], 0.16]]]],
								["setVar:to:",
									"y",
									["rounded",
										["-",
											["readVariable", "ly"],
											["+", ["\/", ["readVariable", "t2"], 4], ["randomFrom:to:", 3, 4]]]]],
								["setVar:to:",
									"index",
									["+",
										["*", ["readVariable", "y"], ["readVariable", "MAP_WIDTH"]],
										["+", ["readVariable", "x"], 1]]],
								["doRepeat",
									["-", ["rounded", ["readVariable", "ly"]], ["readVariable", "y"]],
									[["setLine:ofList:to:", ["readVariable", "index"], "_Level", "27"], ["changeVar:by:", "index", ["readVariable", "MAP_WIDTH"]]]],
								["setLine:ofList:to:", ["-", ["readVariable", "index"], ["readVariable", "MAP_WIDTH"]], "_Level", "26"],
								["doIf",
									[">", ["-", ["getParam", "water level", "r"], ["rounded", ["readVariable", "ly"]]], "0"],
									[["doRepeat",
											["-", ["getParam", "water level", "r"], ["rounded", ["readVariable", "ly"]]],
											[["setLine:ofList:to:", ["readVariable", "index"], "_Level", "160"], ["changeVar:by:", "index", ["readVariable", "MAP_WIDTH"]]]],
										["setLine:ofList:to:", ["-", ["readVariable", "index"], ["readVariable", "MAP_WIDTH"]], "_Level", "168"]]],
								["doRepeat",
									["+",
										["-",
											["rounded", ["getLine:ofList:", ["+", ["readVariable", "x"], 1], "Height"]],
											["getParam", "water level", "r"]],
										2],
									[["setLine:ofList:to:", ["readVariable", "index"], "_Level", "0"], ["changeVar:by:", "index", ["readVariable", "MAP_WIDTH"]]]],
								["changeVar:by:", "x", ["getParam", "addx", "r"]],
								["doIf", [">", ["readVariable", "t"], "-0.9"], [["changeVar:by:", "t", -0.1]]],
								["changeVar:by:", "t2", 1]]]]],
				[33,
					350,
					[["procDef", "Create the Level in the Level List", [], [], true],
						["lookLike:", "terrain"],
						["show"],
						["comeToFront"],
						["deleteLine:ofList:", "all", "_Level"],
						["deleteLine:ofList:", "all", "_LData"],
						["setVar:to:", "MAP_WIDTH", "350"],
						["setVar:to:", "MAP_HEIGHT", "160"],
						["setVar:to:", "MAP_WIDTH_NEG", ["-", 0, ["readVariable", "MAP_WIDTH"]]],
						["setVar:to:", "sea level", ["-", ["readVariable", "MAP_HEIGHT"], 40]],
						["setVar:to:", "seed", ["randomFrom:to:", 0, 100000]],
						["setVar:to:", "last tree x", 0],
						["doRepeat",
							["*", ["readVariable", "MAP_WIDTH"], ["readVariable", "MAP_HEIGHT"]],
							[["append:toList:", "0", "_Level"]]],
						["deleteLine:ofList:", "all", "Height"],
						["setVar:to:", "x", 0],
						["setVar:to:", "y", ["rounded", ["+", ["readVariable", "sea level"], 5]]],
						["setVar:to:", "ly", ["readVariable", "y"]],
						["setVar:to:", "t", 0],
						["doRepeat",
							["readVariable", "MAP_WIDTH"],
							[["doIfElse",
									["<", ["rounded", ["readVariable", "y"]], ["-", ["readVariable", "ly"], 2]],
									[["changeVar:by:", "ly", -2]],
									[["doIfElse",
											[">", ["rounded", ["readVariable", "y"]], ["+", ["readVariable", "ly"], 2]],
											[["changeVar:by:", "ly", 2]],
											[["setVar:to:", "ly", ["rounded", ["readVariable", "y"]]]]]]],
								["append:toList:", ["readVariable", "ly"], "Height"],
								["call", "Vertical Strip %n starting at %n , %n", 2, ["readVariable", "x"], ["readVariable", "ly"]],
								["call",
									"Vertical Strip %n starting at %n , %n",
									21,
									["readVariable", "x"],
									["rounded",
										["-",
											["readVariable", "sea level"],
											["+",
												["*", 2, ["computeFunction:of:", "cos", ["*", ["readVariable", "x"], 5]]],
												["randomFrom:to:", 5, 6]]]]],
								["changeVar:by:", "x", 1],
								["changeVar:by:",
									"y",
									["*",
										1.2,
										["computeFunction:of:",
											"sin",
											["*",
												["computeFunction:of:", "sin", ["*", ["+", ["readVariable", "x"], ["readVariable", "seed"]], 13.9]],
												17]]]],
								["changeVar:by:",
									"y",
									["*",
										0.7,
										["computeFunction:of:",
											"cos",
											["*",
												["+",
													["readVariable", "x"],
													["*",
														3,
														["computeFunction:of:", "sin", ["*", ["+", ["readVariable", "x"], 1], 8.3]]]],
												6.6]]]],
								["setVar:to:",
									"t",
									["*",
										["\/",
											["+",
												["*", ["readVariable", "t"], 11],
												["-",
													["+",
														["readVariable", "sea level"],
														["+",
															6,
															["*", 4, ["computeFunction:of:", "cos", ["*", ["readVariable", "x"], 1.94]]]]],
													["readVariable", "y"]]],
											12],
										0.95]],
								["changeVar:by:", "y", ["*", ["readVariable", "t"], 0.8]],
								["doIf",
									["=", ["randomFrom:to:", 0, 2], "0"],
									[["changeVar:by:", "y", ["randomFrom:to:", -0.7, 0.7]]]],
								["doIf",
									["<", ["readVariable", "y"], ["+", ["readVariable", "sea level"], 1]],
									[["setVar:to:", "y", ["+", ["readVariable", "sea level"], 1]]]],
								["doIf",
									[">", ["readVariable", "y"], ["+", ["readVariable", "sea level"], 13]],
									[["setVar:to:", "y", ["+", ["readVariable", "sea level"], 13]]]]]],
						["setVar:to:", "t", ["-", ["readVariable", "MAP_HEIGHT"], 30]],
						["call",
							"Add Seams %n %n replacing %n radius %n level %n %n",
							21,
							0.003,
							2,
							1,
							["\/", ["readVariable", "t"], ["readVariable", "MAP_HEIGHT"]],
							["\/", ["-", ["readVariable", "sea level"], 7], ["readVariable", "MAP_HEIGHT"]]],
						["call",
							"Add Seams %n %n replacing %n radius %n level %n %n",
							21,
							0.002,
							2,
							3,
							["\/", ["readVariable", "t"], ["readVariable", "MAP_HEIGHT"]],
							["\/", ["-", ["readVariable", "sea level"], 7], ["readVariable", "MAP_HEIGHT"]]],
						["setVar:to:", "t", ["-", ["readVariable", "MAP_HEIGHT"], 35]],
						["call",
							"Add Seams %n %n replacing %n radius %n level %n %n",
							21,
							0.015,
							2,
							2,
							["\/", ["readVariable", "t"], ["readVariable", "MAP_HEIGHT"]],
							["\/", ["-", ["readVariable", "sea level"], 7], ["readVariable", "MAP_HEIGHT"]]],
						["call",
							"Add Caves %n hell %n",
							["\/", ["-", ["readVariable", "sea level"], 3], ["readVariable", "MAP_HEIGHT"]],
							["\/", 15, ["readVariable", "MAP_HEIGHT"]]],
						["call", "Add Ores %n", ["\/", ["-", ["readVariable", "MAP_HEIGHT"], 30], ["readVariable", "MAP_HEIGHT"]]],
						["call", "Add Clouds min %n max %n", 5, ["-", ["readVariable", "MAP_WIDTH"], 22]],
						["call", "Add Water in caves"],
						["call",
							"Beach %n %n from %n step %n",
							["-", ["readVariable", "sea level"], 1],
							["-", ["readVariable", "sea level"], 12],
							39,
							-1],
						["call",
							"Beach %n %n from %n step %n",
							["-", ["readVariable", "sea level"], 1],
							["-", ["readVariable", "sea level"], 12],
							["-", ["readVariable", "MAP_WIDTH"], 40],
							1],
						["call", "Water Land"],
						["call", "Fix Tops"],
						["setVar:to:", "index", "1"],
						["doRepeat",
							["*", ["readVariable", "MAP_WIDTH"], 2],
							[["setLine:ofList:to:", ["readVariable", "index"], "_Level", "178"], ["changeVar:by:", "index", 1]]],
						["lookLike:", "Settling Water"]]],
				[25,
					27,
					[["whenIReceive", "Setup Level Data"],
						["doIf",
							[">", ["getAttribute:of:", "@Offline", "Multiplayer"], "0"],
							[["call", "Create the Level in the Level List"],
								["doBroadcastAndWait", "Settle Water"],
								["call", "CreatePostWater"],
								["doBroadcastAndWait", "LightingAll"],
								["lookLike:", "mini"],
								["hide"]]]]],
				[890, 795, [["whenIReceive", "Msg - Loading Level"], ["comeToFront"], ["lookLike:", "loading"], ["show"]]],
				[902,
					1047,
					[["procDef", "Plant All", [], [], true],
						["setVar:to:", "x", "20"],
						["doRepeat",
							["-", ["lineCountOfList:", "Height"], 40],
							[["call",
									"Plant? %n %n",
									["readVariable", "x"],
									["+", ["getLine:ofList:", ["+", ["readVariable", "x"], 1], "Height"], 1]],
								["changeVar:by:", "x", 1]]],
						["deleteLine:ofList:", "all", "@Place"],
						["doRepeat", 10, [["append:toList:", "-1", "@Place"]]]]],
				[889,
					921,
					[["whenIReceive", "Setup Level (Prep only)"],
						["setVar:to:", "reset timeout", ["+", ["timer"], 60]],
						["call", "Setup Inventory"]]],
				[1866.8,
					2915.2,
					[["procDef", "Vertical Strip %n starting at %n , %n", ["block type", "x", "y"], [1, 1, 1], true],
						["setVar:to:",
							"index",
							["+",
								["+",
									["*", ["getParam", "y", "r"], ["readVariable", "MAP_WIDTH"]],
									["getParam", "x", "r"]],
								1]],
						["doUntil",
							["<", ["readVariable", "index"], "1"],
							[["setLine:ofList:to:", ["readVariable", "index"], "_Level", ["getParam", "block type", "r"]],
								["changeVar:by:", "index", ["readVariable", "MAP_WIDTH_NEG"]]]]]],
				[1863.2,
					3233.2,
					[["procDef", "Setup Inventory", [], [], true],
						["doIf",
							["not", ["=", ["getUserName"], ["readVariable", "Last User"]]],
							[["deleteLine:ofList:", "all", "_inv"],
								["append:toList:", "211", "_inv"],
								["append:toList:", "1", "_inv"],
								["append:toList:", "212", "_inv"],
								["append:toList:", "1", "_inv"],
								["append:toList:", "213", "_inv"],
								["append:toList:", "1", "_inv"],
								["append:toList:", "124", "_inv"],
								["append:toList:", "1", "_inv"],
								["append:toList:", "47", "_inv"],
								["append:toList:", "5", "_inv"],
								["doRepeat", 2, [["append:toList:", "0", "_inv"], ["append:toList:", "0", "_inv"]]],
								["append:toList:", "31", "_inv"],
								["append:toList:", "8", "_inv"],
								["doRepeat", 16, [["append:toList:", "0", "_inv"], ["append:toList:", "0", "_inv"]]],
								["doRepeat", 20, [["append:toList:", "0", "_inv"], ["append:toList:", "0", "_inv"]]],
								["setVar:to:", "Last User", ["getUserName"]]]],
						["setVar:to:", "inv_change", "1"]]],
				[1860,
					4031,
					[["procDef", "Place Block %s at %n , %n", ["block type", "x", "y"], ["", 1, 1], true],
						["setLine:ofList:to:",
							["+",
								["+",
									["*", ["getParam", "y", "r"], ["readVariable", "MAP_WIDTH"]],
									["getParam", "x", "r"]],
								1],
							"_Level",
							["getParam", "block type", "r"]]]],
				[1870,
					4247,
					[["procDef", "Place If %n at %n %n if %n", ["block type", "x", "y", "onlyTyp"], [1, 1, 1, 1], true],
						["setVar:to:",
							"index",
							["+",
								["+",
									["*", ["getParam", "y", "r"], ["readVariable", "MAP_WIDTH"]],
									["getParam", "x", "r"]],
								1]],
						["doIfElse",
							["=", ["getLine:ofList:", ["readVariable", "index"], "_Level"], ["getParam", "onlyTyp", "r"]],
							[["setLine:ofList:to:", ["readVariable", "index"], "_Level", ["getParam", "block type", "r"]],
								["append:toList:", ["readVariable", "index"], "@Place"],
								["append:toList:", ["getParam", "block type", "r"], "@Place"]],
							[["changeVar:by:", "total", 1]]]]],
				[42,
					3486,
					[["procDef", "Add Water in caves", [], [], false],
						["lookLike:", "water"],
						["call", "Add Seams %n %n replacing %n radius %n level %n %n", 178, 0.006, 0, 4, 0.1, 0],
						["call", "Add Seams %n %n replacing %n radius %n level %n %n", 178, 0.007, 0, 4, 0.2, 0],
						["call", "Add Seams %n %n replacing %n radius %n level %n %n", 178, 0.01, 0, 3, 0.3, 0.1],
						["call", "Add Seams %n %n replacing %n radius %n level %n %n", 160, 0.02, 0, 4, 0.57, 0.3],
						["call", "Add Seams %n %n replacing %n radius %n level %n %n", 160, 0.02, 0, 3, 0.65, 0.25]]],
				[42,
					3214.6,
					[["procDef", "Add Clouds min %n max %n", ["min", "max"], [1, 1], false],
						["call",
							"Spawn Cloud %n %n %n",
							["randomFrom:to:", ["getParam", "min", "r"], ["getParam", "max", "r"]],
							["-", ["readVariable", "MAP_HEIGHT"], ["randomFrom:to:", 5, 7]],
							["randomFrom:to:", 12, 20]],
						["call",
							"Spawn Cloud %n %n %n",
							["randomFrom:to:", ["getParam", "min", "r"], ["getParam", "max", "r"]],
							["-", ["readVariable", "MAP_HEIGHT"], ["randomFrom:to:", 6, 7]],
							["randomFrom:to:", 12, 20]],
						["call",
							"Spawn Cloud %n %n %n",
							["randomFrom:to:", ["getParam", "min", "r"], ["getParam", "max", "r"]],
							["-", ["readVariable", "MAP_HEIGHT"], ["randomFrom:to:", 7, 8]],
							["randomFrom:to:", 12, 20]],
						["call",
							"Spawn Cloud %n %n %n",
							["randomFrom:to:", ["getParam", "min", "r"], ["getParam", "max", "r"]],
							["-", ["readVariable", "MAP_HEIGHT"], ["randomFrom:to:", 7, 8]],
							["randomFrom:to:", 8, 13]],
						["call",
							"Spawn Cloud %n %n %n",
							["randomFrom:to:", ["getParam", "min", "r"], ["getParam", "max", "r"]],
							["-", ["readVariable", "MAP_HEIGHT"], ["randomFrom:to:", 5, 6]],
							["randomFrom:to:", 7, 12]]]],
				[44,
					3731,
					[["procDef", "CreatePostWater", [], [], false],
						["lookLike:", "Planting"],
						["call", "Spawn Cave Chest %n on %n of type %n max h %n", 30, 0, 100, 0.55],
						["call", "Spawn Cave Chest %n on %n of type %n max h %n", 10, 160, 224, 0.6],
						["call", "Plant All"],
						["call", "Spawn Station %n %n %n %n", 12, 221, 0.2, 0],
						["call", "Spawn Station %n %n %n %n", 55, 253, 0.5, 0.05],
						["call", "Spawn Station %n %n %n %n", 8, 289, 0.5, 0.25],
						["call", "Spawn Station %n %n %n %n", 7, 290, 0.4, 0.15],
						["call", "Spawn Station %n %n %n %n", 6, 291, 0.3, 0.05],
						["call", "Spawn Station %n %n %n %n", 5, 292, 0.2, 0.05],
						["call", "Spawn Station %n %n %n %n", 25, 294, 0.45, 0.1]]],
				[3653.6, 2677.6, [["setVar:to:", "t", "0.5"]]],
				[34.7,
					2339.05,
					[["procDef", "Add Caves %n hell %n", ["cave max", "hell max"], [1, 1], false],
						["call", "Add Seams %n %n replacing %n radius %n level %n %n", 0, 0.02, 21, 5, ["getParam", "cave max", "r"], 0],
						["call", "Add Seams %n %n replacing %n radius %n level %n %n", 0, 0.06, 21, 3, ["getParam", "cave max", "r"], 0],
						["call", "Add Seams %n %n replacing %n radius %n level %n %n", 0, 0.05, 21, 2.2, ["getParam", "cave max", "r"], 0.1],
						["call", "Add Seams %n %n replacing %n radius %n level %n %n", 0, 0.04, 21, 3, ["getParam", "hell max", "r"], 0],
						["call",
							"Add Seams %n %n replacing %n radius %n level %n %n",
							0,
							0.06,
							21,
							4,
							["\/", ["getParam", "hell max", "r"], 2],
							0],
						["call", "Add Cut %n replacing %n %n width %n upper %n len %n", 0, 21, 0.04, 1.4, ["getParam", "cave max", "r"], 10],
						["call", "Add Cut %n replacing %n %n width %n upper %n len %n", 0, 21, 0.03, 1.8, ["getParam", "cave max", "r"], 10],
						["call", "Add Cut %n replacing %n %n width %n upper %n len %n", 0, 21, 0.03, 2.3, ["getParam", "cave max", "r"], 10],
						["call", "Add Cut %n replacing %n %n width %n upper %n len %n", 0, 21, 0.02, 2.8, ["getParam", "cave max", "r"], 5],
						["call",
							"Add Seams %n %n replacing %n radius %n level %n %n",
							218,
							0.007,
							21,
							2,
							["*", ["getParam", "hell max", "r"], 1.2],
							0]]],
				[907.9,
					1406.4,
					[["procDef", "Fix Tops", [], [], true],
						["setVar:to:", "index", "1"],
						["doRepeat",
							["lineCountOfList:", "_Level"],
							[["setVar:to:", "t", ["getLine:ofList:", ["+", ["readVariable", "index"], ["readVariable", "MAP_WIDTH"]], "_Level"]],
								["doIf",
									["<",
										["getLine:ofList:", ["+", 3, ["*", ["readVariable", "t"], ["readVariable", "TMul"]]], "_TileData"],
										"8"],
									[["setVar:to:", "t", ["getLine:ofList:", ["readVariable", "index"], "_Level"]],
										["doIf",
											[">", ["readVariable", "t"], "0"],
											[["setVar:to:",
													"t2",
													["getLine:ofList:", ["+", 7, ["*", ["readVariable", "t"], ["readVariable", "TMul"]]], "_TileData"]],
												["doIf",
													["&",
														[">", ["readVariable", "t2"], "0"],
														["<", ["readVariable", "t2"], ["readVariable", "t"]]],
													[["setLine:ofList:to:", ["readVariable", "index"], "_Level", ["readVariable", "t2"]]]]]]]],
								["changeVar:by:", "index", 1]]]]],
				[918,
					2395,
					[["procDef", "Plant? %n %n", ["x", "y"], [1, 1], true],
						["doIfElse",
							["&",
								[">", ["-", ["getParam", "x", "r"], ["readVariable", "last tree x"]], "2"],
								["<",
									["randomFrom:to:", 1, 18],
									["-", ["getParam", "x", "r"], ["readVariable", "last tree x"]]]],
							[["doIfElse",
									[">", ["readVariable", "last tree x"], "-999"],
									[["setVar:to:", "last tree x", ["getParam", "x", "r"]],
										["setVar:to:", "h", ["randomFrom:to:", 2, 7]]],
									[["setVar:to:", "h", ["randomFrom:to:", 4, 7]]]],
								["setVar:to:",
									"index",
									["+",
										["+",
											["*", ["getParam", "y", "r"], ["readVariable", "MAP_WIDTH"]],
											["getParam", "x", "r"]],
										1]],
								["doIf",
									["=", ["getLine:ofList:", ["readVariable", "index"], "_Level"], "0"],
									[["doIf",
											["=", ["getLine:ofList:", ["-", ["readVariable", "index"], ["readVariable", "MAP_WIDTH"]], "_Level"], "1"],
											[["setVar:to:", "t", ["getParam", "y", "r"]],
												["call", "Place If %n at %n %n if %n", 3, ["getParam", "x", "r"], ["readVariable", "t"], 0],
												["setVar:to:", "t2", "0"],
												["setVar:to:", "t3", ["randomFrom:to:", 0, 2]],
												["doRepeat",
													["readVariable", "h"],
													[["changeVar:by:", "t", 1],
														["doIfElse",
															[">", ["readVariable", "t3"], "0"],
															[["call", "Place If %n at %n %n if %n", 4, ["getParam", "x", "r"], ["readVariable", "t"], 0],
																["changeVar:by:", "t3", -1]],
															[["doIfElse",
																	["<", ["randomFrom:to:", 0, 10], "3"],
																	[["call",
																			"Place If %n at %n %n if %n",
																			5,
																			["-", ["getParam", "x", "r"], 1],
																			["readVariable", "t"],
																			0],
																		["call", "Place If %n at %n %n if %n", 7, ["getParam", "x", "r"], ["readVariable", "t"], 0],
																		["call",
																			"Place If %n at %n %n if %n",
																			9,
																			["+", ["getParam", "x", "r"], 1],
																			["readVariable", "t"],
																			0]],
																	[["doIfElse",
																			[">", ["+", ["readVariable", "t2"], ["randomFrom:to:", 0, 1]], "0"],
																			[["call",
																					"Place If %n at %n %n if %n",
																					5,
																					["-", ["getParam", "x", "r"], 1],
																					["readVariable", "t"],
																					0],
																				["call", "Place If %n at %n %n if %n", 6, ["getParam", "x", "r"], ["readVariable", "t"], 0],
																				["changeVar:by:", "t2", -1]],
																			[["call", "Place If %n at %n %n if %n", 8, ["getParam", "x", "r"], ["readVariable", "t"], 0],
																				["call",
																					"Place If %n at %n %n if %n",
																					9,
																					["+", ["getParam", "x", "r"], 1],
																					["readVariable", "t"],
																					0],
																				["changeVar:by:", "t2", 1]]]]],
																["setVar:to:", "t3", ["randomFrom:to:", -2, 2]]]]]],
												["changeVar:by:", "t", 1],
												["doIfElse",
													["&",
														[">", ["readVariable", "last tree x"], "-999"],
														["|",
															["<", ["readVariable", "h"], "3"],
															["&",
																["<", ["readVariable", "h"], "5"],
																["<", ["randomFrom:to:", 0, 10], "5"]]]],
													[["call", "Place If %n at %n %n if %n", 19, ["getParam", "x", "r"], ["readVariable", "t"], 0]],
													[["call",
															"Place If %n at %n %n if %n",
															10,
															["-", ["getParam", "x", "r"], 1],
															["readVariable", "t"],
															0],
														["call", "Place If %n at %n %n if %n", 11, ["getParam", "x", "r"], ["readVariable", "t"], 0],
														["call",
															"Place If %n at %n %n if %n",
															12,
															["+", ["getParam", "x", "r"], 1],
															["readVariable", "t"],
															0],
														["changeVar:by:", "t", 1],
														["call",
															"Place If %n at %n %n if %n",
															13,
															["-", ["getParam", "x", "r"], 1],
															["readVariable", "t"],
															0],
														["call", "Place If %n at %n %n if %n", 14, ["getParam", "x", "r"], ["readVariable", "t"], 0],
														["call",
															"Place If %n at %n %n if %n",
															15,
															["+", ["getParam", "x", "r"], 1],
															["readVariable", "t"],
															0],
														["changeVar:by:", "t", 1],
														["call",
															"Place If %n at %n %n if %n",
															16,
															["-", ["getParam", "x", "r"], 1],
															["readVariable", "t"],
															0],
														["call", "Place If %n at %n %n if %n", 17, ["getParam", "x", "r"], ["readVariable", "t"], 0],
														["call",
															"Place If %n at %n %n if %n",
															18,
															["+", ["getParam", "x", "r"], 1],
															["readVariable", "t"],
															0]]]]]]]],
							[["doIf",
									["=", ["randomFrom:to:", 1, 3], "1"],
									[["setVar:to:",
											"index",
											["+",
												["+",
													["*", ["getParam", "y", "r"], ["readVariable", "MAP_WIDTH"]],
													["getParam", "x", "r"]],
												1]],
										["doIf",
											["=", ["getLine:ofList:", ["-", ["readVariable", "index"], ["readVariable", "MAP_WIDTH"]], "_Level"], "1"],
											[["call",
													"Place If %n at %n %n if %n",
													["randomFrom:to:", 86, 95],
													["getParam", "x", "r"],
													["getParam", "y", "r"],
													0]]]]]]]]],
				[914.4,
					1931.8,
					[["procDef", "Water Land", [], [], true],
						["setVar:to:",
							"index",
							["+",
								["*", ["readVariable", "MAP_WIDTH"], ["-", ["readVariable", "MAP_HEIGHT"], 16]],
								["randomFrom:to:", 50, ["-", ["rounded", ["\/", ["readVariable", "MAP_WIDTH"], 2]], 10]]]],
						["doRepeat",
							2,
							[["setVar:to:", "t", ["randomFrom:to:", 5, 10]],
								["doRepeat",
									["randomFrom:to:", 5, 7],
									[["doRepeat",
											["readVariable", "t"],
											[["setLine:ofList:to:", ["readVariable", "index"], "_Level", "160"], ["changeVar:by:", "index", 1]]],
										["changeVar:by:", "index", ["-", 0, ["readVariable", "t"]]],
										["changeVar:by:", "index", ["readVariable", "MAP_WIDTH_NEG"]]]],
								["setVar:to:",
									"index",
									["+",
										["*", ["readVariable", "MAP_WIDTH"], ["-", ["readVariable", "MAP_HEIGHT"], 16]],
										["randomFrom:to:",
											["rounded", ["\/", ["readVariable", "MAP_WIDTH"], 2]],
											["-", ["readVariable", "MAP_WIDTH"], 60]]]]]]]],
				[355,
					1486,
					[["doIf",
							[">", ["readVariable", "x"], ["-", ["readVariable", "MAP_WIDTH"], 60]],
							[["changeVar:by:",
									"y",
									["*",
										["-", ["*", ["readVariable", "MAP_HEIGHT"], 0.63], ["readVariable", "y"]],
										["\/", ["-", ["readVariable", "x"], ["-", ["readVariable", "MAP_WIDTH"], 60]], 120]]]]]]],
				[30, 281.35, [["setVar:to:", "Last User", 0]]],
				[41,
					2748.8,
					[["procDef", "Add Ores %n", ["cave upper"], [1], false],
						["lookLike:", "ores"],
						["call", "Add Seams %n %n replacing %n radius %n level %n %n", 29, 0.11, 21, 2.3, 1, 0],
						["call", "Add Seams %n %n replacing %n radius %n level %n %n", 2, 0.02, 21, 3, 1, 0],
						["call", "Add Cut %n replacing %n %n width %n upper %n len %n", 2, 21, 0.03, 0.4, ["getParam", "cave upper", "r"], 12],
						["call", "Add Seams %n %n replacing %n radius %n level %n %n", 27, 0.03, 21, 3.1, 1, 0],
						["call", "Add Seams %n %n replacing %n radius %n level %n %n", 76, 0.018, 21, 2, 0.45, 0],
						["call", "Add Seams %n %n replacing %n radius %n level %n %n", 81, 0.02, 21, 2, 0.5, 0],
						["call", "Add Seams %n %n replacing %n radius %n level %n %n", 72, 0.01, 2, 4.5, 1, 0],
						["call", "Add Seams %n %n replacing %n radius %n level %n %n", 110, 0.003, 21, 1, 0.35, 0],
						["call", "Add Seams %n %n replacing %n radius %n level %n %n", 229, 0.002, 21, 1, 0.5, 0],
						["call", "Add Seams %n %n replacing %n radius %n level %n %n", 231, 0.002, 21, 1, 0.5, 0],
						["call", "Add Seams %n %n replacing %n radius %n level %n %n", 233, 0.002, 21, 1, 0.5, 0],
						["call", "Add Seams %n %n replacing %n radius %n level %n %n", 235, 0.002, 21, 1, 0.5, 0],
						["call", "Add Seams %n %n replacing %n radius %n level %n %n", 237, 0.002, 21, 1, 0.5, 0],
						["call", "Add Seams %n %n replacing %n radius %n level %n %n", 141, 0.025, 21, 1.6, 0.44, 0]]],
				[891, 671, [["whenIReceive", "Level Ready to Play"], ["lookLike:", "mini"], ["hide"]]],
				[894,
					525,
					[["whenIReceive", "LightingAll"],
						["setVar:to:", "sea level", ["-", ["readVariable", "MAP_HEIGHT"], 40]],
						["comeToFront"],
						["lookLike:", "Lighting"],
						["show"]]],
				[901, 38, [["whenGreenFlag"], ["gotoX:y:", 0, 0], ["hide"]]]],
			"scriptComments": [[509.7, 2638.05, 150, 200, false, 1091, "Hellstone"],
				[298, 591, 269, 59, false, 693, "Warning - Also set in Lighting All"]],
			"sounds": [{
					"soundName": "pop",
					"soundID": 0,
					"md5": "83a9787d4cb6f3b7632b4ddfebf74367.wav",
					"sampleCount": 258,
					"rate": 11025,
					"format": ""
				}],
			"costumes": [{
					"costumeName": "terrain",
					"baseLayerID": 502,
					"baseLayerMD5": "9f33fd390e3ab716b0f3e67ceeabf646.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "ores",
					"baseLayerID": 503,
					"baseLayerMD5": "69e3f29261deb6a833f99b2153673da5.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "water",
					"baseLayerID": 504,
					"baseLayerMD5": "f67493d74f6f3497463b260e27ad34f9.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "Settling Water",
					"baseLayerID": 505,
					"baseLayerMD5": "2c8542c943159d8c991308812adde2f5.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "Planting",
					"baseLayerID": 506,
					"baseLayerMD5": "210dd91c4420eba74b48921cf79ee5a7.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "Lighting",
					"baseLayerID": 507,
					"baseLayerMD5": "d4a6288dfb46e09f0d2b43332fe8e3d0.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "loading",
					"baseLayerID": 508,
					"baseLayerMD5": "ecf0b0b7da163e5a0f25b70f1d15fca4.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "mini",
					"baseLayerID": 427,
					"baseLayerMD5": "d36f6603ec293d2c2198d3ea05109fe0.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 0
				}],
			"currentCostumeIndex": 7,
			"scratchX": 0,
			"scratchY": 0,
			"scale": 1,
			"direction": 90,
			"rotationStyle": "none",
			"isDraggable": false,
			"indexInLibrary": 6,
			"visible": false,
			"spriteInfo": {
			}
		},
		{
			"target": "Multiplayer",
			"cmd": "getVar:",
			"param": "BufferTime",
			"color": 15629590,
			"label": "Multiplayer: BufferTime",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 222,
			"y": 263,
			"visible": false
		},
		{
			"target": "Multiplayer",
			"cmd": "getVar:",
			"param": "@Player Count",
			"color": 15629590,
			"label": "Multiplayer: @Player Count",
			"mode": 2,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 403,
			"y": 25,
			"visible": false
		},
		{
			"objName": "Health10",
			"variables": [{
					"name": "Health",
					"value": "-1",
					"isPersistent": false
				},
				{
					"name": "type",
					"value": "1",
					"isPersistent": false
				}],
			"scripts": [[35,
					55,
					[["whenIReceive", "Clone Sprites"],
						["setVar:to:", "Health", "-1"],
						["doIfElse",
							["=", ["getAttribute:of:", "Peaceful?", "Frame"], "0"],
							[["setVar:to:", "type", "1"],
								["doIfElse",
									["=", ["getAttribute:of:", "@Offline", "Multiplayer"], "0"],
									[["gotoX:y:", 150, 119]],
									[["gotoX:y:", 148, 140]]],
								["lookLike:", "Health10"],
								["setSizeTo:", 100],
								["show"],
								["comeToFront"],
								["createCloneOf", "_myself_"]],
							[["setVar:to:", "type", "0"], ["hide"]]]]],
				[408, 144, [["whenCloned"], ["setVar:to:", "type", "2"], ["setGraphicEffect:to:", "ghost", 75]]],
				[410, 54, [["whenIReceive", "Hide All"], ["hide"]]],
				[677,
					64,
					[["whenIReceive", "Back_clouds"],
						["doIfElse",
							["=", ["readVariable", "TICK"], "3"],
							[["doIf", ["=", ["readVariable", "type"], "2"], [["comeToFront"]]]],
							[["doIfElse",
									["=", ["readVariable", "TICK"], "4"],
									[["doIf", ["=", ["readVariable", "type"], "1"], [["comeToFront"]]]],
									null]]]]],
				[36,
					550,
					[["whenIReceive", "animate"],
						["doIfElse",
							["=", ["readVariable", "type"], "1"],
							[["doIf",
									["not", ["=", ["readVariable", "Health"], ["computeFunction:of:", "ceiling", ["getAttribute:of:", "Player Health", "Player"]]]],
									[["setVar:to:", "Health", ["computeFunction:of:", "ceiling", ["getAttribute:of:", "Player Health", "Player"]]],
										["call", "Update Costume"],
										["comeToFront"]]]],
							[["doIf",
									["=", ["readVariable", "type"], "2"],
									[["doIf",
											["not", ["=", ["readVariable", "Health"], ["computeFunction:of:", "ceiling", ["getAttribute:of:", "Player Max Health", "Player"]]]],
											[["setVar:to:", "Health", ["computeFunction:of:", "ceiling", ["getAttribute:of:", "Player Max Health", "Player"]]], ["call", "Update Costume"]]]]]]]]],
				[683.75,
					575.05,
					[["procDef", "Update Costume", [], [], true],
						["doIfElse",
							[">", ["readVariable", "Health"], "0"],
							[["lookLike:", ["readVariable", "Health"]], ["show"]],
							[["hide"]]]]]],
			"sounds": [{
					"soundName": "pop",
					"soundID": 0,
					"md5": "83a9787d4cb6f3b7632b4ddfebf74367.wav",
					"sampleCount": 258,
					"rate": 11025,
					"format": ""
				}],
			"costumes": [{
					"costumeName": "Health1",
					"baseLayerID": 509,
					"baseLayerMD5": "854c0de9041cb46fc8a8fa2403a1c324.png",
					"bitmapResolution": 2,
					"rotationCenterX": 118,
					"rotationCenterY": 10
				},
				{
					"costumeName": "Health2",
					"baseLayerID": 510,
					"baseLayerMD5": "5a69c9b57639158ed58ef4e61e41bf7b.png",
					"bitmapResolution": 2,
					"rotationCenterX": 118,
					"rotationCenterY": 10
				},
				{
					"costumeName": "Health3",
					"baseLayerID": 511,
					"baseLayerMD5": "659891cedbed8d8ea618b8bc08c23aa2.png",
					"bitmapResolution": 2,
					"rotationCenterX": 118,
					"rotationCenterY": 10
				},
				{
					"costumeName": "Health4",
					"baseLayerID": 512,
					"baseLayerMD5": "faaa1a166a542e67f3e7af860bf20e34.png",
					"bitmapResolution": 2,
					"rotationCenterX": 118,
					"rotationCenterY": 10
				},
				{
					"costumeName": "Health5",
					"baseLayerID": 513,
					"baseLayerMD5": "4651a65170a4f62eb989e2ba3b0f335c.png",
					"bitmapResolution": 2,
					"rotationCenterX": 118,
					"rotationCenterY": 10
				},
				{
					"costumeName": "Health6",
					"baseLayerID": 514,
					"baseLayerMD5": "d61a633954c458ef4f2bd9833af256d8.png",
					"bitmapResolution": 2,
					"rotationCenterX": 118,
					"rotationCenterY": 10
				},
				{
					"costumeName": "Health7",
					"baseLayerID": 515,
					"baseLayerMD5": "a7f08a36c623b8a32b3bb4365f95b2c7.png",
					"bitmapResolution": 2,
					"rotationCenterX": 118,
					"rotationCenterY": 10
				},
				{
					"costumeName": "Health8",
					"baseLayerID": 516,
					"baseLayerMD5": "471c812b0b85fb234a3245d3a1ad0c03.png",
					"bitmapResolution": 2,
					"rotationCenterX": 118,
					"rotationCenterY": 10
				},
				{
					"costumeName": "Health9",
					"baseLayerID": 517,
					"baseLayerMD5": "4f44f13e48c3c0a65e8540c2241b95fc.png",
					"bitmapResolution": 2,
					"rotationCenterX": 118,
					"rotationCenterY": 10
				},
				{
					"costumeName": "Health10",
					"baseLayerID": 518,
					"baseLayerMD5": "110f543510c896957109d7dfe2c92336.png",
					"bitmapResolution": 2,
					"rotationCenterX": 118,
					"rotationCenterY": 10
				}],
			"currentCostumeIndex": 9,
			"scratchX": 150,
			"scratchY": 119,
			"scale": 1,
			"direction": 90,
			"rotationStyle": "normal",
			"isDraggable": false,
			"indexInLibrary": 21,
			"visible": false,
			"spriteInfo": {
			}
		},
		{
			"objName": "Cursor",
			"variables": [{
					"name": "x",
					"value": 250,
					"isPersistent": false
				},
				{
					"name": "y",
					"value": 129,
					"isPersistent": false
				},
				{
					"name": "Tile Index",
					"value": 0,
					"isPersistent": false
				},
				{
					"name": "Tile Is Solid",
					"value": "171",
					"isPersistent": false
				},
				{
					"name": "digIdx",
					"value": 0,
					"isPersistent": false
				},
				{
					"name": "digTime",
					"value": "0",
					"isPersistent": false
				},
				{
					"name": "distance",
					"value": 5.972215934126294,
					"isPersistent": false
				},
				{
					"name": "ToolMode",
					"value": "1",
					"isPersistent": false
				},
				{
					"name": "around",
					"value": "211",
					"isPersistent": false
				},
				{
					"name": "find slot id",
					"value": 42350,
					"isPersistent": false
				},
				{
					"name": "tmp",
					"value": "",
					"isPersistent": false
				},
				{
					"name": "Tile Type",
					"value": "0",
					"isPersistent": false
				},
				{
					"name": "digType",
					"value": 0,
					"isPersistent": false
				},
				{
					"name": "ToolDrag",
					"value": "1",
					"isPersistent": false
				},
				{
					"name": "RMul",
					"value": "7",
					"isPersistent": false
				},
				{
					"name": "tok",
					"value": 21,
					"isPersistent": false
				},
				{
					"name": "tok_i",
					"value": 1.158878504672897,
					"isPersistent": false
				},
				{
					"name": "recepeStr",
					"value": "10",
					"isPersistent": false
				},
				{
					"name": "i",
					"value": "211",
					"isPersistent": false
				},
				{
					"name": "Tile Say",
					"value": 0,
					"isPersistent": false
				},
				{
					"name": "Inside Idx",
					"value": 0,
					"isPersistent": false
				},
				{
					"name": "lifeTick",
					"value": 0,
					"isPersistent": false
				},
				{
					"name": "Recipe Offset",
					"value": 0,
					"isPersistent": false
				},
				{
					"name": "HoverTile",
					"value": "0",
					"isPersistent": false
				},
				{
					"name": "reach",
					"value": "3.3",
					"isPersistent": false
				},
				{
					"name": "MouseRelease",
					"value": "0",
					"isPersistent": false
				},
				{
					"name": "BuffID",
					"value": "0",
					"isPersistent": false
				},
				{
					"name": "BuffTime",
					"value": "0",
					"isPersistent": false
				},
				{
					"name": "mat",
					"value": "0",
					"isPersistent": false
				},
				{
					"name": "Tool Type",
					"value": "1001",
					"isPersistent": false
				},
				{
					"name": "INF_WAT1",
					"value": 42350,
					"isPersistent": false
				},
				{
					"name": "CycleLava",
					"value": 14,
					"isPersistent": false
				},
				{
					"name": "PlaceTimer",
					"value": 0,
					"isPersistent": false
				},
				{
					"name": "Next Tile Say",
					"value": "",
					"isPersistent": false
				},
				{
					"name": "lifeTickX",
					"value": 246.81525263229187,
					"isPersistent": false
				},
				{
					"name": "Cursor Visible",
					"value": 0,
					"isPersistent": false
				},
				{
					"name": "Mask",
					"value": 0,
					"isPersistent": false
				}],
			"lists": [{
					"listName": "Grow",
					"contents": [],
					"isPersistent": false,
					"x": 250,
					"y": 55,
					"width": 232,
					"height": 307,
					"visible": false
				},
				{
					"listName": "_Recipes",
					"contents": ["1. Recipe Name",
						"2. Item number",
						"3. Count Crafted",
						"4. Crafting Station (0=hands, 1=work bench, 2=furnace, 3=sawmill, 4=anvil, 5=heavy work bench, 6=Hellstone forge, 7=Glass Kiln, 8=Demon Alter)",
						"5. Recipe Items ### ### ### (tile ids - lowest first)",
						"6. Recipe Counts n n n (tile counts)",
						"",
						"Work Bench",
						"37",
						"1",
						"0",
						"25",
						"10",
						"",
						"Furnace",
						"38",
						"1",
						"0",
						"21 25",
						"8 3",
						"",
						"Anvil",
						"59",
						"1",
						"1",
						"39",
						"4",
						"",
						"Sawmill",
						"60",
						"1",
						"1",
						"25 39 61",
						"5 2 1",
						"",
						"Heavy Work Bench",
						"123",
						"1",
						"4",
						"25 39",
						"7 5",
						"",
						"Glass Kiln",
						"248",
						"1",
						"4",
						"39 47",
						"10 6",
						"",
						"Torch",
						"47",
						"3",
						"0",
						"25",
						"1",
						"",
						"Stone Brick",
						"42",
						"1",
						"2",
						"21",
						"1",
						"",
						"Stone Slab",
						"114",
						"1",
						"5",
						"21",
						"1",
						"",
						"Sand Brick",
						"51",
						"1",
						"2",
						"27",
						"1",
						"",
						"Sand Slab",
						"115",
						"1",
						"5",
						"27",
						"1",
						"",
						"Diamond Slab",
						"113",
						"20",
						"5",
						"68 111",
						"20 1",
						"",
						"Brick",
						"74",
						"1",
						"2",
						"72",
						"1",
						"",
						"Silver Brick",
						"84",
						"1",
						"2",
						"21 81",
						"1 1",
						"",
						"Gold Brick",
						"79",
						"1",
						"2",
						"21 76",
						"1 1",
						"",
						"Glass",
						"68",
						"1",
						"2",
						"27",
						"1",
						"",
						"Iron Bar",
						"39",
						"1",
						"2",
						"29",
						"1",
						"",
						"Silver Bar",
						"82",
						"1",
						"2",
						"81",
						"2",
						"",
						"Gold Bar",
						"77",
						"1",
						"2",
						"76",
						"2",
						"",
						"Platinum Bar",
						"142",
						"1",
						"2",
						"141",
						"2",
						"",
						"Hellstone Bar",
						"219",
						"1",
						"6",
						"218 194",
						"2 1",
						"",
						"Demonite Bar",
						"297",
						"1",
						"2",
						"295",
						"1",
						"",
						"Chocolate",
						"154",
						"5",
						"2",
						"152",
						"1",
						"",
						"Mushroom Block",
						"274",
						"4",
						"3",
						"94",
						"1",
						"",
						"Wooden Platform",
						"36",
						"1",
						"0",
						"25",
						"1",
						"",
						"Glass Platform",
						"255",
						"2",
						"7",
						"68",
						"1",
						"",
						"Beam",
						"127",
						"2",
						"3",
						"25",
						"1",
						"",
						"Wooden Door",
						"35",
						"1",
						"1",
						"25",
						"5",
						"",
						"Iron Door",
						"239",
						"1",
						"4",
						"39",
						"3",
						"",
						"Glass Door",
						"240",
						"1",
						"7",
						"68",
						"3",
						"",
						"Obsidian Door",
						"241",
						"1",
						"4",
						"194",
						"5",
						"",
						"Chest",
						"57",
						"1",
						"3",
						"25 39",
						"6 2",
						"",
						"Sign",
						"58",
						"1",
						"1",
						"25",
						"4",
						"",
						"Chair",
						"46",
						"1",
						"1",
						"25",
						"3",
						"",
						"Bed",
						"30",
						"1",
						"3",
						"25",
						"10",
						"",
						"Glass Bed",
						"260",
						"1",
						"7",
						"68",
						"8",
						"",
						"Obsidian Bed",
						"263",
						"1",
						"6",
						"194",
						"8",
						"",
						"Gold Bed",
						"266",
						"1",
						"4",
						"77",
						"8",
						"",
						"Mushroom Bed",
						"269",
						"1",
						"3",
						"274",
						"8",
						"",
						"Glass Lantern",
						"251",
						"1",
						"7",
						"68 47",
						"2 1",
						"",
						"Chandelier",
						"52",
						"1",
						"4",
						"39 47 61",
						"2 2 1",
						"",
						"Gold Chandelier",
						"98",
						"1",
						"4",
						"47 61 77",
						"2 1 2",
						"",
						"Glass Chandelier",
						"252",
						"1",
						"7",
						"47 61 68",
						"2 1 2",
						"",
						"Candelabra",
						"99",
						"1",
						"4",
						"47 77",
						"2 3",
						"",
						"Bench",
						"53",
						"1",
						"3",
						"25",
						"4",
						"",
						"Sofa",
						"128",
						"1",
						"3",
						"25",
						"5",
						"",
						"Dresser",
						"54",
						"1",
						"3",
						"25",
						"7",
						"",
						"Wooden Sink",
						"254",
						"1",
						"1",
						"25 215",
						"3 1",
						"",
						"Table",
						"55",
						"1",
						"1",
						"25",
						"4",
						"",
						"Iron Table",
						"278",
						"1",
						"4",
						"39",
						"4",
						"",
						"Obsidian Table",
						"281",
						"1",
						"6",
						"194",
						"4",
						"",
						"Mushroom Table",
						"284",
						"1",
						"3",
						"274",
						"4",
						"",
						"Glass Table",
						"250",
						"1",
						"7",
						"68",
						"4",
						"",
						"Barrel",
						"56",
						"1",
						"3",
						"25 39",
						"5 1",
						"",
						"Chain",
						"61",
						"10",
						"4",
						"39",
						"1",
						"",
						"Bucket",
						"214",
						"1",
						"4",
						"39",
						"2",
						"",
						"Grandfather Clock",
						"62",
						"1",
						"3",
						"25 39 68",
						"5 2 3",
						"",
						"Bookcase",
						"121",
						"1",
						"3",
						"25",
						"10",
						"",
						"Piano",
						"131",
						"1",
						"3",
						"25",
						"9",
						"",
						"Fence",
						"96",
						"4",
						"1",
						"25",
						"1",
						"",
						"Iron Fence",
						"97",
						"4",
						"4",
						"39",
						"1",
						"",
						"Bath Tub",
						"101",
						"1",
						"4",
						"39",
						"4",
						"",
						"Trash Can",
						"102",
						"1",
						"4",
						"39",
						"3",
						"",
						"Toilet",
						"103",
						"1",
						"4",
						"39",
						"3",
						"",
						"Cooking Pot",
						"104",
						"1",
						"4",
						"25 39",
						"1 4",
						"",
						"Pot Plant",
						"116",
						"1",
						"1",
						"72 85",
						"1 1",
						"",
						"Bug Net",
						"124",
						"1",
						"1",
						"25 82",
						"2 1",
						"",
						"Wooden Sword",
						"137",
						"1",
						"1",
						"25",
						"5",
						"",
						"Iron Sword",
						"138",
						"1",
						"4",
						"39",
						"3",
						"",
						"Gold Sword",
						"145",
						"1",
						"4",
						"77",
						"3",
						"",
						"Platinum Sword",
						"148",
						"1",
						"4",
						"142",
						"3",
						"",
						"Iron Axe",
						"23",
						"1",
						"4",
						"25 39",
						"1 3",
						"",
						"Gold Axe",
						"144",
						"1",
						"4",
						"25 77",
						"1 3",
						"",
						"Platinum Axe",
						"147",
						"1",
						"4",
						"25 142",
						"1 3",
						"",
						"Iron Pickaxe",
						"22",
						"1",
						"4",
						"25 39",
						"2 4",
						"",
						"Gold Pickaxe",
						"143",
						"1",
						"4",
						"25 77",
						"2 4",
						"",
						"Platinum Pickaxe",
						"146",
						"1",
						"4",
						"25 142",
						"2 4",
						"",
						"Diamond Staff",
						"159",
						"1",
						"4",
						"111 142",
						"2 5",
						"",
						"Molten Pickaxe",
						"157",
						"1",
						"4",
						"219",
						"5",
						"",
						"Light's Bane",
						"298",
						"1",
						"4",
						"297",
						"10",
						"",
						"Fiery Greatsword",
						"259",
						"1",
						"4",
						"219",
						"5",
						"",
						"Silver Coin",
						"227",
						"1",
						"0",
						"226",
						"100",
						"",
						"Gold Coin",
						"228",
						"1",
						"0",
						"227",
						"100",
						"",
						"Suspicious Looking Eye",
						"293",
						"1",
						"8",
						"150",
						"6"],
					"isPersistent": false,
					"x": 56,
					"y": 32,
					"width": 384,
					"height": 270,
					"visible": false
				},
				{
					"listName": "sort",
					"contents": ["0",
						4,
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						8,
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						5,
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						2,
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						1,
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						1,
						1,
						1,
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						50,
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						"0",
						53,
						1,
						"0",
						1,
						"0"],
					"isPersistent": false,
					"x": 107,
					"y": 43,
					"width": 375,
					"height": 319,
					"visible": false
				},
				{
					"listName": "Stations",
					"contents": ["0", "0", "0", "0", "0", "0", "0", "0"],
					"isPersistent": false,
					"x": 89,
					"y": 110,
					"width": 393,
					"height": 252,
					"visible": false
				},
				{
					"listName": "tmpList",
					"contents": ["227"],
					"isPersistent": false,
					"x": 287,
					"y": 116,
					"width": 195,
					"height": 246,
					"visible": false
				},
				{
					"listName": "Liquid",
					"contents": [],
					"isPersistent": false,
					"x": 48,
					"y": 77,
					"width": 384,
					"height": 285,
					"visible": false
				},
				{
					"listName": "LiquidIgnore",
					"contents": [],
					"isPersistent": false,
					"x": 297,
					"y": 293,
					"width": 185,
					"height": 179,
					"visible": false
				}],
			"scripts": [[1088.6,
					701.4,
					[["procDef", "solid around %n %n %b", ["x", "y", "notAbove"], [1, 1, false], true],
						["setVar:to:", "around", 0],
						["doIf",
							["not", ["getParam", "notAbove", "b"]],
							[["call", "Check Tile at x: %n y: %n", ["getParam", "x", "r"], ["+", ["getParam", "y", "r"], 1]],
								["doIf",
									["|", [">", ["readVariable", "Tile Is Solid"], "7"], ["=", ["readVariable", "Tile Is Solid"], "0.5"]],
									[["changeVar:by:", "around", 1]]]]],
						["call", "Check Tile at x: %n y: %n", ["getParam", "x", "r"], ["-", ["getParam", "y", "r"], 1]],
						["doIf",
							["|", [">", ["readVariable", "Tile Is Solid"], "6"], ["=", ["readVariable", "Tile Is Solid"], "0.5"]],
							[["changeVar:by:", "around", 1]]],
						["call", "Check Tile at x: %n y: %n", ["-", ["getParam", "x", "r"], 1], ["getParam", "y", "r"]],
						["doIf",
							["|", [">", ["readVariable", "Tile Is Solid"], "6"], ["=", ["readVariable", "Tile Is Solid"], "0.5"]],
							[["changeVar:by:", "around", 1]]],
						["call", "Check Tile at x: %n y: %n", ["+", ["getParam", "x", "r"], 1], ["getParam", "y", "r"]],
						["doIf",
							["|", [">", ["readVariable", "Tile Is Solid"], "6"], ["=", ["readVariable", "Tile Is Solid"], "0.5"]],
							[["changeVar:by:", "around", 1]]]]],
				[1078.8,
					522.4,
					[["procDef", "distance %n %n", ["x", "y"], [1, 1], true],
						["setVar:to:",
							"distance",
							["computeFunction:of:",
								"sqrt",
								["+",
									["*", ["getParam", "x", "r"], ["getParam", "x", "r"]],
									["*", ["getParam", "y", "r"], ["getParam", "y", "r"]]]]]]],
				[1788.4,
					79,
					[["procDef", "Drop a Block %n", ["inv id"], [1], true],
						["setVar:to:",
							"find slot id",
							["-", ["getLine:ofList:", ["*", ["getParam", "inv id", "r"], 2], "_inv"], 1]],
						["setLine:ofList:to:", ["*", ["getParam", "inv id", "r"], 2], "_inv", ["readVariable", "find slot id"]],
						["doIf",
							["=", ["readVariable", "find slot id"], "0"],
							[["setLine:ofList:to:", ["-", ["*", ["getParam", "inv id", "r"], 2], 1], "_inv", "0"]]],
						["setVar:to:", "inv_change", "2"]]],
				[2589,
					41.4,
					[["procDef", "Get Tool Drag", [], [], true],
						["doIfElse",
							[">", ["mouseY"], "34"],
							[["doIfElse",
									["&",
										["<", ["computeFunction:of:", "abs", ["-", ["mouseX"], 74]], "15"],
										["<", ["computeFunction:of:", "abs", ["-", ["mouseY"], 134]], "15"]],
									[["doIfElse",
											[">", ["getAttribute:of:", "Mode", "Player"], "0"],
											[["setVar:to:", "ToolDrag", "-99"]],
											[["setVar:to:", "ToolDrag", "0"]]]],
									[["setVar:to:", "ToolDrag", ["rounded", ["\/", ["+", ["mouseX"], 224], -32]]],
										["doIfElse",
											["|", [">", ["readVariable", "ToolDrag"], "-1"], ["<", ["readVariable", "ToolDrag"], "-8"]],
											[["setVar:to:", "ToolDrag", "0"]],
											[["changeVar:by:",
													"ToolDrag",
													["*", ["rounded", ["\/", ["-", 134, ["mouseY"]], -32]], 8]],
												["doIf",
													["|", [">", ["readVariable", "ToolDrag"], "-1"], ["<", ["readVariable", "ToolDrag"], "-24"]],
													[["setVar:to:", "ToolDrag", "0"]]]]]]]],
							[["doIfElse",
									["=", ["getAttribute:of:", "Mode", "Player"], "1"],
									[["setVar:to:", "ToolDrag", ["rounded", ["\/", ["+", ["mouseX"], 224], -32]]],
										["doIfElse",
											["|", [">", ["readVariable", "ToolDrag"], "-1"], ["<", ["readVariable", "ToolDrag"], "-4"]],
											[["setVar:to:", "ToolDrag", "0"]],
											[["changeVar:by:",
													"ToolDrag",
													["*", ["rounded", ["\/", ["-", 202, ["mouseY"]], -32]], 4]],
												["doIf",
													["|", [">", ["readVariable", "ToolDrag"], "-25"], ["<", ["readVariable", "ToolDrag"], "-44"]],
													[["setVar:to:", "ToolDrag", "0"]]]]]],
									[["doIfElse",
											["=", ["getAttribute:of:", "Mode", "Player"], "2"],
											[["setVar:to:", "ToolDrag", ["rounded", ["\/", ["+", ["mouseX"], 224], -32]]],
												["doIfElse",
													["|", [">", ["readVariable", "ToolDrag"], "-1"], ["<", ["readVariable", "ToolDrag"], "-8"]],
													[["setVar:to:", "ToolDrag", "0"]],
													[["changeVar:by:",
															"ToolDrag",
															["*", ["rounded", ["\/", ["-", 115, ["mouseY"]], -32]], 8]],
														["doIf",
															["|", [">", ["readVariable", "ToolDrag"], "-25"], ["<", ["readVariable", "ToolDrag"], "-40"]],
															[["setVar:to:", "ToolDrag", "0"]]]]]],
											null]]]]]]],
				[3422,
					71,
					[["procDef", "Get LData For Tile %n", ["tile index"], [1], true],
						["setVar:to:", "i", "1"],
						["doUntil",
							["|",
								[">", ["readVariable", "i"], ["lineCountOfList:", "_LData"]],
								["=", ["getLine:ofList:", ["readVariable", "i"], "_LData"], ["getParam", "tile index", "r"]]],
							[["changeVar:by:", "i", ["getLine:ofList:", ["+", ["readVariable", "i"], 1], "_LData"]]]]]],
				[607, 163, [["whenIReceive", "Mega Green"], ["setVar:to:", "lifeTick", "-50"]]],
				[2614,
					2773.4,
					[["procDef", "Calculate Recipees", [], [], true],
						["deleteLine:ofList:", "all", "sort"],
						["deleteLine:ofList:", "all", "Stations"],
						["setVar:to:", "x", ["-", ["getAttribute:of:", "x", "Player"], 2]],
						["setVar:to:", "y", ["-", ["getAttribute:of:", "y", "Player"], 1]],
						["doIfElse",
							["=", ["readVariable", "BuffID"], "107"],
							[["doRepeat",
									["\/", ["lineCountOfList:", "_TileData"], ["readVariable", "TMul"]],
									[["append:toList:", "99", "sort"]]],
								["setLine:ofList:to:", 111, "sort", "0"],
								["setLine:ofList:to:", 219, "sort", "0"],
								["setLine:ofList:to:", 226, "sort", "0"],
								["setLine:ofList:to:", 227, "sort", "0"],
								["setLine:ofList:to:", 228, "sort", "0"],
								["doRepeat", 8, [["append:toList:", "1", "Stations"]]],
								["setLine:ofList:to:", 6, "Stations", "0"],
								["setLine:ofList:to:", 8, "Stations", "0"]],
							[["doRepeat",
									["\/", ["lineCountOfList:", "_TileData"], ["readVariable", "TMul"]],
									[["append:toList:", "0", "sort"]]],
								["doRepeat", 8, [["append:toList:", "0", "Stations"]]]]],
						["setVar:to:", "find slot id", "2"],
						["doRepeat",
							24,
							[["setVar:to:", "tok_i", ["getLine:ofList:", ["readVariable", "find slot id"], "_inv"]],
								["doIf",
									[">", ["readVariable", "tok_i"], "0"],
									[["setVar:to:", "tok", ["getLine:ofList:", ["-", ["readVariable", "find slot id"], 1], "_inv"]],
										["setLine:ofList:to:",
											["readVariable", "tok"],
											"sort",
											["+", ["getLine:ofList:", ["readVariable", "tok"], "sort"], ["readVariable", "tok_i"]]]]],
								["changeVar:by:", "find slot id", 2]]],
						["doRepeat",
							4,
							[["doRepeat",
									5,
									[["call", "Check Tile at x: %n y: %n", ["readVariable", "x"], ["readVariable", "y"]],
										["doIf", ["=", ["readVariable", "Tile Type"], "37"], [["setLine:ofList:to:", 1, "Stations", "1"]]],
										["doIf", ["=", ["readVariable", "Tile Type"], "38"], [["setLine:ofList:to:", 2, "Stations", "1"]]],
										["doIf", ["=", ["readVariable", "Tile Type"], "60"], [["setLine:ofList:to:", 3, "Stations", "1"]]],
										["doIf", ["=", ["readVariable", "Tile Type"], "59"], [["setLine:ofList:to:", 4, "Stations", "1"]]],
										["doIf", ["=", ["readVariable", "Tile Type"], "123"], [["setLine:ofList:to:", 5, "Stations", "1"]]],
										["doIf",
											["=", ["readVariable", "Tile Type"], "221"],
											[["setLine:ofList:to:", 2, "Stations", "1"], ["setLine:ofList:to:", 6, "Stations", "1"]]],
										["doIf", ["=", ["readVariable", "Tile Type"], "248"], [["setLine:ofList:to:", 7, "Stations", "1"]]],
										["doIf", ["=", ["readVariable", "Tile Type"], "294"], [["setLine:ofList:to:", 8, "Stations", "1"]]],
										["changeVar:by:", "x", 1]]],
								["changeVar:by:", "y", 1],
								["changeVar:by:", "x", -5]]],
						["setVar:to:", "find slot id", ["-", 25, ["readVariable", "Recipe Offset"]]],
						["setVar:to:", "around", ["readVariable", "RMul"]],
						["doUntil",
							[">", ["readVariable", "around"], ["lineCountOfList:", "_Recipes"]],
							[["setVar:to:", "tmp", ["getLine:ofList:", ["+", ["readVariable", "around"], 4], "_Recipes"]],
								["doIf",
									["|",
										["=", ["readVariable", "tmp"], "0"],
										[">", ["getLine:ofList:", ["readVariable", "tmp"], "Stations"], "0"]],
									[["doIf",
											["&", [">", ["readVariable", "find slot id"], "24"], ["<", ["readVariable", "find slot id"], "45"]],
											[["setLine:ofList:to:",
													["-", ["*", ["readVariable", "find slot id"], 2], 1],
													"_inv",
													["getLine:ofList:", ["+", ["readVariable", "around"], 2], "_Recipes"]],
												["deleteLine:ofList:", "all", "tmpList"],
												["setVar:to:", "tmp", ["getLine:ofList:", ["+", ["readVariable", "around"], 5], "_Recipes"]],
												["setVar:to:", "tok_i", "1"],
												["call", "Next Token"],
												["doUntil",
													["=", ["readVariable", "tok"], ""],
													[["append:toList:", ["readVariable", "tok"], "tmpList"], ["call", "Next Token"]]],
												["setVar:to:", "tmp", ["getLine:ofList:", ["+", ["readVariable", "around"], 6], "_Recipes"]],
												["setVar:to:", "tok_i", "1"],
												["setVar:to:", "digIdx", "1"],
												["doRepeat",
													["lineCountOfList:", "tmpList"],
													[["call", "Next Token"],
														["doIf",
															["<", ["getLine:ofList:", ["getLine:ofList:", ["readVariable", "digIdx"], "tmpList"], "sort"], ["readVariable", "tok"]],
															[["setVar:to:", "digIdx", "999"]]],
														["changeVar:by:", "digIdx", 1]]],
												["doIfElse",
													["<", ["readVariable", "digIdx"], "999"],
													[["setLine:ofList:to:",
															["*", ["readVariable", "find slot id"], 2],
															"_inv",
															["getLine:ofList:", ["+", ["readVariable", "around"], 3], "_Recipes"]]],
													[["setLine:ofList:to:", ["*", ["readVariable", "find slot id"], 2], "_inv", "-1"]]]]],
										["changeVar:by:", "find slot id", 1]]],
								["changeVar:by:", "around", ["readVariable", "RMul"]]]],
						["doIf", ["<", ["readVariable", "find slot id"], "25"], [["setVar:to:", "find slot id", "25"]]],
						["doUntil",
							[">", ["readVariable", "find slot id"], "44"],
							[["setLine:ofList:to:", ["-", ["*", ["readVariable", "find slot id"], 2], 1], "_inv", "0"],
								["setLine:ofList:to:", ["*", ["readVariable", "find slot id"], 2], "_inv", "0"],
								["changeVar:by:", "find slot id", 1]]],
						["setVar:to:", "digIdx", 0]]],
				[608,
					264,
					[["whenKeyPressed", "g"],
						["doIf",
							["|", ["=", ["getUserName"], "griffpatch"], ["=", ["getUserName"], "griffpatch_tutor"]],
							[["doIf",
									["=", ["getAttribute:of:", "Chatting", "Safe Chat"], "0"],
									[["doIfElse",
											["=", ["readVariable", "reach"], "10"],
											[["setVar:to:", "reach", "3.3"]],
											[["setVar:to:", "reach", "10"]]]]]]]]],
				[2605.7, 2658.7, [["whenIReceive", "Calc Recipe"], ["setVar:to:", "Recipe Offset", 0], ["call", "Calculate Recipees"]]],
				[2611,
					1298.8,
					[["procDef", "Do Craft %n %n", ["item", "count"], [1, 1], true],
						["call", "Find Slot Typ %n %b", ["getParam", "item", "r"], false],
						["doIfElse",
							["=", ["readVariable", "find slot id"], "0"],
							[["setVar:to:", "tok_i", "0"]],
							[["setLine:ofList:to:",
									["*", ["readVariable", "find slot id"], 2],
									"_inv",
									["+",
										["getLine:ofList:", ["*", ["readVariable", "find slot id"], 2], "_inv"],
										["getParam", "count", "r"]]],
								["doIfElse",
									["=", ["readVariable", "BuffID"], "107"],
									[["changeVar:by:", "BuffTime", -1]],
									[["setVar:to:", "around", ["readVariable", "RMul"]],
										["doUntil",
											[">", ["readVariable", "around"], ["lineCountOfList:", "_Recipes"]],
											[["doIf",
													["=",
														["getParam", "item", "r"],
														["getLine:ofList:", ["+", ["readVariable", "around"], 2], "_Recipes"]],
													[["setVar:to:", "tmp", ["getLine:ofList:", ["+", ["readVariable", "around"], 5], "_Recipes"]],
														["setVar:to:", "tok_i", "1"],
														["deleteLine:ofList:", "all", "sort"],
														["call", "Next Token"],
														["doUntil",
															["=", ["readVariable", "tok"], ""],
															[["append:toList:", ["readVariable", "tok"], "sort"], ["call", "Next Token"]]],
														["setVar:to:", "tmp", ["getLine:ofList:", ["+", ["readVariable", "around"], 6], "_Recipes"]],
														["setVar:to:", "tok_i", "1"],
														["call", "Next Token"],
														["doUntil",
															["=", ["readVariable", "tok"], ""],
															[["doUntil",
																	["<", ["readVariable", "tok"], "1"],
																	[["call", "Find Slot Typ %n %b", ["getLine:ofList:", 1, "sort"], ["not", false]],
																		["doIfElse",
																			[">", ["readVariable", "find slot id"], "0"],
																			[["setVar:to:",
																					"digIdx",
																					["-", ["getLine:ofList:", ["*", ["readVariable", "find slot id"], 2], "_inv"], ["readVariable", "tok"]]],
																				["doIfElse",
																					["<", ["readVariable", "digIdx"], "0"],
																					[["setVar:to:", "tok", ["-", 0, ["readVariable", "digIdx"]]], ["setVar:to:", "digIdx", "0"]],
																					[["setVar:to:", "tok", "0"]]],
																				["setLine:ofList:to:", ["*", ["readVariable", "find slot id"], 2], "_inv", ["readVariable", "digIdx"]],
																				["doIf",
																					["=", ["readVariable", "digIdx"], "0"],
																					[["setLine:ofList:to:", ["-", ["*", ["readVariable", "find slot id"], 2], 1], "_inv", "0"]]]],
																			[["setVar:to:", "tok", "0"]]]]],
																["call", "Next Token"],
																["deleteLine:ofList:", 1, "sort"]]],
														["setVar:to:", "around", "999999"]]],
												["changeVar:by:", "around", ["readVariable", "RMul"]]]]]],
								["setVar:to:", "digIdx", "0"],
								["setVar:to:", "tok_i", "1"]]]]],
				[3422,
					284,
					[["whenIReceive", "pre animate"],
						["doIfElse",
							["<", ["readVariable", "lifeTick"], "0"],
							[["call", "Gen Mob or Veg %b typ %n %n", false, 1, 1], ["changeVar:by:", "lifeTick", 1]],
							[["doIf",
									[">", ["getAttribute:of:", "@Player ID", "Multiplayer"], "0"],
									[["doIf",
											[">",
												["timer"],
												["-",
													["readVariable", "lifeTick"],
													["computeFunction:of:", "abs", ["-", ["getAttribute:of:", "x", "Player"], ["readVariable", "lifeTickX"]]]]],
											[["call", "Gen Veg %n", ["randomFrom:to:", 0, 99]],
												["doIfElse",
													[">", ["\/", ["getAttribute:of:", "y", "Player"], ["readVariable", "MAP_HEIGHT"]], "0.43"],
													[["setVar:to:",
															"lifeTick",
															["+",
																["timer"],
																["+", 5, ["*", ["randomFrom:to:", 5, 8.5], ["getAttribute:of:", "@Player Count", "Multiplayer"]]]]]],
													[["setVar:to:",
															"lifeTick",
															["+",
																["timer"],
																["+", 15, ["*", ["randomFrom:to:", 5, 8.5], ["getAttribute:of:", "@Player Count", "Multiplayer"]]]]]]],
												["setVar:to:", "lifeTickX", ["getAttribute:of:", "x", "Player"]]]]]]]]]],
				[1095.6,
					1269,
					[["procDef", "Place (direct) %n %n", ["idx", "typ"], [1, 1], true],
						["call", "Get LData For Tile %n", ["getParam", "idx", "r"]],
						["doIf",
							["<", ["readVariable", "i"], ["lineCountOfList:", "_LData"]],
							[["doRepeat",
									["getLine:ofList:", ["+", ["readVariable", "i"], 1], "_LData"],
									[["deleteLine:ofList:", ["readVariable", "i"], "_LData"]]]]],
						["setLine:ofList:to:", ["getParam", "idx", "r"], "_Level", ["getParam", "typ", "r"]],
						["append:toList:", ["getParam", "idx", "r"], "@Place"],
						["append:toList:", ["getParam", "typ", "r"], "@Place"],
						["doIf",
							["=", ["getParam", "typ", "r"], "32"],
							[["append:toList:", ["+", ["timer"], ["randomFrom:to:", 30, 45]], "Grow"],
								["append:toList:", ["getParam", "idx", "r"], "Grow"]]],
						["doIf",
							["|",
								["=", ["getParam", "typ", "r"], "160"],
								["=", ["getParam", "typ", "r"], "178"]],
							[["call", "Add Liquid %n", ["getParam", "idx", "r"]]]],
						["doIf",
							["=", ["getParam", "typ", "r"], "155"],
							[["setVar:to:", "i", ["getLine:ofList:", ["+", ["getAttribute:of:", "@Player ID", "Multiplayer"], 50], "@PlayerNames"]],
								["doIf",
									["&",
										[">", ["readVariable", "i"], "0"],
										["not", ["=", ["readVariable", "i"], ["getParam", "idx", "r"]]]],
									[["call", "Place (direct) %n %n", ["readVariable", "i"], 0]]],
								["append:toList:", ["getParam", "idx", "r"], "_LData"],
								["append:toList:", "4", "_LData"],
								["append:toList:", ["getUserName"], "_LData"],
								["append:toList:", "Claimed Land", "_LData"],
								["setLine:ofList:to:", ["+", ["getAttribute:of:", "@Player ID", "Multiplayer"], 50], "@PlayerNames", ["getParam", "idx", "r"]],
								["append:toList:", "0", "@Place"],
								["append:toList:",
									["concatenate:with:",
										"n",
										["concatenate:with:",
											["getParam", "idx", "r"],
											["concatenate:with:", " ", ["concatenate:with:", ["getUserName"], ["concatenate:with:", " ", "Claimed Land"]]]]],
									"@Place"]]],
						["doIfElse",
							["&",
								[">", ["getParam", "typ", "r"], "46"],
								["<", ["getParam", "typ", "r"], "50"]],
							[["call", "Add Light at %n", ["getParam", "idx", "r"]]],
							[["call", "Add Light at %n", ["getParam", "idx", "r"]]]]]],
				[1791.2,
					365.2,
					[["procDef", "Pick Up Block %n %n", ["typ", "count"], [1, 1], true],
						["call", "Find Slot Typ %n %b", ["getParam", "typ", "r"], false],
						["doIf",
							[">", ["readVariable", "find slot id"], "0"],
							[["doIfElse",
									["=", ["getParam", "typ", "r"], "155"],
									[["setLine:ofList:to:", ["*", ["readVariable", "find slot id"], 2], "_inv", "1"]],
									[["setLine:ofList:to:",
											["*", ["readVariable", "find slot id"], 2],
											"_inv",
											["+",
												["getLine:ofList:", ["*", ["readVariable", "find slot id"], 2], "_inv"],
												["getParam", "count", "r"]]]]],
								["call", "Pickup Message, item %n count %n", ["getParam", "typ", "r"], ["getParam", "count", "r"]]]],
						["setVar:to:", "inv_change", "2"]]],
				[1112, 4308.5, [["mousePressed"]]],
				[1080,
					69,
					[["procDef", "Check Tile at x: %n y: %n", ["x", "y"], [1, 1], true],
						["setVar:to:",
							"Tile Index",
							["+",
								["+",
									["*", ["computeFunction:of:", "floor", ["getParam", "y", "r"]], ["readVariable", "MAP_WIDTH"]],
									["computeFunction:of:", "floor", ["getParam", "x", "r"]]],
								1]],
						["doIfElse",
							["|",
								["<", ["getParam", "x", "r"], "0"],
								["not", ["<", ["getParam", "x", "r"], ["readVariable", "MAP_WIDTH"]]]],
							[["setVar:to:", "Tile Is Solid", "0"], ["setVar:to:", "Tile Type", "0"]],
							[["setVar:to:", "Tile Type", ["getLine:ofList:", ["readVariable", "Tile Index"], "_Level"]],
								["doIfElse",
									[">", ["readVariable", "Tile Type"], "0"],
									[["setVar:to:",
											"Tile Is Solid",
											["getLine:ofList:", ["+", 3, ["*", ["readVariable", "Tile Type"], ["readVariable", "TMul"]]], "_TileData"]]],
									[["setVar:to:", "Tile Is Solid", "0"]]]]]]],
				[606, 34, [["whenIReceive", "Chat Sent"], ["setVar:to:", "Tile Say", 0], ["say:", ""]]],
				[291, 110, [["whenIReceive", "Hide All"], ["hide"]]],
				[1127, 4614.5, [["computeFunction:of:", "floor", 10]]],
				[4555.8,
					99.2,
					[["procDef", "Get Solid Details %n", ["typeID"], [1], true],
						["doIfElse",
							[">", ["getParam", "typeID", "r"], "0"],
							[["setVar:to:",
									"Tile Is Solid",
									["getLine:ofList:",
										["+", 3, ["*", ["getParam", "typeID", "r"], ["readVariable", "TMul"]]],
										"_TileData"]]],
							[["setVar:to:", "Tile Is Solid", "0"]]]]],
				[4288,
					4646,
					[["procDef", "Flow %n ignore lava %b", ["idx", "ignoreLava"], [1, false], true],
						["deleteLine:ofList:", 1, "Liquid"],
						["doIfElse",
							["list:contains:", "LiquidIgnore", ["getParam", "idx", "r"]],
							[["setVar:to:", "mat", "0"]],
							[["setVar:to:", "Tile Type", ["getLine:ofList:", ["getParam", "idx", "r"], "_Level"]],
								["doIfElse",
									["<", ["readVariable", "Tile Type"], "160"],
									[["setVar:to:", "mat", "0"]],
									[["doIfElse",
											["<", ["readVariable", "Tile Type"], "176"],
											[["setVar:to:", "mat", "160"]],
											[["doIfElse",
													["<", ["readVariable", "Tile Type"], "178"],
													[["setVar:to:", "mat", "0"]],
													[["doIfElse",
															["<", ["readVariable", "Tile Type"], "194"],
															[["doIfElse",
																	["getParam", "ignoreLava", "b"],
																	[["setVar:to:", "mat", "0"], ["append:toList:", ["getParam", "idx", "r"], "NextLiquid"]],
																	[["setVar:to:", "mat", "178"]]]],
															[["setVar:to:", "mat", "0"]]]]]]]]]]],
						["doIf",
							[">", ["readVariable", "mat"], "0"],
							[["doIfElse",
									[">", ["getParam", "idx", "r"], ["readVariable", "MAP_WIDTH"]],
									[["call",
											"Get Liquid %n base %n",
											["getLine:ofList:", ["-", ["getParam", "idx", "r"], ["readVariable", "MAP_WIDTH"]], "_Level"],
											["readVariable", "mat"]]],
									[["setVar:to:", "Tile Is Solid", "-1"]]],
								["doIfElse",
									["<", ["readVariable", "Tile Is Solid"], "-1"],
									[["doIfElse",
											["=", ["readVariable", "Tile Is Solid"], "-2"],
											[["call", "Add Light at %n", ["-", ["getParam", "idx", "r"], ["readVariable", "MAP_WIDTH"]]],
												["doIf",
													["=", ["readVariable", "mat"], "178"],
													[["call", "Add Light Idx %n", ["*", ["getParam", "idx", "r"], 2]]]],
												["setLine:ofList:to:", ["getParam", "idx", "r"], "_Level", "0"],
												["setLine:ofList:to:", ["-", ["getParam", "idx", "r"], ["readVariable", "MAP_WIDTH"]], "_Level", "194"],
												["call", "Add Liquid %n", ["+", ["getParam", "idx", "r"], ["readVariable", "MAP_WIDTH"]]],
												["call", "Add Liquid %n", ["-", ["getParam", "idx", "r"], 1]],
												["call", "Add Liquid %n", ["+", ["getParam", "idx", "r"], 1]]],
											[["doIf",
													["=", ["readVariable", "Tile Is Solid"], "-3"],
													[["call", "Add Liquid %n", ["getParam", "idx", "r"]],
														["setLine:ofList:to:", ["-", ["getParam", "idx", "r"], ["readVariable", "MAP_WIDTH"]], "_Level", "0"],
														["call",
															"Add Light Idx %n",
															["*", ["-", ["getParam", "idx", "r"], ["readVariable", "MAP_WIDTH"]], 2]]]]]]],
									[["doIfElse",
											[">", ["readVariable", "Tile Is Solid"], ["readVariable", "mat"]],
											[["doIfElse",
													[">",
														["+", ["readVariable", "Tile Is Solid"], ["readVariable", "Tile Type"]],
														["+", ["*", ["readVariable", "mat"], 2], 15]],
													[["setLine:ofList:to:", ["getParam", "idx", "r"], "_Level", "0"],
														["doIf",
															["&",
																["=", ["readVariable", "mat"], "178"],
																[">", ["getLine:ofList:", ["*", ["getParam", "idx", "r"], 2], "_Light"], "0"]],
															[["call", "Add Light Idx %n", ["*", ["getParam", "idx", "r"], 2]]]],
														["setLine:ofList:to:",
															["-", ["getParam", "idx", "r"], ["readVariable", "MAP_WIDTH"]],
															"_Level",
															["-",
																["+", ["readVariable", "Tile Is Solid"], ["readVariable", "Tile Type"]],
																["+", ["readVariable", "mat"], 16]]],
														["call", "Add Liquid %n", ["-", ["getParam", "idx", "r"], ["readVariable", "MAP_WIDTH"]]],
														["call", "Add Liquid %n", ["+", ["getParam", "idx", "r"], ["readVariable", "MAP_WIDTH"]]],
														["call", "Add Liquid %n", ["-", ["getParam", "idx", "r"], 1]],
														["call", "Add Liquid %n", ["+", ["getParam", "idx", "r"], 1]]],
													[["setLine:ofList:to:",
															["getParam", "idx", "r"],
															"_Level",
															["-", ["+", ["readVariable", "Tile Is Solid"], ["readVariable", "Tile Type"]], ["readVariable", "mat"]]],
														["setLine:ofList:to:",
															["-", ["getParam", "idx", "r"], ["readVariable", "MAP_WIDTH"]],
															"_Level",
															["readVariable", "mat"]],
														["call", "Add Liquid %n", ["-", ["getParam", "idx", "r"], ["readVariable", "MAP_WIDTH"]]],
														["call", "Add Liquid %n", ["getParam", "idx", "r"]],
														["call", "Add Liquid %n", ["+", ["getParam", "idx", "r"], ["readVariable", "MAP_WIDTH"]]]]]],
											[["setVar:to:", "distance", ["readVariable", "Tile Type"]],
												["setVar:to:", "Tile Index", ["-", ["getParam", "idx", "r"], 1]],
												["call", "Get Liquid %n base %n", ["getLine:ofList:", ["readVariable", "Tile Index"], "_Level"], ["readVariable", "mat"]],
												["doIf",
													["=", ["readVariable", "Tile Is Solid"], "-3"],
													[["setLine:ofList:to:", ["readVariable", "Tile Index"], "_Level", "0"],
														["call", "Add Light Idx %n", ["*", ["readVariable", "Tile Index"], 2]],
														["setVar:to:", "Tile Is Solid", ["+", ["readVariable", "mat"], 16]]]],
												["doUntil",
													["|",
														["<", ["readVariable", "Tile Is Solid"], "0"],
														["=", ["%", ["readVariable", "Tile Index"], ["readVariable", "MAP_WIDTH"]], "0"]],
													[["changeVar:by:", "distance", ["readVariable", "Tile Is Solid"]],
														["call",
															"Get Liquid Full %n base %n",
															["getLine:ofList:", ["-", ["readVariable", "Tile Index"], ["readVariable", "MAP_WIDTH"]], "_Level"],
															["readVariable", "mat"]],
														["doIfElse",
															[">", ["readVariable", "Tile Is Solid"], "0"],
															[["append:toList:", ["readVariable", "Tile Index"], "LiquidIgnore"],
																["changeVar:by:", "Tile Index", -1],
																["call", "Get Liquid %n base %n", ["getLine:ofList:", ["readVariable", "Tile Index"], "_Level"], ["readVariable", "mat"]],
																["doIf",
																	["=", ["readVariable", "Tile Is Solid"], "-3"],
																	[["setLine:ofList:to:", ["readVariable", "Tile Index"], "_Level", "0"],
																		["call", "Add Light Idx %n", ["*", ["readVariable", "Tile Index"], 2]],
																		["setVar:to:", "Tile Is Solid", ["+", ["readVariable", "mat"], 16]]]]],
															[["changeVar:by:", "Tile Index", -1], ["setVar:to:", "Tile Is Solid", "-999"]]]]],
												["changeVar:by:", "Tile Index", 1],
												["setVar:to:", "find slot id", ["+", ["getParam", "idx", "r"], 1]],
												["call", "Get Liquid %n base %n", ["getLine:ofList:", ["readVariable", "find slot id"], "_Level"], ["readVariable", "mat"]],
												["doIf",
													["=", ["readVariable", "Tile Is Solid"], "-3"],
													[["setLine:ofList:to:", ["readVariable", "Tile Index"], "_Level", "0"],
														["call", "Add Light Idx %n", ["*", ["readVariable", "Tile Index"], 2]],
														["setVar:to:", "Tile Is Solid", ["+", ["readVariable", "mat"], 16]]]],
												["doUntil",
													["|",
														["<", ["readVariable", "Tile Is Solid"], "0"],
														["=", ["%", ["readVariable", "find slot id"], ["readVariable", "MAP_WIDTH"]], "1"]],
													[["changeVar:by:", "distance", ["readVariable", "Tile Is Solid"]],
														["call",
															"Get Liquid Full %n base %n",
															["getLine:ofList:", ["-", ["readVariable", "find slot id"], ["readVariable", "MAP_WIDTH"]], "_Level"],
															["readVariable", "mat"]],
														["doIfElse",
															[">", ["readVariable", "Tile Is Solid"], "0"],
															[["append:toList:", ["readVariable", "find slot id"], "LiquidIgnore"],
																["changeVar:by:", "find slot id", 1],
																["call", "Get Liquid %n base %n", ["getLine:ofList:", ["readVariable", "find slot id"], "_Level"], ["readVariable", "mat"]],
																["doIf",
																	["=", ["readVariable", "Tile Is Solid"], "-3"],
																	[["setLine:ofList:to:", ["readVariable", "Tile Index"], "_Level", "0"],
																		["call", "Add Light Idx %n", ["*", ["readVariable", "Tile Index"], 2]],
																		["setVar:to:", "Tile Is Solid", ["+", ["readVariable", "mat"], 16]]]]],
															[["changeVar:by:", "find slot id", 1], ["setVar:to:", "Tile Is Solid", "-999"]]]]],
												["changeVar:by:", "find slot id", -1],
												["setVar:to:", "x", ["+", ["-", ["readVariable", "find slot id"], ["readVariable", "Tile Index"]], 1]],
												["doIf",
													[">", ["readVariable", "x"], "1"],
													[["setVar:to:", "y", ["computeFunction:of:", "floor", ["\/", ["readVariable", "distance"], ["readVariable", "x"]]]],
														["setVar:to:", "tmp", ["%", ["readVariable", "distance"], ["readVariable", "x"]]],
														["doIfElse",
															["=", ["readVariable", "Tile Is Solid"], "-999"],
															[["setVar:to:", "Tile Index", ["readVariable", "find slot id"]],
																["call",
																	"Average Run %n %n %n base %n",
																	-1,
																	["-", ["readVariable", "x"], ["readVariable", "tmp"]],
																	["readVariable", "y"],
																	["readVariable", "mat"]],
																["changeVar:by:", "y", 1],
																["doIfElse",
																	["=", ["readVariable", "y"], ["+", ["readVariable", "mat"], 16]],
																	[["call", "Average Run Remove %n %n %b", -1, ["readVariable", "tmp"], ["=", ["readVariable", "mat"], "178"]]],
																	[["call", "Average Run %n %n %n base %n", -1, ["readVariable", "tmp"], ["readVariable", "y"], ["readVariable", "mat"]]]]],
															[["call",
																	"Average Run %n %n %n base %n",
																	1,
																	["-", ["readVariable", "x"], ["readVariable", "tmp"]],
																	["readVariable", "y"],
																	["readVariable", "mat"]],
																["changeVar:by:", "y", 1],
																["doIfElse",
																	["=", ["readVariable", "y"], ["+", ["readVariable", "mat"], 16]],
																	[["call", "Average Run Remove %n %n %b", 1, ["readVariable", "tmp"], ["=", ["readVariable", "mat"], "178"]]],
																	[["call", "Average Run %n %n %n base %n", 1, ["readVariable", "tmp"], ["readVariable", "y"], ["readVariable", "mat"]]]]]]]]]]]]]]]],
				[5226.2,
					6693,
					[["procDef", "Settle Water", [], [], false],
						["deleteLine:ofList:", "all", "Liquid"],
						["deleteLine:ofList:", "all", "NextLiquid"],
						["setVar:to:", "digType", "1"],
						["doRepeat",
							["*", ["readVariable", "MAP_WIDTH"], ["readVariable", "MAP_HEIGHT"]],
							[["setVar:to:", "Tile Is Solid", ["getLine:ofList:", ["readVariable", "digType"], "_Level"]],
								["doIf",
									[">", ["readVariable", "Tile Is Solid"], "159"],
									[["doIfElse",
											["<", ["readVariable", "Tile Is Solid"], "176"],
											[["call", "Add Liquid %n", ["readVariable", "digType"]]],
											[["doIf",
													["|", [">", ["readVariable", "Tile Is Solid"], "177"], ["<", ["readVariable", "Tile Is Solid"], "194"]],
													[["call", "Add Liquid %n", ["readVariable", "digType"]]]]]]]],
								["changeVar:by:", "digType", 1]]],
						["setVar:to:", "tok", 0],
						["setVar:to:", "tok_i", 0],
						["doUntil",
							["|", [">", ["readVariable", "tok"], "20"], [">", ["readVariable", "tok_i"], "800"]],
							[["doIfElse",
									["<", ["lineCountOfList:", "NextLiquid"], "10"],
									[["setVar:to:", "tok_i", 0], ["changeVar:by:", "tok", 1]],
									[["setVar:to:", "tok", 0], ["changeVar:by:", "tok_i", 1]]],
								["call", "Cycle Liquids %b", false]]],
						["setVar:to:", "digType", "1"],
						["doRepeat",
							["*", ["readVariable", "MAP_WIDTH"], ["readVariable", "MAP_HEIGHT"]],
							[["setVar:to:", "Tile Is Solid", ["getLine:ofList:", ["readVariable", "digType"], "_Level"]],
								["doIfElse",
									["|", ["=", ["readVariable", "Tile Is Solid"], "175"], ["=", ["readVariable", "Tile Is Solid"], "193"]],
									[["setLine:ofList:to:", ["readVariable", "digType"], "_Level", "0"]],
									[["doIf",
											["=", ["readVariable", "Tile Is Solid"], "160"],
											[["setVar:to:", "Tile Is Solid", ["getLine:ofList:", ["+", ["readVariable", "digType"], ["readVariable", "MAP_WIDTH"]], "_Level"]],
												["doIf",
													["|", ["<", ["readVariable", "Tile Is Solid"], "160"], [">", ["readVariable", "Tile Is Solid"], "175"]],
													[["setLine:ofList:to:", ["readVariable", "digType"], "Liquid", "161"]]]]]]],
								["changeVar:by:", "digType", 1]]],
						["setVar:to:", "digType", 0]]],
				[5823,
					6461,
					[["procDef", "Cycle Liquids %b", ["ignoreLava?"], [false], true],
						["setVar:to:", "i", "1"],
						["doRepeat",
							["lineCountOfList:", "NextLiquid"],
							[["append:toList:", ["getLine:ofList:", ["readVariable", "i"], "NextLiquid"], "Liquid"], ["changeVar:by:", "i", 1]]],
						["deleteLine:ofList:", "all", "NextLiquid"],
						["deleteLine:ofList:", "all", "LiquidIgnore"],
						["doRepeat",
							["lineCountOfList:", "Liquid"],
							[["call", "Flow %n ignore lava %b", ["getLine:ofList:", 1, "Liquid"], ["getParam", "ignoreLava?", "b"]]]],
						["setVar:to:",
							"INF_WAT1",
							["+", ["*", ["getAttribute:of:", "sea level", "Setup Level"], ["readVariable", "MAP_WIDTH"]], 1]],
						["call", "Get Liquid %n base %n", ["getLine:ofList:", ["readVariable", "INF_WAT1"], "_Level"], 160],
						["doIf",
							[">", ["readVariable", "Tile Is Solid"], "171"],
							[["setLine:ofList:to:", ["readVariable", "INF_WAT1"], "_Level", "168"], ["call", "Add Liquid %n", ["readVariable", "INF_WAT1"]]]],
						["changeVar:by:", "INF_WAT1", ["-", ["readVariable", "MAP_WIDTH"], 1]],
						["call", "Get Liquid %n base %n", ["getLine:ofList:", ["readVariable", "INF_WAT1"], "_Level"], 160],
						["doIf",
							[">", ["readVariable", "Tile Is Solid"], "171"],
							[["setLine:ofList:to:", ["readVariable", "INF_WAT1"], "_Level", "168"], ["call", "Add Liquid %n", ["readVariable", "INF_WAT1"]]]]]],
				[1096.5,
					2236.2,
					[["whenIReceive", "pre animate"],
						["doIf",
							["=", ["getAttribute:of:", "Chatting", "Safe Chat"], "0"],
							[["doIf", ["keyPressed:", "1"], [["setVar:to:", "ToolMode", "1"], ["setVar:to:", "inv_change", "1"]]],
								["doIf", ["keyPressed:", "2"], [["setVar:to:", "ToolMode", "2"], ["setVar:to:", "inv_change", "1"]]],
								["doIf", ["keyPressed:", "3"], [["setVar:to:", "ToolMode", "3"], ["setVar:to:", "inv_change", "1"]]],
								["doIf", ["keyPressed:", "4"], [["setVar:to:", "ToolMode", "4"], ["setVar:to:", "inv_change", "1"]]],
								["doIf", ["keyPressed:", "5"], [["setVar:to:", "ToolMode", "5"], ["setVar:to:", "inv_change", "1"]]],
								["doIf", ["keyPressed:", "6"], [["setVar:to:", "ToolMode", "6"], ["setVar:to:", "inv_change", "1"]]],
								["doIf", ["keyPressed:", "7"], [["setVar:to:", "ToolMode", "7"], ["setVar:to:", "inv_change", "1"]]],
								["doIf", ["keyPressed:", "8"], [["setVar:to:", "ToolMode", "8"], ["setVar:to:", "inv_change", "1"]]]]],
						["doIf",
							[">", ["lineCountOfList:", "Grow"], "0"],
							[["doIf",
									[">", ["timer"], ["getLine:ofList:", 1, "Grow"]],
									[["setVar:to:", "tmp", ["getLine:ofList:", 2, "Grow"]],
										["deleteLine:ofList:", 1, "Grow"],
										["deleteLine:ofList:", 1, "Grow"],
										["call", "Grow %n", ["readVariable", "tmp"]]]]]],
						["changeVar:by:", "CycleLava", ["getAttribute:of:", "_Tick", "Multiplayer"]],
						["doIfElse",
							[">", ["readVariable", "CycleLava"], "20"],
							[["call", "Cycle Liquids %b", false], ["setVar:to:", "CycleLava", "0"]],
							[["call", "Cycle Liquids %b", ["not", false]]]],
						["doIfElse",
							["=", ["getAttribute:of:", "MOUSE_PRESSED", "Player"], "true"],
							[["doIf", [">", ["getAttribute:of:", "Mode", "Player"], "0"], [["setVar:to:", "Next Tile Say", ""]]],
								["doIf",
									["=", ["readVariable", "ToolDrag"], "1"],
									[["setVar:to:", "ToolDrag", "0"],
										["doIfElse",
											["=", ["getAttribute:of:", "Mode", "Player"], "0"],
											[["doIf",
													["&",
														["<", ["computeFunction:of:", "abs", ["-", ["mouseY"], 133]], "12"],
														["<", ["mouseX"], "58"]],
													[["setVar:to:", "tmp", ["rounded", ["\/", ["+", ["mouseX"], 224], 32]]],
														["doIf",
															["&", [">", ["readVariable", "tmp"], "0"], ["<", ["readVariable", "tmp"], "9"]],
															[["setVar:to:", "ToolMode", ["readVariable", "tmp"]], ["setVar:to:", "inv_change", "1"]]]]]],
											[["doIf",
													["<", ["computeFunction:of:", "abs", ["-", ["mouseX"], -145]], "17"],
													[["doIfElse",
															["<", ["computeFunction:of:", "abs", ["-", ["mouseY"], 36]], "10"],
															[["doIf",
																	[">", ["readVariable", "Recipe Offset"], "0"],
																	[["changeVar:by:", "Recipe Offset", -20],
																		["call", "Calculate Recipees"],
																		["setVar:to:", "inv_change", "1"],
																		["setVar:to:", "ToolDrag", "-1"]]]],
															[["doIf",
																	["<", ["computeFunction:of:", "abs", ["-", ["mouseY"], -145]], "10"],
																	[["changeVar:by:", "Recipe Offset", 20],
																		["call", "Calculate Recipees"],
																		["setVar:to:", "inv_change", "1"],
																		["setVar:to:", "ToolDrag", "-1"]]]]]]],
												["call", "Get Tool Drag"],
												["doIf",
													["|",
														[">", ["readVariable", "ToolDrag"], "-1"],
														["<", ["getLine:ofList:", ["*", ["readVariable", "ToolDrag"], -2], "_inv"], "1"]],
													[["setVar:to:", "ToolDrag", "0"]]],
												["doIf",
													["&",
														["<", ["readVariable", "ToolDrag"], "-24"],
														["=", ["getAttribute:of:", "Mode", "Player"], "1"]],
													[["call",
															"Do Craft %n %n",
															["getLine:ofList:", ["-", ["*", ["readVariable", "ToolDrag"], -2], 1], "_inv"],
															["getLine:ofList:", ["*", ["readVariable", "ToolDrag"], -2], "_inv"]],
														["doIfElse",
															["=", ["readVariable", "tok_i"], "1"],
															[["doIfElse",
																	["keyPressed:", ""],
																	[["setVar:to:", "ToolDrag", "1"]],
																	[["setVar:to:", "ToolDrag", "0"]]],
																["call", "Calculate Recipees"],
																["setVar:to:", "inv_change", "1"]],
															[["setVar:to:", "Next Tile Say", "No room in inventory!"], ["setVar:to:", "Tile Say", ""], ["setVar:to:", "ToolDrag", "1"]]]]]]]]]],
							[["doIfElse",
									["<", ["readVariable", "ToolDrag"], "0"],
									[["setVar:to:", "find slot id", ["readVariable", "ToolDrag"]],
										["call", "Get Tool Drag"],
										["doIfElse",
											["&",
												["<", ["readVariable", "ToolDrag"], "0"],
												["|",
													[">", ["readVariable", "ToolDrag"], "-25"],
													["|",
														["=", ["readVariable", "ToolDrag"], "-99"],
														["=", ["getAttribute:of:", "Mode", "Player"], "2"]]]],
											[["doIf",
													["&",
														["=", ["getAttribute:of:", "Mode", "Player"], "2"],
														["|",
															["&", [">", ["readVariable", "ToolDrag"], "-99"], ["<", ["readVariable", "ToolDrag"], "-24"]],
															["<", ["readVariable", "find slot id"], "-24"]]],
													[["setLine:ofList:to:", 88, "_inv", "1"]]],
												["setVar:to:", "tmp", ["getLine:ofList:", ["*", ["readVariable", "ToolDrag"], -2], "_inv"]],
												["doIfElse",
													["=", ["readVariable", "ToolDrag"], "-99"],
													[["setVar:to:", "i", "true"]],
													[["doIfElse",
															["=",
																["getLine:ofList:", ["-", ["*", ["readVariable", "ToolDrag"], -2], 1], "_inv"],
																["getLine:ofList:", ["-", ["*", ["readVariable", "find slot id"], -2], 1], "_inv"]],
															[["setVar:to:",
																	"i",
																	["getLine:ofList:", ["-", ["*", ["readVariable", "ToolDrag"], -2], 1], "_inv"]],
																["setVar:to:",
																	"i",
																	["|", ["<", ["readVariable", "i"], "214"], [">", ["readVariable", "i"], "216"]]]],
															[["setVar:to:", "i", ["&", ["keyPressed:", ""], ["=", ["readVariable", "tmp"], "0"]]]]]]],
												["doIfElse",
													["=", ["readVariable", "i"], "true"],
													[["doIfElse",
															["keyPressed:", ""],
															[["setVar:to:",
																	"tmp",
																	["computeFunction:of:",
																		"ceiling",
																		["\/", ["getLine:ofList:", ["*", ["readVariable", "find slot id"], -2], "_inv"], 4]]]],
															[["setVar:to:", "tmp", ["getLine:ofList:", ["*", ["readVariable", "find slot id"], -2], "_inv"]]]],
														["setLine:ofList:to:",
															["*", ["readVariable", "ToolDrag"], -2],
															"_inv",
															["+", ["getLine:ofList:", ["*", ["readVariable", "ToolDrag"], -2], "_inv"], ["readVariable", "tmp"]]],
														["setLine:ofList:to:",
															["-", ["*", ["readVariable", "ToolDrag"], -2], 1],
															"_inv",
															["getLine:ofList:", ["-", ["*", ["readVariable", "find slot id"], -2], 1], "_inv"]],
														["setVar:to:",
															"tmp",
															["-", ["getLine:ofList:", ["*", ["readVariable", "find slot id"], -2], "_inv"], ["readVariable", "tmp"]]],
														["setLine:ofList:to:", ["*", ["readVariable", "find slot id"], -2], "_inv", ["readVariable", "tmp"]],
														["doIf",
															["=", ["readVariable", "tmp"], "0"],
															[["setLine:ofList:to:", ["-", ["*", ["readVariable", "find slot id"], -2], 1], "_inv", "0"]]],
														["doIf",
															["&",
																["=", ["readVariable", "ToolDrag"], "-99"],
																["=", ["getAttribute:of:", "Mode", "Player"], "1"]],
															[["call", "Calculate Recipees"]]]],
													[["setLine:ofList:to:",
															["*", ["readVariable", "ToolDrag"], -2],
															"_inv",
															["getLine:ofList:", ["*", ["readVariable", "find slot id"], -2], "_inv"]],
														["setLine:ofList:to:", ["*", ["readVariable", "find slot id"], -2], "_inv", ["readVariable", "tmp"]],
														["setVar:to:",
															"tmp",
															["getLine:ofList:", ["-", ["*", ["readVariable", "ToolDrag"], -2], 1], "_inv"]],
														["setLine:ofList:to:",
															["-", ["*", ["readVariable", "ToolDrag"], -2], 1],
															"_inv",
															["getLine:ofList:", ["-", ["*", ["readVariable", "find slot id"], -2], 1], "_inv"]],
														["setLine:ofList:to:",
															["-", ["*", ["readVariable", "find slot id"], -2], 1],
															"_inv",
															["readVariable", "tmp"]]]]],
											[["doIfElse",
													["&", ["<", ["readVariable", "ToolDrag"], "-24"], [">", ["readVariable", "ToolDrag"], "-29"]],
													[["setLine:ofList:to:", ["*", ["readVariable", "ToolDrag"], -2], "_inv", "1"],
														["setLine:ofList:to:",
															["-", ["*", ["readVariable", "ToolDrag"], -2], 1],
															"_inv",
															["getLine:ofList:", ["-", ["*", ["readVariable", "find slot id"], -2], 1], "_inv"]],
														["doIf", ["=", ["getAttribute:of:", "Mode", "Player"], "1"], [["call", "Calculate Recipees"]]]],
													null]]],
										["setVar:to:", "inv_change", "1"]],
									[["setVar:to:", "tmp", ""],
										["doIf",
											[">", ["getAttribute:of:", "Mode", "Player"], "0"],
											[["call", "Get Tool Drag"],
												["doIf",
													["not", ["=", ["readVariable", "HoverTile"], ["readVariable", "ToolDrag"]]],
													[["setVar:to:", "HoverTile", ["readVariable", "ToolDrag"]],
														["doIfElse",
															["&", ["<", ["readVariable", "ToolDrag"], "0"], [">", ["readVariable", "ToolDrag"], "-45"]],
															[["setVar:to:",
																	"tmp",
																	["getLine:ofList:", ["-", ["*", ["readVariable", "ToolDrag"], -2], 1], "_inv"]],
																["doIfElse",
																	[">", ["readVariable", "tmp"], "0"],
																	[["doIfElse",
																			["&",
																				["=", ["getAttribute:of:", "Mode", "Player"], "1"],
																				["<", ["readVariable", "ToolDrag"], "-24"]],
																			[["call", "Get Recipe text %n", ["readVariable", "tmp"]]],
																			[["setVar:to:",
																					"Next Tile Say",
																					["getLine:ofList:", ["+", ["*", ["readVariable", "tmp"], ["readVariable", "TMul"]], 2], "_TileData"]],
																				["doIf",
																					[">", ["getLine:ofList:", ["*", ["readVariable", "ToolDrag"], -2], "_inv"], "1"],
																					[["setVar:to:",
																							"Next Tile Say",
																							["concatenate:with:",
																								["readVariable", "Next Tile Say"],
																								["concatenate:with:",
																									" (x",
																									["concatenate:with:", ["getLine:ofList:", ["*", ["readVariable", "ToolDrag"], -2], "_inv"], ")"]]]]]]]]],
																	[["setVar:to:", "Next Tile Say", ""]]]],
															[["setVar:to:", "Next Tile Say", ""]]]]]]]]],
								["setVar:to:", "ToolDrag", "1"]]]]],
				[4562.8,
					399.6,
					[["procDef", "Add Light at %n", ["index"], [1], true],
						["doIfElse",
							["list:contains:", "LightMod", ["*", ["getParam", "index", "r"], 2]],
							null,
							[["append:toList:", ["*", ["getParam", "index", "r"], 2], "LightMod"]]],
						["doIfElse",
							["list:contains:", "LightMod", ["-", ["*", ["getParam", "index", "r"], 2], 1]],
							null,
							[["append:toList:", ["-", ["*", ["getParam", "index", "r"], 2], 1], "LightMod"]]]]],
				[5222.8, 6586.9, [["whenIReceive", "Settle Water"], ["call", "Settle Water"]]],
				[5246.8,
					4569,
					[["procDef", "Get Liquid %n base %n", ["type", "base"], [1, 1], true],
						["doIfElse",
							[">", ["getParam", "type", "r"], "0"],
							[["setVar:to:",
									"Tile Is Solid",
									["getLine:ofList:",
										["+", 3, ["*", ["getParam", "type", "r"], ["readVariable", "TMul"]]],
										"_TileData"]],
								["doIfElse",
									["=", ["readVariable", "Tile Is Solid"], "2.5"],
									[["doIfElse",
											["=",
												["=", ["getParam", "base", "r"], "160"],
												["<", ["getParam", "type", "r"], "176"]],
											[["setVar:to:", "Tile Is Solid", ["getParam", "type", "r"]]],
											[["setVar:to:", "Tile Is Solid", "-2"]]]],
									[["doIfElse",
											["|", ["=", ["readVariable", "Tile Is Solid"], "0"], ["=", ["readVariable", "Tile Is Solid"], "2"]],
											[["setVar:to:", "Tile Is Solid", ["+", ["getParam", "base", "r"], 16]]],
											[["doIfElse",
													["=", ["computeFunction:of:", "floor", ["readVariable", "Tile Is Solid"]], "5"],
													[["setVar:to:", "Tile Is Solid", "-3"]],
													[["setVar:to:", "Tile Is Solid", "-1"]]]]]]]],
							[["setVar:to:", "Tile Is Solid", ["+", ["getParam", "base", "r"], 16]]]]]],
				[5972.8,
					4571.65,
					[["procDef", "Get Liquid Full %n base %n", ["type", "base"], [1, 1], true],
						["doIfElse",
							[">", ["getParam", "type", "r"], "0"],
							[["setVar:to:",
									"Tile Is Solid",
									["getLine:ofList:",
										["+", 3, ["*", ["getParam", "type", "r"], ["readVariable", "TMul"]]],
										"_TileData"]],
								["doIfElse",
									["=", ["readVariable", "Tile Is Solid"], "2.5"],
									[["doIfElse",
											["=", ["getParam", "base", "r"], ["getParam", "type", "r"]],
											[["setVar:to:", "Tile Is Solid", "10"]],
											[["setVar:to:", "Tile Is Solid", "0"]]]],
									[["doIfElse",
											["|",
												["=", ["readVariable", "Tile Is Solid"], "0"],
												["|", ["=", ["readVariable", "Tile Is Solid"], "2"], ["=", ["readVariable", "Tile Is Solid"], "5"]]],
											[["setVar:to:", "Tile Is Solid", "0"]],
											[["doIfElse",
													["=", ["readVariable", "Tile Is Solid"], "5"],
													[["setVar:to:", "Tile Is Solid", "9"]],
													[["setVar:to:", "Tile Is Solid", "10"]]]]]]]],
							[["setVar:to:", "Tile Is Solid", "0"]]]]],
				[4562.7,
					720.6,
					[["procDef", "Add Light Idx %n", ["index"], [1], true],
						["doIfElse",
							["list:contains:", "LightMod", ["getParam", "index", "r"]],
							null,
							[["append:toList:", ["getParam", "index", "r"], "LightMod"]]]]],
				[6156,
					6545,
					[["doIfElse",
							["getParam", "right?", "b"],
							null,
							[["doRepeat", ["lineCountOfList:", "Liquid"], [["call", "Flow %n ignore lava %b", ["getLine:ofList:", 1, "Liquid"], -1]]]]]]],
				[4566.4,
					993.8,
					[["procDef", "Drink Potion %n", ["toolID"], [1], false],
						["setVar:to:",
							"i",
							["getLine:ofList:", ["-", ["*", ["getParam", "toolID", "r"], 2], 1], "_inv"]],
						["doIf",
							["not", ["=", ["readVariable", "BuffID"], ["readVariable", "i"]]],
							[["doIf",
									["|",
										["=", ["getAttribute:of:", "Last Buff", "Buffs"], "0"],
										["not", ["=", ["getAttribute:of:", "costume name", "Buffs"], "Buff_195"]]],
									[["doIfElse",
											["&", [">", ["readVariable", "i"], "194"], ["<", ["readVariable", "i"], "198"]],
											[["doIf",
													["<", ["getAttribute:of:", "Player Health", "Player"], "10"],
													[["setVar:to:", "BuffID", ["readVariable", "i"]],
														["setVar:to:", "BuffTime", ["+", ["timer"], 15]],
														["call", "Drop a Block %n", ["getParam", "toolID", "r"]],
														["doBroadcastAndWait", "New Buff"]]]],
											[["setVar:to:", "BuffID", ["readVariable", "i"]],
												["setVar:to:", "BuffTime", ["+", ["timer"], 150]],
												["call", "Drop a Block %n", ["getParam", "toolID", "r"]],
												["doBroadcastAndWait", "New Buff"]]]]]]]]],
				[4588,
					3072,
					[["procDef", "Add Liquid %n", ["tileIdx"], [1], true],
						["doIfElse",
							["list:contains:", "NextLiquid", ["getParam", "tileIdx", "r"]],
							null,
							[["append:toList:", ["getParam", "tileIdx", "r"], "NextLiquid"]]]]],
				[4581,
					3382,
					[["procDef", "Place Mob %n %n", ["type", "ToolMode"], [1, 1], true],
						["setVar:to:", "i", "1"],
						["doUntil",
							["|",
								[">", ["readVariable", "i"], ["lineCountOfList:", "_Mob"]],
								["=", ["getLine:ofList:", ["readVariable", "i"], "_Mob"], "0"]],
							[["changeVar:by:", "i", 2]]],
						["doIf",
							["<", ["readVariable", "i"], ["lineCountOfList:", "_Mob"]],
							[["setVar:to:", "tmp", ["randomFrom:to:", 1, 9999]],
								["setLine:ofList:to:", ["readVariable", "i"], "_Mob", ["readVariable", "tmp"]],
								["setVar:to:",
									"tmp",
									["concatenate:with:",
										"m",
										["concatenate:with:",
											["readVariable", "tmp"],
											["concatenate:with:",
												" s ",
												["concatenate:with:",
													["getAttribute:of:", "@Player ID", "Multiplayer"],
													["concatenate:with:",
														" ",
														["getLine:ofList:",
															["+", 6, ["*", ["getParam", "type", "r"], ["readVariable", "TMul"]]],
															"_TileData"]]]]]]],
								["doIfElse",
									["=",
										["getLine:ofList:",
											["+", 3, ["*", ["getParam", "type", "r"], ["readVariable", "TMul"]]],
											"_TileData"],
										"-3.5"],
									[["setVar:to:",
											"tmp",
											["concatenate:with:",
												["readVariable", "tmp"],
												["concatenate:with:",
													" ",
													["concatenate:with:",
														["rounded", ["*", ["+", ["readVariable", "x"], 0.5], 10]],
														["concatenate:with:",
															["concatenate:with:", " ", ["rounded", ["*", ["+", ["readVariable", "y"], 0.5], 10]]],
															" 0"]]]]]],
									[["setVar:to:",
											"tmp",
											["concatenate:with:",
												["readVariable", "tmp"],
												["concatenate:with:",
													" ",
													["concatenate:with:",
														["rounded", ["*", ["+", ["readVariable", "x"], 0.5], 10]],
														["concatenate:with:", ["concatenate:with:", " ", ["rounded", ["*", ["readVariable", "y"], 10]]], " 0"]]]]]]],
								["doIfElse",
									["=",
										["getLine:ofList:",
											["+", 6, ["*", ["getParam", "type", "r"], ["readVariable", "TMul"]]],
											"_TileData"],
										"5"],
									null,
									[["doIfElse",
											["<", ["getAttribute:of:", "x", "Player"], ["readVariable", "x"]],
											[["setVar:to:", "tmp", ["concatenate:with:", ["readVariable", "tmp"], " -1"]]],
											[["setVar:to:", "tmp", ["concatenate:with:", ["readVariable", "tmp"], " 1"]]]]]],
								["setLine:ofList:to:", ["+", ["readVariable", "i"], 1], "_Mob", ["readVariable", "tmp"]],
								["doIf",
									[">", ["getParam", "ToolMode", "r"], "0"],
									[["call", "Drop a Block %n", ["getParam", "ToolMode", "r"]]]]]]]],
				[6017.8, 5154.65, [["setVar:to:", "Tile Is Solid", "10"]]],
				[5248,
					5272.8,
					[["procDef", "Average Run %n %n %n base %n", ["dir", "count", "tileid", "base"], [1, 1, 1, 1], true],
						["doRepeat",
							["getParam", "count", "r"],
							[["doIfElse",
									["=", ["getLine:ofList:", ["readVariable", "Tile Index"], "_Level"], ["getParam", "tileid", "r"]],
									[["doIf",
											["=", ["getParam", "base", "r"], "178"],
											[["call", "Add Light Idx %n", ["*", ["readVariable", "Tile Index"], 2]]]]],
									[["setLine:ofList:to:", ["readVariable", "Tile Index"], "_Level", ["getParam", "tileid", "r"]],
										["call", "Add Liquid %n", ["readVariable", "Tile Index"]],
										["doIf",
											[">", ["getParam", "tileid", "r"], ["getParam", "base", "r"]],
											[["call", "Add Liquid %n", ["+", ["readVariable", "Tile Index"], ["readVariable", "MAP_WIDTH"]]]]]]],
								["changeVar:by:", "Tile Index", ["getParam", "dir", "r"]]]]]],
				[5250.35,
					5695,
					[["procDef", "Average Run Remove %n %n %b", ["dir", "count", "isLava"], [1, 1, false], true],
						["doRepeat",
							["getParam", "count", "r"],
							[["doIfElse",
									["=", ["getLine:ofList:", ["readVariable", "Tile Index"], "_Level"], "0"],
									null,
									[["setLine:ofList:to:", ["readVariable", "Tile Index"], "_Level", "0"],
										["doIf",
											["&",
												["getParam", "isLava", "b"],
												[">", ["getLine:ofList:", ["*", ["readVariable", "Tile Index"], 2], "_Light"], "0"]],
											[["call", "Add Light Idx %n", ["*", ["readVariable", "Tile Index"], 2]]]]]],
								["changeVar:by:", "Tile Index", ["getParam", "dir", "r"]]]]]],
				[4580.4,
					4227.8,
					[["procDef", "Grow %n", ["idx"], [1], false],
						["setVar:to:", "Tile Type", ["getLine:ofList:", ["getParam", "idx", "r"], "_Level"]],
						["doIf",
							["=", ["readVariable", "Tile Type"], "32"],
							[["setVar:to:", "Tile Index", ["getParam", "idx", "r"]], ["doBroadcastAndWait", "Grow Sapling"]]]]],
				[1094.2,
					7085.8,
					[["procDef", "show cursor", [], [], true],
						["gotoX:y:",
							["*", ["-", ["readVariable", "x"], ["readVariable", "SCROLL_X"]], ["readVariable", "TILE_SIZE"]],
							["*", ["-", ["readVariable", "y"], ["readVariable", "SCROLL_Y"]], ["readVariable", "TILE_SIZE"]]],
						["doIfElse",
							["|", ["=", ["readVariable", "Tile Type"], "65"], ["=", ["readVariable", "Tile Type"], "66"]],
							[["doIf", ["not", ["=", ["costumeIndex"], "1"]], [["lookLike:", "cursor"]]]],
							[["doIf", ["not", ["=", ["costumeIndex"], "2"]], [["lookLike:", "cursor2"]]]]],
						["doIf",
							["=", ["readVariable", "Cursor Visible"], "0"],
							[["show"], ["setVar:to:", "Cursor Visible", "1"]]]]],
				[1096, 7748, [["whenIReceive", "respawn"], ["setVar:to:", "BuffID", 0]]],
				[1100,
					7528,
					[["whenIReceive", "Grow All"],
						["setVar:to:", "tmp", "1"],
						["doRepeat",
							["\/", ["lineCountOfList:", "Grow"], 2],
							[["setLine:ofList:to:", ["readVariable", "tmp"], "Grow", ["+", ["timer"], ["readVariable", "tmp"]]],
								["changeVar:by:", "tmp", 1]]]]],
				[5249.2,
					6032.4,
					[["procDef", "count water", [], [], true],
						["setVar:to:", "digType", "1"],
						["setVar:to:", "distance", 0],
						["doRepeat",
							["*", ["readVariable", "MAP_WIDTH"], ["readVariable", "MAP_HEIGHT"]],
							[["setVar:to:", "Tile Is Solid", ["getLine:ofList:", ["readVariable", "digType"], "_Level"]],
								["doIf",
									[">", ["readVariable", "Tile Is Solid"], "159"],
									[["doIfElse",
											["<", ["readVariable", "Tile Is Solid"], "176"],
											[["changeVar:by:", "distance", ["-", 176, ["readVariable", "Tile Is Solid"]]]],
											[["doIf",
													["&", [">", ["readVariable", "Tile Is Solid"], "177"], ["<", ["readVariable", "Tile Is Solid"], "194"]],
													[["changeVar:by:", "distance", ["-", 194, ["readVariable", "Tile Is Solid"]]]]]]]]],
								["changeVar:by:", "digType", 1]]],
						["doAsk", ["readVariable", "distance"]]]],
				[24,
					21,
					[["whenIReceive", "Clone Sprites"],
						["setSizeTo:", 238],
						["comeToFront"],
						["hide"],
						["setGraphicEffect:to:", "ghost", 50],
						["setVar:to:", "ToolMode", "1"],
						["setVar:to:", "Inside Idx", 0],
						["setVar:to:", "lifeTick", 0],
						["deleteLine:ofList:", "all", "Grow"],
						["deleteLine:ofList:", "all", "Liquid"],
						["deleteLine:ofList:", "all", "NextLiquid"],
						["setVar:to:", "reach", "3.3"],
						["setVar:to:", "BuffID", "0"],
						["setVar:to:", "BuffTime", "0"],
						["setVar:to:", "MouseRelease", "0"],
						["setVar:to:", "PlaceTimer", 0],
						["setVar:to:", "Cursor Visible", 0],
						["setVar:to:", "Mask", 0]]],
				[1814.3,
					1616.4,
					[["procDef", "Place Tile %n %n", ["idx", "typ"], [1, 1], true],
						["setVar:to:",
							"tmp",
							["getLine:ofList:",
								["+", 3, ["*", ["getParam", "typ", "r"], ["readVariable", "TMul"]]],
								"_TileData"]],
						["doIfElse",
							["=", ["readVariable", "tmp"], "4"],
							[["call",
									"Place (direct) %n %n",
									["+", ["getParam", "idx", "r"], ["readVariable", "MAP_WIDTH"]],
									["-", ["getParam", "typ", "r"], 1]],
								["call", "Place (direct) %n %n", ["getParam", "idx", "r"], ["getParam", "typ", "r"]]],
							[["doIfElse",
									["&", ["=", ["getParam", "typ", "r"], "46"], [">", ["mouseX"], "0"]],
									[["call", "Place (direct) %n %n", ["getParam", "idx", "r"], 45]],
									[["doIfElse",
											["=", ["getParam", "typ", "r"], "64"],
											[["call", "Place (direct) %n %n", ["getParam", "idx", "r"], 64],
												["call", "Place (direct) %n %n", ["+", ["getParam", "idx", "r"], ["readVariable", "MAP_WIDTH"]], 63]],
											[["doIfElse",
													["=", ["getParam", "typ", "r"], "85"],
													[["call", "Place (direct) %n %n", ["getParam", "idx", "r"], ["randomFrom:to:", 86, 95]]],
													[["doIfElse",
															["|", ["=", ["readVariable", "tmp"], "6"], ["=", ["readVariable", "tmp"], "7.5"]],
															[["call",
																	"Place (direct) %n %n",
																	["+", ["getParam", "idx", "r"], 1],
																	["+", ["getParam", "typ", "r"], 1]],
																["call", "Place (direct) %n %n", ["getParam", "idx", "r"], ["getParam", "typ", "r"]]],
															[["doIfElse",
																	["=", ["readVariable", "tmp"], "6.5"],
																	[["call",
																			"Place (direct) %n %n",
																			["+", ["getParam", "idx", "r"], ["readVariable", "MAP_WIDTH"]],
																			["-", ["getParam", "typ", "r"], 1]],
																		["call", "Place (direct) %n %n", ["getParam", "idx", "r"], ["getParam", "typ", "r"]],
																		["call",
																			"Place (direct) %n %n",
																			["+", ["getParam", "idx", "r"], ["+", ["readVariable", "MAP_WIDTH"], 1]],
																			["+", ["getParam", "typ", "r"], 1]],
																		["call",
																			"Place (direct) %n %n",
																			["+", ["getParam", "idx", "r"], 1],
																			["+", ["getParam", "typ", "r"], 2]]],
																	[["doIfElse",
																			["=", ["readVariable", "tmp"], "5"],
																			[["setVar:to:", "Tile Is Solid", ["getLine:ofList:", ["-", ["getParam", "idx", "r"], 1], "_Level"]],
																				["doIf",
																					[">", ["readVariable", "Tile Is Solid"], "0"],
																					[["setVar:to:",
																							"Tile Is Solid",
																							["getLine:ofList:", ["+", 3, ["*", ["readVariable", "Tile Is Solid"], ["readVariable", "TMul"]]], "_TileData"]]]],
																				["doIfElse",
																					["|", [">", ["readVariable", "Tile Is Solid"], "7"], ["=", ["readVariable", "Tile Is Solid"], "0.5"]],
																					[["call", "Place (direct) %n %n", ["getParam", "idx", "r"], ["+", ["getParam", "typ", "r"], 1]]],
																					[["setVar:to:", "Tile Is Solid", ["getLine:ofList:", ["+", ["getParam", "idx", "r"], 1], "_Level"]],
																						["doIf",
																							[">", ["readVariable", "Tile Is Solid"], "0"],
																							[["setVar:to:",
																									"Tile Is Solid",
																									["getLine:ofList:", ["+", 3, ["*", ["readVariable", "Tile Is Solid"], ["readVariable", "TMul"]]], "_TileData"]]]],
																						["doIfElse",
																							["|", [">", ["readVariable", "Tile Is Solid"], "7"], ["=", ["readVariable", "Tile Is Solid"], "0.5"]],
																							[["call", "Place (direct) %n %n", ["getParam", "idx", "r"], ["+", ["getParam", "typ", "r"], 2]]],
																							[["call", "Place (direct) %n %n", ["getParam", "idx", "r"], ["getParam", "typ", "r"]]]]]]],
																			[["setVar:to:", "mat", ["readVariable", "tmp"]],
																				["setVar:to:",
																					"tmp",
																					["getLine:ofList:",
																						["+", 7, ["*", ["getParam", "typ", "r"], ["readVariable", "TMul"]]],
																						"_TileData"]],
																				["doIfElse",
																					["&",
																						[">", ["readVariable", "tmp"], "0"],
																						[">", ["getParam", "typ", "r"], "0"]],
																					[["setVar:to:",
																							"Tile Is Solid",
																							["getLine:ofList:", ["+", ["getParam", "idx", "r"], ["readVariable", "MAP_WIDTH"]], "_Level"]],
																						["doIf",
																							[">", ["readVariable", "Tile Is Solid"], "0"],
																							[["setVar:to:",
																									"Tile Is Solid",
																									["getLine:ofList:", ["+", 3, ["*", ["readVariable", "Tile Is Solid"], ["readVariable", "TMul"]]], "_TileData"]]]],
																						["doIfElse",
																							["=",
																								["|",
																									[">", ["readVariable", "Tile Is Solid"], "9"],
																									["&", ["=", ["readVariable", "Tile Is Solid"], "0.5"], ["=", ["readVariable", "mat"], "0.5"]]],
																								[">", ["getParam", "typ", "r"], ["readVariable", "tmp"]]],
																							[["call", "Place (direct) %n %n", ["getParam", "idx", "r"], ["getParam", "typ", "r"]]],
																							[["call", "Place (direct) %n %n", ["getParam", "idx", "r"], ["readVariable", "tmp"]]]]],
																					[["call", "Place (direct) %n %n", ["getParam", "idx", "r"], ["getParam", "typ", "r"]]]],
																				["setVar:to:",
																					"Tile Is Solid",
																					["getLine:ofList:", ["-", ["getParam", "idx", "r"], ["readVariable", "MAP_WIDTH"]], "_Level"]],
																				["doIf",
																					[">", ["readVariable", "Tile Is Solid"], "0"],
																					[["setVar:to:",
																							"tmp",
																							["getLine:ofList:", ["+", 7, ["*", ["readVariable", "Tile Is Solid"], ["readVariable", "TMul"]]], "_TileData"]],
																						["doIf",
																							[">", ["readVariable", "tmp"], "0"],
																							[["setVar:to:",
																									"recepeStr",
																									["getLine:ofList:", ["+", 3, ["*", ["readVariable", "Tile Is Solid"], ["readVariable", "TMul"]]], "_TileData"]],
																								["doIfElse",
																									["|",
																										[">", ["readVariable", "mat"], "7"],
																										["&", ["=", ["readVariable", "mat"], "0.5"], ["=", ["readVariable", "recepeStr"], "0.5"]]],
																									[["doIf",
																											["<", ["readVariable", "Tile Is Solid"], ["readVariable", "tmp"]],
																											[["call",
																													"Place (direct) %n %n",
																													["-", ["getParam", "idx", "r"], ["readVariable", "MAP_WIDTH"]],
																													["readVariable", "tmp"]]]]],
																									[["doIf",
																											[">", ["readVariable", "Tile Is Solid"], ["readVariable", "tmp"]],
																											[["call",
																													"Place (direct) %n %n",
																													["-", ["getParam", "idx", "r"], ["readVariable", "MAP_WIDTH"]],
																													["readVariable", "tmp"]]]]]]]]]]]]]]]]]]]]]]]]]],
				[1092,
					7904,
					[["procDef", "Is Protected %n", ["idx"], [1], true],
						["setVar:to:", "Tile Type", "0"],
						["setVar:to:", "i", "1"],
						["doRepeat",
							["getAttribute:of:", "@Max Players", "Multiplayer"],
							[["doIf",
									["not", ["=", ["readVariable", "i"], ["getAttribute:of:", "@Player ID", "Multiplayer"]]],
									[["doIf",
											["not", ["=", ["getLine:ofList:", ["readVariable", "i"], "@PlayerNames"], ""]],
											[["setVar:to:", "tmp", ["getLine:ofList:", ["+", ["readVariable", "i"], 50], "@PlayerNames"]],
												["doIf",
													[">", ["readVariable", "tmp"], "0"],
													[["doIf",
															["<",
																["computeFunction:of:",
																	"abs",
																	["-",
																		["%", ["getParam", "idx", "r"], ["readVariable", "MAP_WIDTH"]],
																		["%", ["readVariable", "tmp"], ["readVariable", "MAP_WIDTH"]]]],
																"9"],
															[["doIf",
																	["<",
																		["computeFunction:of:",
																			"abs",
																			["\/", ["-", ["getParam", "idx", "r"], ["readVariable", "tmp"]], ["readVariable", "MAP_WIDTH"]]],
																		"9"],
																	[["setVar:to:", "Tile Type", ["readVariable", "i"]]]]]]]]]]]],
								["changeVar:by:", "i", 1]]]]],
				[1092,
					8476,
					[["procDef", "Is Protected %n percent %n", ["idx", "dist"], [1, 1], true],
						["setVar:to:", "Tile Type", "0"],
						["setVar:to:", "i", "1"],
						["doRepeat",
							["getAttribute:of:", "@Max Players", "Multiplayer"],
							[["doIf",
									["not", ["=", ["readVariable", "i"], ["getAttribute:of:", "@Player ID", "Multiplayer"]]],
									[["doIf",
											["not", ["=", ["getLine:ofList:", ["readVariable", "i"], "@PlayerNames"], ""]],
											[["setVar:to:", "tmp", ["getLine:ofList:", ["+", ["readVariable", "i"], 50], "@PlayerNames"]],
												["doIf",
													[">", ["readVariable", "tmp"], "0"],
													[["doIf",
															["<",
																["computeFunction:of:",
																	"abs",
																	["-",
																		["%", ["getParam", "idx", "r"], ["readVariable", "MAP_WIDTH"]],
																		["%", ["readVariable", "tmp"], ["readVariable", "MAP_WIDTH"]]]],
																["*", 9, ["getParam", "dist", "r"]]],
															[["doIf",
																	["<",
																		["computeFunction:of:",
																			"abs",
																			["\/", ["-", ["getParam", "idx", "r"], ["readVariable", "tmp"]], ["readVariable", "MAP_WIDTH"]]],
																		["*", 9, ["getParam", "dist", "r"]]],
																	[["setVar:to:", "Tile Type", ["readVariable", "i"]]]]]]]]]]]],
								["changeVar:by:", "i", 1]]]]],
				[1084,
					9053,
					[["procDef", "Update Tooltip", [], [], true],
						["doIfElse",
							["not", ["=", ["readVariable", "Next Tile Say"], ["readVariable", "Tile Say"]]],
							[["doIfElse",
									["=", ["readVariable", "Next Tile Say"], ""],
									[["setVar:to:", "Tile Say", ""],
										["doIf",
											["=", ["readVariable", "Cursor Visible"], "1"],
											[["hide"], ["setVar:to:", "Cursor Visible", 0]]],
										["lookLike:", "cursor"],
										["think:", ""]],
									[["setVar:to:", "Tile Say", ["readVariable", "Next Tile Say"]],
										["lookLike:", "dot"],
										["gotoSpriteOrMouse:", "_mouse_"],
										["changeXposBy:", 25],
										["doIf",
											["=", ["readVariable", "Cursor Visible"], "0"],
											[["show"], ["setVar:to:", "Cursor Visible", "1"]]],
										["think:", ["readVariable", "Tile Say"]]]]],
							[["doIf",
									["not", ["=", ["readVariable", "Tile Say"], ""]],
									[["gotoSpriteOrMouse:", "_mouse_"], ["changeXposBy:", 25]]]]]]],
				[1862.8,
					7088.4,
					[["procDef", "show cursor light %n %n", ["l1", "l2"], [1, 1], true],
						["doIfElse",
							["|",
								[">", ["getParam", "l1", "r"], "90"],
								[">", ["getParam", "l2", "r"], "90"]],
							[["doIf", ["not", ["=", ["costumeIndex"], "1"]], [["lookLike:", "cursor"]]]],
							[["doIf", ["not", ["=", ["costumeIndex"], "2"]], [["lookLike:", "cursor2"]]]]],
						["doIf",
							["=", ["readVariable", "Cursor Visible"], "0"],
							[["show"], ["setVar:to:", "Cursor Visible", "1"]]]]],
				[1866.4,
					7499.2,
					[["procDef", "Find Chain", [], [], true],
						["changeVar:by:", "Tile Index", ["readVariable", "MAP_WIDTH_NEG"]],
						["doUntil",
							["not", ["=", ["getLine:ofList:", ["readVariable", "Tile Index"], "_Level"], ["readVariable", "digType"]]],
							[["changeVar:by:", "Tile Index", ["readVariable", "MAP_WIDTH_NEG"]]]],
						["doIfElse",
							["=", ["getLine:ofList:", ["readVariable", "Tile Index"], "_Level"], "0"],
							[["setVar:to:", "digType", "0"]],
							[["call", "Check Tile at x: %n y: %n", ["readVariable", "x"], ["readVariable", "y"]],
								["setVar:to:", "digType", ["readVariable", "Tile Type"]],
								["setVar:to:", "Tile Index", "0"]]]]],
				[1868,
					7904,
					[["procDef", "Make Particle %n", ["idx"], [1], true],
						["setVar:to:", "tok_i", ["getLine:ofList:", ["getParam", "idx", "r"], "_Level"]],
						["setVar:to:",
							"tok_i",
							["getLine:ofList:", ["+", 4, ["*", ["readVariable", "tok_i"], ["readVariable", "TMul"]]], "_TileData"]],
						["doIfElse",
							["<", ["readVariable", "tok_i"], "30"],
							[["doIfElse",
									["=", ["readVariable", "tok_i"], "5"],
									[["setVar:to:", "tok_i", "0"]],
									[["setVar:to:", "tok_i", ["randomFrom:to:", 8, 10]]]]],
							[["setVar:to:", "tok_i", ["randomFrom:to:", 11, 13]]]],
						["doIf",
							[">", ["readVariable", "tok_i"], "0"],
							[["setVar:to:",
									"tok_i",
									["concatenate:with:",
										["readVariable", "tok_i"],
										["concatenate:with:",
											["concatenate:with:",
												" ",
												["concatenate:with:",
													["concatenate:with:",
														["+",
															["computeFunction:of:",
																"floor",
																["%", ["-", ["getParam", "idx", "r"], 1], ["readVariable", "MAP_WIDTH"]]],
															0.5],
														" "],
													["+",
														["computeFunction:of:",
															"floor",
															["\/", ["-", ["getParam", "idx", "r"], 1], ["readVariable", "MAP_WIDTH"]]],
														0.5]]],
											" "]]],
								["setLine:ofList:to:", 24, "_Chat", ["concatenate:with:", ["getLine:ofList:", 24, "_Chat"], ["readVariable", "tok_i"]]]]]]],
				[306, 37.75, [["setVar:to:", "RMul", "7"]]],
				[2617,
					5349,
					[["procDef", "Get Recipe text %n", ["typ"], [1], true],
						["setVar:to:", "around", ["readVariable", "RMul"]],
						["doUntil",
							[">", ["readVariable", "around"], ["lineCountOfList:", "_Recipes"]],
							[["setVar:to:", "tmp", ["getLine:ofList:", ["+", ["readVariable", "around"], 2], "_Recipes"]],
								["doIf",
									["=", ["readVariable", "tmp"], ["getParam", "typ", "r"]],
									[["deleteLine:ofList:", "all", "tmpList"],
										["setVar:to:", "tmp", ["getLine:ofList:", ["+", ["readVariable", "around"], 5], "_Recipes"]],
										["setVar:to:", "tok_i", "1"],
										["call", "Next Token"],
										["doUntil",
											["=", ["readVariable", "tok"], ""],
											[["append:toList:", ["readVariable", "tok"], "tmpList"], ["call", "Next Token"]]],
										["setVar:to:", "tmp", ["getLine:ofList:", ["+", ["readVariable", "around"], 6], "_Recipes"]],
										["setVar:to:", "tok_i", "1"],
										["setVar:to:", "digIdx", "1"],
										["setVar:to:", "recepeStr", " ("],
										["doRepeat",
											["lineCountOfList:", "tmpList"],
											[["call", "Next Token"],
												["doIf",
													[">", ["readVariable", "digIdx"], "1"],
													[["setVar:to:", "recepeStr", ["concatenate:with:", ["readVariable", "recepeStr"], ", "]]]],
												["setVar:to:",
													"recepeStr",
													["concatenate:with:",
														["readVariable", "recepeStr"],
														["concatenate:with:",
															["readVariable", "tok"],
															["concatenate:with:",
																"x",
																["getLine:ofList:",
																	["+", ["*", ["getLine:ofList:", ["readVariable", "digIdx"], "tmpList"], ["readVariable", "TMul"]], 2],
																	"_TileData"]]]]],
												["changeVar:by:", "digIdx", 1]]],
										["setVar:to:", "recepeStr", ["concatenate:with:", ["readVariable", "recepeStr"], ")"]],
										["setVar:to:",
											"Next Tile Say",
											["concatenate:with:",
												["getLine:ofList:",
													["+", ["*", ["getParam", "typ", "r"], ["readVariable", "TMul"]], 2],
													"_TileData"],
												["readVariable", "recepeStr"]]],
										["changeVar:by:", "around", 99999]]],
								["changeVar:by:", "around", ["readVariable", "RMul"]]]],
						["setVar:to:", "digIdx", 0]]],
				[2719.8,
					2502.2,
					[["procDef", "Next Token", [], [], true],
						["setVar:to:", "tok", ""],
						["doUntil",
							["|",
								[">", ["readVariable", "tok_i"], ["stringLength:", ["readVariable", "tmp"]]],
								["=", ["letter:of:", ["readVariable", "tok_i"], ["readVariable", "tmp"]], " "]],
							[["setVar:to:",
									"tok",
									["concatenate:with:", ["readVariable", "tok"], ["letter:of:", ["readVariable", "tok_i"], ["readVariable", "tmp"]]]],
								["changeVar:by:", "tok_i", 1]]],
						["changeVar:by:", "tok_i", 1]]],
				[1794.6,
					773.2,
					[["procDef", "Find Slot Typ %n %b", ["typ", "dontCreate"], [1, false], true],
						["doIfElse",
							[">", ["getParam", "typ", "r"], "0"],
							[["doIfElse",
									["&",
										[">", ["getParam", "typ", "r"], "213"],
										["<", ["getParam", "typ", "r"], "217"]],
									[["setVar:to:", "find slot id", "49"]],
									[["setVar:to:", "find slot id", "1"],
										["doUntil",
											["|",
												[">", ["readVariable", "find slot id"], "48"],
												["=", ["getLine:ofList:", ["readVariable", "find slot id"], "_inv"], ["getParam", "typ", "r"]]],
											[["changeVar:by:", "find slot id", 2]]]]],
								["doIfElse",
									[">", ["readVariable", "find slot id"], "48"],
									[["doIfElse",
											["getParam", "dontCreate", "b"],
											[["setVar:to:", "find slot id", "0"]],
											[["setVar:to:", "find slot id", "1"],
												["doUntil",
													["|",
														[">", ["readVariable", "find slot id"], "48"],
														["=", ["getLine:ofList:", ["readVariable", "find slot id"], "_inv"], "0"]],
													[["changeVar:by:", "find slot id", 2]]],
												["doIfElse",
													[">", ["readVariable", "find slot id"], "48"],
													[["setVar:to:", "find slot id", "0"]],
													[["setLine:ofList:to:", ["readVariable", "find slot id"], "_inv", ["getParam", "typ", "r"]],
														["setVar:to:", "find slot id", ["\/", ["+", ["readVariable", "find slot id"], 1], 2]],
														["setVar:to:", "inv_change", "2"]]]]]],
									[["setVar:to:", "find slot id", ["\/", ["+", ["readVariable", "find slot id"], 1], 2]]]]],
							[["setVar:to:", "find slot id", "0"]]]]],
				[2230.3, 2921.4, [["readVariable", "tmp"]]],
				[4572,
					1628,
					[["procDef", "Make Particle, typ: %n xy: %n %n", ["typ", "x", "y"], [1, 1, 1], true],
						["setLine:ofList:to:",
							24,
							"_Chat",
							["concatenate:with:",
								["getLine:ofList:", 24, "_Chat"],
								["concatenate:with:",
									["concatenate:with:",
										["getParam", "typ", "r"],
										["concatenate:with:",
											" ",
											["concatenate:with:",
												["concatenate:with:",
													["\/", ["rounded", ["*", ["getParam", "x", "r"], 10]], 10],
													" "],
												["\/",
													["rounded", ["*", ["+", ["getParam", "y", "r"], 0.3], 10]],
													10]]]],
									" "]]]]],
				[5151.95,
					68,
					[["procDef", "Pickup Message, item %n count %n", ["typ", "count"], [1, 1], false],
						["doIfElse",
							["=", ["getParam", "typ", "r"], ["getLine:ofList:", 32, "_Chat"]],
							[["setLine:ofList:to:", 32, "_Chat", ""],
								["call",
									"Pickup Message, item %n count %n",
									["getParam", "typ", "r"],
									["+", ["getLine:ofList:", 33, "_Chat"], ["getParam", "count", "r"]]]],
							[["doIfElse",
									["=", ["getParam", "typ", "r"], ["getLine:ofList:", 30, "_Chat"]],
									[["setLine:ofList:to:", 31, "_Chat", ["+", ["getLine:ofList:", 31, "_Chat"], ["getParam", "count", "r"]]]],
									[["setLine:ofList:to:", 32, "_Chat", ["getLine:ofList:", 30, "_Chat"]],
										["setLine:ofList:to:", 33, "_Chat", ["getLine:ofList:", 31, "_Chat"]],
										["setLine:ofList:to:", 30, "_Chat", ["getParam", "typ", "r"]],
										["setLine:ofList:to:", 31, "_Chat", ["getParam", "count", "r"]]]],
								["setLine:ofList:to:", 29, "_Chat", "1"]]]]],
				[5376.9,
					999.1,
					[["procDef", "Summon %n", ["toolID"], [1], true],
						["setVar:to:",
							"i",
							["getLine:ofList:", ["-", ["*", ["getParam", "toolID", "r"], 2], 1], "_inv"]],
						["setVar:to:",
							"x",
							["rounded", ["+", ["getAttribute:of:", "x", "Player"], ["randomFrom:to:", -15, 15]]]],
						["setVar:to:",
							"y",
							["rounded", ["+", ["getAttribute:of:", "y", "Player"], ["randomFrom:to:", 10, 12]]]],
						["call", "Place Mob %n %n", ["readVariable", "i"], ["getParam", "toolID", "r"]]]],
				[27,
					1803,
					[["procDef", "Check Cursor Zone", [], [], false],
						["call", "Check Tile at x: %n y: %n", ["readVariable", "x"], ["readVariable", "y"]],
						["doIfElse",
							[">", ["readVariable", "Tile Type"], "0"],
							[["setVar:to:",
									"mat",
									["getLine:ofList:", ["+", 4, ["*", ["readVariable", "Tile Type"], ["readVariable", "TMul"]]], "_TileData"]]],
							[["setVar:to:", "mat", "0"]]],
						["doIf",
							["not", ["=", ["readVariable", "Tile Index"], ["readVariable", "Tile Say"]]],
							[["doIf",
									[">", ["readVariable", "Tile Say"], "0"],
									[["setVar:to:", "Tile Say", 0], ["say:", ""]]]]],
						["doIfElse",
							["=", ["letter:of:", 2, ["readVariable", "mat"]], "3"],
							[["setVar:to:", "Inside Idx", ["readVariable", "Tile Index"]]],
							[["setVar:to:", "Inside Idx", 0]]],
						["doIf",
							["=", ["readVariable", "Tile Is Solid"], "2.5"],
							[["setVar:to:",
									"around",
									["getLine:ofList:", ["-", ["*", ["readVariable", "ToolMode"], 2], 1], "_inv"]],
								["setVar:to:",
									"tmp",
									["getLine:ofList:", ["+", 3, ["*", ["readVariable", "around"], ["readVariable", "TMul"]]], "_TileData"]],
								["doIf",
									["|", [">", ["readVariable", "tmp"], "7"], ["=", ["readVariable", "tmp"], "-3.5"]],
									[["setVar:to:", "Tile Is Solid", 0]]]]],
						["doIf",
							["=", ["readVariable", "Tile Is Solid"], "5.5"],
							[["doIf",
									["=",
										["getLine:ofList:", ["+", 6, ["*", ["readVariable", "Tile Type"], ["readVariable", "TMul"]]], "_TileData"],
										["getLine:ofList:", ["-", ["*", ["readVariable", "ToolMode"], 2], 1], "_inv"]],
									[["setVar:to:", "Tile Is Solid", 0]]]]],
						["doIfElse",
							["&",
								[">", ["readVariable", "Tile Is Solid"], "0"],
								["|",
									["|", ["=", ["readVariable", "Tool Type"], "1001"], ["=", ["readVariable", "Tool Type"], "1002"]],
									["not", ["=", ["readVariable", "Tile Is Solid"], "2"]]]],
							[["setVar:to:", "tmp", ["getLine:ofList:", ["+", ["readVariable", "Tile Index"], ["readVariable", "MAP_WIDTH"]], "_Level"]],
								["doIf",
									[">", ["readVariable", "tmp"], "0"],
									[["setVar:to:",
											"tmp",
											["getLine:ofList:", ["+", 3, ["*", ["readVariable", "tmp"], ["readVariable", "TMul"]]], "_TileData"]],
										["doIf",
											["|",
												["|",
													["=", ["readVariable", "tmp"], "1"],
													["|", ["=", ["readVariable", "tmp"], "3"], ["=", ["readVariable", "tmp"], "4"]]],
												["|",
													["=", ["computeFunction:of:", "floor", ["readVariable", "tmp"]], "6"],
													["=", ["readVariable", "tmp"], "7.5"]]],
											[["setVar:to:", "Tile Index", 0]]]]],
								["doIfElse",
									["|",
										["|",
											["=", ["letter:of:", 2, ["readVariable", "mat"]], "3"],
											["=", ["readVariable", "Tile Type"], "58"]],
										["=", ["readVariable", "Tile Type"], "155"]],
									[["doIfElse",
											["&",
												["=", ["getAttribute:of:", "MOUSE_PRESSED", "Player"], "true"],
												["not",
													["|", ["=", ["readVariable", "Tool Type"], "1001"], ["=", ["readVariable", "Tool Type"], "1002"]]]],
											[["setVar:to:", "Tile Index", 0]],
											[["doIf",
													["not", ["=", ["readVariable", "Tile Index"], ["readVariable", "Tile Say"]]],
													[["call", "Get LData For Tile %n", ["readVariable", "Tile Index"]],
														["doIfElse",
															["|",
																[">", ["readVariable", "i"], ["lineCountOfList:", "_LData"]],
																["=", ["getLine:ofList:", ["+", ["readVariable", "i"], 3], "_LData"], ""]],
															[["doIfElse",
																	["=", ["readVariable", "Tile Type"], "58"],
																	[["say:", "Press 'N' to write on this sign"]],
																	[["doIfElse",
																			["=", ["readVariable", "Tile Type"], "155"],
																			[["say:", "Land Claimed by unknown...?"]],
																			[["say:", "Press 'E' here to open chest"]]]]]],
															[["say:",
																	["concatenate:with:",
																		["getLine:ofList:", ["+", ["readVariable", "i"], 2], "_LData"],
																		["concatenate:with:", ": ", ["getLine:ofList:", ["+", ["readVariable", "i"], 3], "_LData"]]]]]],
														["setVar:to:", "Tile Say", ["readVariable", "Tile Index"]]]]]]],
									[["doIf",
											["|",
												["<", ["readVariable", "Tile Is Solid"], "3"],
												["not", ["=", ["readVariable", "Tool Type"], "1001"]]],
											[["doIfElse",
													["&",
														["=", ["letter:of:", 1, ["readVariable", "mat"]], "1"],
														["=", ["readVariable", "Tool Type"], "1002"]],
													null,
													[["doIfElse",
															["&", ["=", ["readVariable", "Tile Type"], "160"], ["=", ["readVariable", "Tool Type"], "1098"]],
															null,
															[["setVar:to:", "Tile Index", 0]]]]]]]]]],
							[["doIfElse",
									["|",
										["|", ["=", ["readVariable", "Tool Type"], "1001"], ["=", ["readVariable", "Tool Type"], "1002"]],
										["=", ["getLine:ofList:", ["*", ["readVariable", "ToolMode"], 2], "_inv"], "0"]],
									[["setVar:to:", "Tile Index", 0]],
									[["setVar:to:",
											"around",
											["getLine:ofList:", ["-", ["*", ["readVariable", "ToolMode"], 2], 1], "_inv"]],
										["setVar:to:", "tok", ["readVariable", "around"]],
										["setVar:to:",
											"tmp",
											["getLine:ofList:", ["+", 3, ["*", ["readVariable", "around"], ["readVariable", "TMul"]]], "_TileData"]],
										["doIfElse",
											["|", ["=", ["readVariable", "tmp"], "0"], ["=", ["readVariable", "around"], "218"]],
											[["setVar:to:", "Tile Index", 0]],
											[["doIf",
													["=", ["readVariable", "tmp"], "-1"],
													[["setVar:to:",
															"tok_i",
															["getLine:ofList:", ["+", 6, ["*", ["readVariable", "around"], ["readVariable", "TMul"]]], "_TileData"]],
														["setVar:to:",
															"tmp",
															["getLine:ofList:", ["+", 3, ["*", ["readVariable", "tok_i"], ["readVariable", "TMul"]]], "_TileData"]]]],
												["doIfElse",
													["=", ["readVariable", "tmp"], "2.5"],
													[["call", "Check Tile at x: %n y: %n", ["readVariable", "x"], ["readVariable", "y"]],
														["setVar:to:", "around", 0],
														["doIf", ["=", ["readVariable", "Tile Type"], "0"], [["changeVar:by:", "around", 1]]]],
													[["doIfElse",
															["<", ["readVariable", "tmp"], "5"],
															[["doIfElse",
																	["=", ["readVariable", "tmp"], "1"],
																	[["setVar:to:", "around", 0],
																		["call", "Check Tile at x: %n y: %n", ["readVariable", "x"], ["-", ["readVariable", "y"], 1]],
																		["doIf", ["=", ["readVariable", "Tile Type"], "1"], [["changeVar:by:", "around", 1]]]],
																	[["doIfElse",
																			["=", ["readVariable", "tmp"], "2"],
																			[["setVar:to:", "around", 0],
																				["call", "Check Tile at x: %n y: %n", ["readVariable", "x"], ["-", ["readVariable", "y"], 1]],
																				["doIf",
																					["=", ["readVariable", "Tile Type"], "1"],
																					[["call", "Check Tile at x: %n y: %n", ["readVariable", "x"], ["readVariable", "y"]],
																						["doIf",
																							["not", ["=", ["readVariable", "Tile Is Solid"], "2"]],
																							[["changeVar:by:", "around", 1]]]]]],
																			[["doIfElse",
																					["|",
																						["=", ["readVariable", "tmp"], "3"],
																						["|", ["=", ["readVariable", "tmp"], "3.25"], ["=", ["readVariable", "tmp"], "-3"]]],
																					[["setVar:to:", "around", 0],
																						["call", "Check Tile at x: %n y: %n", ["readVariable", "x"], ["-", ["readVariable", "y"], 1]],
																						["doIf", [">", ["readVariable", "Tile Is Solid"], "6"], [["changeVar:by:", "around", 1]]]],
																					[["doIfElse",
																							["=", ["readVariable", "tmp"], "3.5"],
																							[["setVar:to:", "around", 0],
																								["call", "Check Tile at x: %n y: %n", ["readVariable", "x"], ["-", ["readVariable", "y"], 1]],
																								["doIf",
																									["|", [">", ["readVariable", "Tile Is Solid"], "6"], ["=", ["readVariable", "Tile Type"], "55"]],
																									[["changeVar:by:", "around", 1]]]],
																							[["doIfElse",
																									["=", ["readVariable", "tmp"], "4"],
																									[["setVar:to:", "around", 0],
																										["call", "Check Tile at x: %n y: %n", ["readVariable", "x"], ["+", ["readVariable", "y"], 1]],
																										["doIf",
																											["=", ["readVariable", "Tile Is Solid"], "0"],
																											[["call", "Check Tile at x: %n y: %n", ["readVariable", "x"], ["-", ["readVariable", "y"], 1]],
																												["doIf",
																													[">", ["readVariable", "Tile Is Solid"], "9"],
																													[["call", "Check Tile at x: %n y: %n", ["readVariable", "x"], ["+", ["readVariable", "y"], 2]],
																														["doIf", [">", ["readVariable", "Tile Is Solid"], "9"], [["changeVar:by:", "around", 1]]]]]]]],
																									null]]]]]]]]]],
															[["doIfElse",
																	["=", ["readVariable", "tmp"], "5"],
																	[["call", "solid around %n %n %b", ["readVariable", "x"], ["readVariable", "y"], ["not", false]]],
																	[["doIfElse",
																			["=", ["readVariable", "tmp"], "5.5"],
																			[["setVar:to:", "around", 0],
																				["call", "Check Tile at x: %n y: %n", ["readVariable", "x"], ["+", ["readVariable", "y"], 1]],
																				["doIf",
																					["|", ["=", ["readVariable", "Tile Is Solid"], "5.5"], [">", ["readVariable", "Tile Is Solid"], "7.75"]],
																					[["changeVar:by:", "around", 1]]]],
																			[["doIfElse",
																					["|",
																						["=", ["readVariable", "tmp"], "6"],
																						["|", ["=", ["readVariable", "tmp"], "6.5"], ["=", ["readVariable", "tmp"], "7.5"]]],
																					[["setVar:to:", "around", 0],
																						["call", "Check Tile at x: %n y: %n", ["readVariable", "x"], ["-", ["readVariable", "y"], 1]],
																						["doIf",
																							[">", ["readVariable", "Tile Is Solid"], "6"],
																							[["call",
																									"Check Tile at x: %n y: %n",
																									["+", ["readVariable", "x"], 1],
																									["-", ["readVariable", "y"], 1]],
																								["doIf",
																									[">", ["readVariable", "Tile Is Solid"], "6"],
																									[["call", "Check Tile at x: %n y: %n", ["+", ["readVariable", "x"], 1], ["readVariable", "y"]],
																										["doIf",
																											["|", ["=", ["readVariable", "Tile Is Solid"], "0"], ["=", ["readVariable", "Tile Is Solid"], "2"]],
																											[["doIfElse",
																													["=", ["readVariable", "tmp"], "6.5"],
																													[["call", "Check Tile at x: %n y: %n", ["readVariable", "x"], ["+", ["readVariable", "y"], 1]],
																														["doIf",
																															["=", ["readVariable", "Tile Is Solid"], "0"],
																															[["call",
																																	"Check Tile at x: %n y: %n",
																																	["+", ["readVariable", "x"], 1],
																																	["+", ["readVariable", "y"], 1]],
																																["doIf", ["=", ["readVariable", "Tile Is Solid"], "0"], [["changeVar:by:", "around", 1]]]]]],
																													[["changeVar:by:", "around", 1]]]]]]]]]],
																					[["doIfElse",
																							["=", ["readVariable", "tmp"], "7"],
																							[["setVar:to:", "around", 0],
																								["call", "Check Tile at x: %n y: %n", ["-", ["readVariable", "x"], 1], ["readVariable", "y"]],
																								["doIf", [">", ["readVariable", "Tile Is Solid"], "6"], [["changeVar:by:", "around", 1]]],
																								["call", "Check Tile at x: %n y: %n", ["+", ["readVariable", "x"], 1], ["readVariable", "y"]],
																								["doIf", [">", ["readVariable", "Tile Is Solid"], "6"], [["changeVar:by:", "around", 1]]]],
																							[["doIfElse",
																									[">",
																										["computeFunction:of:",
																											"abs",
																											["-", ["getAttribute:of:", "x", "Player"], ["+", ["readVariable", "x"], 0.5]]],
																										["+", ["getAttribute:of:", "Player Width", "Player"], 0.5]],
																									[["call", "solid around %n %n %b", ["readVariable", "x"], ["readVariable", "y"], false]],
																									[["setVar:to:",
																											"tok_i",
																											["computeFunction:of:",
																												"abs",
																												["-",
																													["+", ["getAttribute:of:", "y", "Player"], ["\/", ["getAttribute:of:", "Player Height", "Player"], 2]],
																													["+", ["readVariable", "y"], 0.5]]]],
																										["doIfElse",
																											[">",
																												["readVariable", "tok_i"],
																												["\/", ["+", ["getAttribute:of:", "Player Height", "Player"], 0.99], 2]],
																											[["call", "solid around %n %n %b", ["readVariable", "x"], ["readVariable", "y"], false]],
																											[["setVar:to:", "around", 0]]]]]]]]]]]]]]],
														["doIfElse",
															[">", ["readVariable", "around"], "0"],
															[["call", "Check Tile at x: %n y: %n", ["readVariable", "x"], ["readVariable", "y"]],
																["setVar:to:",
																	"digType",
																	["getLine:ofList:",
																		["+",
																			6,
																			["*",
																				["getLine:ofList:", ["-", ["*", ["readVariable", "ToolMode"], 2], 1], "_inv"],
																				["readVariable", "TMul"]]],
																		"_TileData"]],
																["doIfElse",
																	["&",
																		["=", ["readVariable", "tmp"], "5.5"],
																		["=", ["readVariable", "digType"], ["readVariable", "Tile Type"]]],
																	[["call", "Find Chain"]],
																	[["setVar:to:", "digType", ["readVariable", "Tile Type"]]]]],
															[["setVar:to:", "Tile Index", 0]]]]]]]]]]],
						["doIfElse",
							["=", ["readVariable", "Tile Index"], "0"],
							[["setVar:to:", "digIdx", 0],
								["doIf",
									["=", ["readVariable", "Cursor Visible"], "1"],
									[["hide"], ["setVar:to:", "Cursor Visible", 0]]]],
							[["call", "Cursor Action"]]]]],
				[30,
					7459,
					[["procDef", "Cursor Action", [], [], false],
						["call", "show cursor"],
						["doIfElse",
							["=", ["getAttribute:of:", "MOUSE_PRESSED", "Player"], "true"],
							[["doIfElse",
									["|",
										["=", ["readVariable", "Tool Type"], "1001"],
										["|", ["=", ["readVariable", "Tool Type"], "1002"], ["=", ["readVariable", "Tool Type"], "1098"]]],
									[["doIfElse",
											["&",
												["=", ["readVariable", "digIdx"], ["readVariable", "Tile Index"]],
												["=", ["readVariable", "digType"], ["readVariable", "Tile Type"]]],
											[["doIfElse",
													[">", ["readVariable", "digTime"], "0"],
													[["doIf",
															["<", ["%", ["readVariable", "digTime"], 16], "4"],
															[["call", "Make Particle %n", ["readVariable", "digIdx"]]]],
														["changeVar:by:", "digTime", ["-", 0, ["getAttribute:of:", "_Tick", "Multiplayer"]]]],
													[["doIf",
															["=", ["readVariable", "Tool Type"], "1098"],
															[["setLine:ofList:to:", ["-", ["*", ["readVariable", "ToolMode"], 2], 1], "_inv", "0"],
																["setLine:ofList:to:", ["*", ["readVariable", "ToolMode"], 2], "_inv", "0"]]],
														["call", "Dig Up %n", ["readVariable", "digIdx"]]]]],
											[["setVar:to:", "digType", ["readVariable", "Tile Type"]],
												["setVar:to:", "digIdx", ["readVariable", "Tile Index"]],
												["doIfElse",
													["<", ["readVariable", "reach"], "10"],
													[["setVar:to:",
															"digTime",
															["getLine:ofList:",
																["+", 5, ["*", ["getLine:ofList:", ["readVariable", "digIdx"], "_Level"], ["readVariable", "TMul"]]],
																"_TileData"]],
														["doIf",
															["=", ["readVariable", "BuffID"], "108"],
															[["setVar:to:", "digTime", ["*", ["readVariable", "digTime"], 0.5]]]],
														["setVar:to:",
															"i",
															["getLine:ofList:", ["-", ["*", ["readVariable", "ToolMode"], 2], 1], "_inv"]],
														["setVar:to:",
															"digTime",
															["*",
																["readVariable", "digTime"],
																["\/",
																	5,
																	["getLine:ofList:", ["+", 5, ["*", ["readVariable", "i"], ["readVariable", "TMul"]]], "_TileData"]]]]],
													[["setVar:to:", "digTime", "1"]]]]]],
									[["setVar:to:", "digIdx", ["readVariable", "Tile Index"]],
										["setVar:to:", "digTime", "0"],
										["setVar:to:",
											"Tile Type",
											["getLine:ofList:", ["-", ["*", ["readVariable", "ToolMode"], 2], 1], "_inv"]],
										["doIfElse",
											["=", ["readVariable", "Tile Type"], "155"],
											[["call", "Is Protected %n percent %n", ["readVariable", "digIdx"], 1],
												["doIf",
													["<", ["readVariable", "Tile Type"], "1"],
													[["call", "Is Protected %n percent %n", ["readVariable", "digIdx"], 2],
														["doIf", [">", ["readVariable", "Tile Type"], "0"], [["setVar:to:", "Tile Type", "999"]]]]]],
											[["call", "Is Protected %n percent %n", ["readVariable", "digIdx"], 1]]],
										["doIfElse",
											[">", ["readVariable", "Tile Type"], "0"],
											[["doIfElse",
													["=", ["readVariable", "Tile Type"], "999"],
													[["say:", "This is too close to another players land claim sign"]],
													[["say:", ["concatenate:with:", "This land is owned by ", ["getLine:ofList:", ["readVariable", "Tile Type"], "@PlayerNames"]]]]],
												["setVar:to:", "Tile Say", ["readVariable", "digIdx"]]],
											[["setVar:to:",
													"Tile Type",
													["getLine:ofList:", ["-", ["*", ["readVariable", "ToolMode"], 2], 1], "_inv"]],
												["setVar:to:",
													"tmp",
													["getLine:ofList:", ["+", 3, ["*", ["readVariable", "Tile Type"], ["readVariable", "TMul"]]], "_TileData"]],
												["doIfElse",
													["|", ["=", ["readVariable", "tmp"], "-3"], ["=", ["readVariable", "tmp"], "-3.5"]],
													[["doIf",
															["=", ["readVariable", "MouseRelease"], "0"],
															[["call", "Place Mob %n %n", ["readVariable", "Tile Type"], ["readVariable", "ToolMode"]], ["setVar:to:", "MouseRelease", "1"]]]],
													[["doIfElse",
															[">", ["timer"], ["readVariable", "PlaceTimer"]],
															[["doIfElse",
																	["|", ["=", ["readVariable", "Tile Type"], "215"], ["=", ["readVariable", "Tile Type"], "216"]],
																	[["setVar:to:",
																			"Tile Type",
																			["getLine:ofList:", ["+", 6, ["*", ["readVariable", "Tile Type"], ["readVariable", "TMul"]]], "_TileData"]],
																		["call", "Place Tile %n %n", ["readVariable", "digIdx"], ["readVariable", "Tile Type"]],
																		["setLine:ofList:to:", ["-", ["*", ["readVariable", "ToolMode"], 2], 1], "_inv", "214"],
																		["setVar:to:", "inv_change", "2"]],
																	[["doIf",
																			["=", ["readVariable", "tmp"], "-1"],
																			[["setVar:to:",
																					"Tile Type",
																					["getLine:ofList:", ["+", 6, ["*", ["readVariable", "Tile Type"], ["readVariable", "TMul"]]], "_TileData"]]]],
																		["call", "Place Tile %n %n", ["readVariable", "digIdx"], ["readVariable", "Tile Type"]],
																		["call", "Drop a Block %n", ["readVariable", "ToolMode"]]]],
																["setVar:to:", "PlaceTimer", ["+", ["timer"], 0.12]]],
															null]]]]],
										["setVar:to:", "digIdx", "0"]]]],
							[["setVar:to:", "digIdx", 0]]]]],
				[34,
					9708,
					[["procDef", "Dig Up %n", ["idx"], [1], false],
						["call", "Is Protected %n", ["getParam", "idx", "r"]],
						["doIfElse",
							[">", ["readVariable", "Tile Type"], "0"],
							[["say:", ["concatenate:with:", "This land is owned by ", ["getLine:ofList:", ["readVariable", "Tile Type"], "@PlayerNames"]]],
								["setVar:to:", "Tile Say", ["getParam", "idx", "r"]],
								["setVar:to:", "Tile Type", "0"]],
							[["setVar:to:", "Tile Type", ["getLine:ofList:", ["getParam", "idx", "r"], "_Level"]]]],
						["doIfElse",
							[">", ["readVariable", "Tile Type"], "0"],
							[["setVar:to:",
									"mat",
									["getLine:ofList:", ["+", 4, ["*", ["readVariable", "Tile Type"], ["readVariable", "TMul"]]], "_TileData"]]],
							[["setVar:to:", "mat", "0"]]],
						["doIf",
							["=", ["letter:of:", 2, ["readVariable", "mat"]], "3"],
							[["call", "Get LData For Tile %n", ["getParam", "idx", "r"]],
								["doIf",
									["<", ["readVariable", "i"], ["lineCountOfList:", "_LData"]],
									[["doIf",
											[">", ["getLine:ofList:", ["+", ["readVariable", "i"], 1], "_LData"], "4"],
											[["setVar:to:", "Tile Type", 0]]]]]]],
						["doIf",
							[">", ["readVariable", "Tile Type"], "0"],
							[["call", "Add Liquid %n", ["+", ["getParam", "idx", "r"], ["readVariable", "MAP_WIDTH"]]],
								["call", "Add Liquid %n", ["-", ["getParam", "idx", "r"], 1]],
								["call", "Add Liquid %n", ["+", ["getParam", "idx", "r"], 1]],
								["setVar:to:",
									"tmp",
									["getLine:ofList:", ["+", 4, ["*", ["readVariable", "Tile Type"], ["readVariable", "TMul"]]], "_TileData"]],
								["call",
									"Pick Up Block %n %n",
									["getLine:ofList:", ["+", 6, ["*", ["readVariable", "Tile Type"], ["readVariable", "TMul"]]], "_TileData"],
									1],
								["doIf",
									["=", ["readVariable", "Tile Type"], "253"],
									[["setVar:to:",
											"tok",
											["+",
												["computeFunction:of:", "floor", ["\/", ["getParam", "idx", "r"], ["readVariable", "MAP_WIDTH"]]],
												0.5]],
										["call",
											"Make Particle, typ: %n xy: %n %n",
											["randomFrom:to:", 1050, 1125],
											["%", ["-", ["getParam", "idx", "r"], 0.5], ["readVariable", "MAP_WIDTH"]],
											["readVariable", "tok"]]]],
								["doIf",
									["=", ["readVariable", "Tile Type"], "155"],
									[["setLine:ofList:to:", ["+", ["getAttribute:of:", "@Player ID", "Multiplayer"], 50], "@PlayerNames", ""]]],
								["doIfElse",
									["=", ["readVariable", "tmp"], "10"],
									[["setVar:to:", "digIdx", ["getParam", "idx", "r"]],
										["doBroadcastAndWait", "harvest tree"],
										["call", "Pick Up Block %n %n", 31, ["randomFrom:to:", 2, 3]]],
									[["setVar:to:",
											"tmp",
											["getLine:ofList:", ["+", 3, ["*", ["readVariable", "Tile Type"], ["readVariable", "TMul"]]], "_TileData"]],
										["doIfElse",
											["|", ["=", ["readVariable", "tmp"], "4"], ["=", ["readVariable", "digType"], "64"]],
											[["call", "Place Tile %n %n", ["+", ["getParam", "idx", "r"], ["readVariable", "MAP_WIDTH"]], 0]],
											[["doIfElse",
													["|", ["=", ["readVariable", "tmp"], "4.5"], ["=", ["readVariable", "digType"], "63"]],
													[["call", "Place Tile %n %n", ["-", ["getParam", "idx", "r"], ["readVariable", "MAP_WIDTH"]], 0]],
													[["doIfElse",
															["|", ["=", ["readVariable", "tmp"], "6"], ["=", ["readVariable", "tmp"], "7.5"]],
															[["setVar:to:",
																	"tok",
																	["getLine:ofList:",
																		["+", 6, ["*", ["+", ["readVariable", "Tile Type"], 1], ["readVariable", "TMul"]]],
																		"_TileData"]],
																["doIfElse",
																	["=",
																		["getLine:ofList:", ["+", 6, ["*", ["readVariable", "Tile Type"], ["readVariable", "TMul"]]], "_TileData"],
																		["readVariable", "tok"]],
																	[["call", "Place Tile %n %n", ["+", ["getParam", "idx", "r"], 1], 0],
																		["call", "Check Supported %n", ["+", ["getParam", "idx", "r"], 1]]],
																	[["call", "Place Tile %n %n", ["-", ["getParam", "idx", "r"], 1], 0],
																		["call", "Check Supported %n", ["-", ["getParam", "idx", "r"], 1]]]]],
															[["doIfElse",
																	["=", ["readVariable", "tmp"], "6.5"],
																	[["setVar:to:",
																			"tmp",
																			["getLine:ofList:", ["+", 6, ["*", ["readVariable", "Tile Type"], ["readVariable", "TMul"]]], "_TileData"]],
																		["setVar:to:",
																			"tmp",
																			["getLine:ofList:", ["+", 6, ["*", ["readVariable", "tmp"], ["readVariable", "TMul"]]], "_TileData"]],
																		["doIfElse",
																			["=", ["readVariable", "Tile Type"], ["readVariable", "tmp"]],
																			[["setVar:to:", "digIdx", ["getParam", "idx", "r"]]],
																			[["doIfElse",
																					["=", ["readVariable", "Tile Type"], ["-", ["readVariable", "tmp"], 1]],
																					[["setVar:to:", "digIdx", ["-", ["getParam", "idx", "r"], ["readVariable", "MAP_WIDTH"]]]],
																					[["doIfElse",
																							["=", ["readVariable", "Tile Type"], ["+", ["readVariable", "tmp"], 1]],
																							[["setVar:to:",
																									"digIdx",
																									["-", ["-", ["getParam", "idx", "r"], ["readVariable", "MAP_WIDTH"]], 1]]],
																							[["setVar:to:", "digIdx", ["-", ["getParam", "idx", "r"], 1]]]]]]]],
																		["call", "Place Tile %n %n", ["readVariable", "digIdx"], 0],
																		["call", "Place Tile %n %n", ["+", ["readVariable", "digIdx"], 1], 0],
																		["call", "Place Tile %n %n", ["+", ["readVariable", "digIdx"], ["readVariable", "MAP_WIDTH"]], 0],
																		["call",
																			"Place Tile %n %n",
																			["+", ["+", ["readVariable", "digIdx"], ["readVariable", "MAP_WIDTH"]], 1],
																			0]],
																	null]]]]]]],
										["doIfElse",
											["=", ["readVariable", "mat"], "70"],
											[["call", "Place Tile %n %n", ["getParam", "idx", "r"], 178]],
											[["call", "Place Tile %n %n", ["getParam", "idx", "r"], 0]]],
										["call", "Check Supported %n", ["getParam", "idx", "r"]]]]]]]],
				[37.4,
					12176.55,
					[["procDef", "Check Supported %n", ["idx"], [1], false],
						["setVar:to:",
							"Tile Type",
							["getLine:ofList:", ["+", ["getParam", "idx", "r"], ["readVariable", "MAP_WIDTH"]], "_Level"]],
						["doIf",
							[">", ["readVariable", "Tile Type"], "0"],
							[["setVar:to:",
									"tmp",
									["getLine:ofList:", ["+", 3, ["*", ["readVariable", "Tile Type"], ["readVariable", "TMul"]]], "_TileData"]],
								["doIf",
									["|",
										["&",
											["&", [">", ["readVariable", "tmp"], "0"], ["<", ["readVariable", "tmp"], "5.125"]],
											["=", ["rounded", ["readVariable", "tmp"]], ["readVariable", "tmp"]]],
										["=", ["readVariable", "tmp"], "3.5"]],
									[["call", "Dig Up %n", ["+", ["getParam", "idx", "r"], ["readVariable", "MAP_WIDTH"]]]]]]],
						["setVar:to:", "Tile Type", ["getLine:ofList:", ["-", ["getParam", "idx", "r"], 1], "_Level"]],
						["doIf",
							[">", ["readVariable", "Tile Type"], "0"],
							[["setVar:to:",
									"tmp",
									["getLine:ofList:", ["+", 3, ["*", ["readVariable", "Tile Type"], ["readVariable", "TMul"]]], "_TileData"]],
								["doIf",
									["=", ["readVariable", "tmp"], "5.375"],
									[["call", "Dig Up %n", ["-", ["getParam", "idx", "r"], 1]]]]]],
						["setVar:to:", "Tile Type", ["getLine:ofList:", ["+", ["getParam", "idx", "r"], 1], "_Level"]],
						["doIf",
							[">", ["readVariable", "Tile Type"], "0"],
							[["setVar:to:",
									"tmp",
									["getLine:ofList:", ["+", 3, ["*", ["readVariable", "Tile Type"], ["readVariable", "TMul"]]], "_TileData"]],
								["doIf",
									["=", ["readVariable", "tmp"], "5.25"],
									[["call", "Dig Up %n", ["+", ["getParam", "idx", "r"], 1]]]]]]]],
				[3870.25, 818.3, [["*", ["readVariable", "MAP_HEIGHT"], 0.63]]],
				[3424.25,
					749.3,
					[["procDef", "Gen Veg %n", ["random"], [1], true],
						["setVar:to:", "x", ["getLine:ofList:", 20, "_Chat"]],
						["setVar:to:", "y", ["getLine:ofList:", 21, "_Chat"]],
						["setVar:to:",
							"tok_i",
							["\/", ["getAttribute:of:", "y", "Player"], ["-", ["getAttribute:of:", "sea level", "Setup Level"], 13]]],
						["doIfElse",
							["&",
								[">", ["computeFunction:of:", "abs", ["-", 1.5, ["getAttribute:of:", "Day Night", "Player"]]], "0.43"],
								[">", ["readVariable", "tok_i"], "1"]],
							[["doIfElse",
									["=", ["randomFrom:to:", 1, 2], "1"],
									[["call", "Gen Mob or Veg %b typ %n %n", false, 1, 1]],
									[["doIfElse",
											["|",
												[">", ["getAttribute:of:", "Peaceful?", "Frame"], "0"],
												["<", ["randomFrom:to:", 1, 4], "4"]],
											[["doIf",
													["&",
														["<", ["+", ["readVariable", "x"], ["readVariable", "y"]], "15"],
														["<", ["readVariable", "x"], "6"]],
													[["doIfElse",
															["<", ["randomFrom:to:", 1, 4], "4"],
															[["doIfElse",
																	["<", ["randomFrom:to:", 1, 2], "2"],
																	[["call", "Gen Mob or Veg %b typ %n %n", ["not", false], 125, 1]],
																	[["doIfElse",
																			["<", ["randomFrom:to:", 1, 2], "2"],
																			[["call", "Gen Mob or Veg %b typ %n %n", ["not", false], 135, 1]],
																			[["call", "Gen Mob or Veg %b typ %n %n", ["not", false], 256, 1]]]]]],
															[["call", "Gen Mob or Veg %b typ %n %n", ["not", false], 249, 0]]]]]],
											[["doIf",
													["&",
														["<", ["+", ["readVariable", "x"], ["readVariable", "y"]], "15"],
														["&",
															["<", ["readVariable", "y"], "6"],
															["<", ["readVariable", "y"], ["*", 2, ["getAttribute:of:", "@Player Count", "Multiplayer"]]]]],
													[["call", "Gen Slime"]]]]]]]],
							[["doIf",
									["|",
										["<", ["readVariable", "tok_i"], "1"],
										["=", ["randomFrom:to:", 1, 2], "1"]],
									[["doIf",
											["&",
												["<", ["+", ["readVariable", "x"], ["readVariable", "y"]], "15"],
												["&",
													["<", ["readVariable", "y"], "8"],
													["<", ["readVariable", "y"], ["*", 4, ["getAttribute:of:", "@Player Count", "Multiplayer"]]]]],
											[["doIfElse",
													["<", ["getParam", "random", "r"], "60"],
													[["doIfElse",
															["<", ["getParam", "random", "r"], "30"],
															[["call", "Gen Slime"]],
															[["call", "Gen Mob or Veg %b typ %n %n", ["not", false], 151, 2]]]],
													[["doIfElse",
															["<", ["getParam", "random", "r"], "70"],
															[["doIfElse",
																	[">", ["readVariable", "tok_i"], "1"],
																	[["call", "Gen Mob or Veg %b typ %n %n", ["not", false], 258, 2]],
																	[["call", "Gen Mob or Veg %b typ %n %n", ["not", false], 257, 2]]]],
															[["doIfElse",
																	["<", ["getParam", "random", "r"], "85"],
																	[["call", "Gen Mob or Veg %b typ %n %n", ["not", false], 149, 0]],
																	[["doIfElse",
																			["|",
																				[">", ["readVariable", "tok_i"], "0.3"],
																				["=", ["randomFrom:to:", 1, 2], "1"]],
																			[["doIfElse",
																					[">", ["readVariable", "tok_i"], "1"],
																					[["call", "Gen Mob or Veg %b typ %n %n", ["not", false], 258, 2]],
																					[["call", "Gen Mob or Veg %b typ %n %n", ["not", false], 222, 0]]]],
																			[["call", "Gen Mob or Veg %b typ %n %n", ["not", false], 223, 0]]]]]]]]]]]]]]]]],
				[4231.25, 1591.8, [["readVariable", "MAP_HEIGHT"]]],
				[3702.25, 755.3, [["-", ["getAttribute:of:", "sea level", "Setup Level"], 13]]],
				[4231.25, 1589.8, [["-", 10, 10]]],
				[4007.25, 878.3, [["getAttribute:of:", "y", "Player"]]],
				[3967.25, 954.3, [["-", ["getAttribute:of:", "sea level", "Setup Level"], 13]]],
				[3985.25,
					1514.3,
					[["<", ["getAttribute:of:", "y", "Player"], ["-", ["getAttribute:of:", "sea level", "Setup Level"], 18]]]],
				[3432.55,
					2385.65,
					[["procDef", "Gen Slime", [], [], false],
						["doIfElse",
							["&",
								["<", ["readVariable", "tok_i"], "0.2"],
								["<", ["randomFrom:to:", 1, 3], "3"]],
							[["call", "Gen Mob or Veg %b typ %n %n", ["not", false], 205, 2]],
							[["doIfElse",
									["&",
										["<", ["readVariable", "tok_i"], "0.5"],
										["=", ["randomFrom:to:", 1, 15], "1"]],
									[["call", "Gen Mob or Veg %b typ %n %n", ["not", false], 204, 2]],
									[["doIfElse",
											["<", ["randomFrom:to:", 1, 3], "3"],
											[["call", "Gen Mob or Veg %b typ %n %n", ["not", false], 136, 2]],
											[["doIfElse",
													["<", ["randomFrom:to:", 1, 5], "4"],
													[["call", "Gen Mob or Veg %b typ %n %n", ["not", false], 202, 2]],
													[["call", "Gen Mob or Veg %b typ %n %n", ["not", false], 203, 2]]]]]]]]]]],
				[3435.8,
					2911,
					[["procDef", "Gen Mob or Veg %b typ %n %n", ["mob?", "typ", "surface"], [false, 1, 1], true],
						["doIfElse",
							["getParam", "mob?", "b"],
							[["setVar:to:",
									"x",
									["+",
										["rounded", ["+", ["getAttribute:of:", "x", "Player"], 1]],
										["*", ["readVariable", "MAP_WIDTH"], ["rounded", ["getAttribute:of:", "y", "Player"]]]]],
								["changeVar:by:", "x", ["*", ["randomFrom:to:", -8, 8], ["readVariable", "MAP_WIDTH"]]],
								["doIfElse",
									[">", ["getAttribute:of:", "dir", "Player"], "0"],
									[["doIfElse",
											[">", ["randomFrom:to:", 0, 3], "0"],
											[["changeVar:by:", "x", ["randomFrom:to:", 10, 25]]],
											[["changeVar:by:", "x", ["randomFrom:to:", -8, -16]]]]],
									[["doIfElse",
											[">", ["randomFrom:to:", 0, 3], "0"],
											[["changeVar:by:", "x", ["randomFrom:to:", -10, -25]]],
											[["changeVar:by:", "x", ["randomFrom:to:", 8, 16]]]]]]],
							[["setVar:to:",
									"x",
									["randomFrom:to:",
										["rounded", ["*", ["readVariable", "MAP_WIDTH"], ["getAttribute:of:", "sea level", "Setup Level"]]],
										["rounded", ["*", ["readVariable", "MAP_WIDTH"], ["+", ["getAttribute:of:", "sea level", "Setup Level"], 20]]]]]]],
						["call", "Get Solid Details %n", ["getLine:ofList:", ["readVariable", "x"], "_Level"]],
						["doIfElse",
							["<", ["readVariable", "Tile Is Solid"], "7"],
							[["doIfElse",
									["=", ["getParam", "surface", "r"], "0"],
									[["setVar:to:", "i", "999"]],
									[["setVar:to:", "i", "1"],
										["setVar:to:", "y", "0"],
										["doUntil",
											[">", ["readVariable", "i"], "20"],
											[["call",
													"Get Solid Details %n",
													["getLine:ofList:",
														["+", ["readVariable", "x"], ["*", ["readVariable", "MAP_WIDTH_NEG"], ["readVariable", "i"]]],
														"_Level"]],
												["doIfElse",
													[">", ["readVariable", "Tile Is Solid"], "6.9"],
													[["changeVar:by:", "x", ["*", ["readVariable", "MAP_WIDTH_NEG"], ["-", ["readVariable", "i"], 1]]],
														["setVar:to:", "i", "999"]],
													[["call",
															"Get Solid Details %n",
															["getLine:ofList:",
																["+", ["readVariable", "x"], ["*", ["readVariable", "MAP_WIDTH"], ["readVariable", "i"]]],
																"_Level"]],
														["doIfElse",
															["=", ["readVariable", "y"], "0"],
															[["doIf", [">", ["readVariable", "Tile Is Solid"], "6.9"], [["setVar:to:", "y", "1"]]],
																["changeVar:by:", "i", 1]],
															[["doIfElse",
																	["<", ["readVariable", "Tile Is Solid"], "7"],
																	[["changeVar:by:", "x", ["*", ["readVariable", "MAP_WIDTH"], ["readVariable", "i"]]],
																		["setVar:to:", "i", "999"]],
																	[["changeVar:by:", "i", 1]]]]]]]]]]]],
							[["setVar:to:", "i", "1"],
								["setVar:to:", "y", "0"],
								["doUntil",
									[">", ["readVariable", "i"], "20"],
									[["call",
											"Get Solid Details %n",
											["getLine:ofList:",
												["+", ["readVariable", "x"], ["*", ["readVariable", "MAP_WIDTH"], ["readVariable", "i"]]],
												"_Level"]],
										["doIfElse",
											["<", ["readVariable", "Tile Is Solid"], "7"],
											[["changeVar:by:", "x", ["*", ["readVariable", "MAP_WIDTH"], ["readVariable", "i"]]],
												["setVar:to:", "i", "999"]],
											[["call",
													"Get Solid Details %n",
													["getLine:ofList:",
														["+", ["readVariable", "x"], ["*", ["readVariable", "MAP_WIDTH_NEG"], ["readVariable", "i"]]],
														"_Level"]],
												["doIfElse",
													["=", ["readVariable", "y"], "0"],
													[["doIf",
															["<", ["readVariable", "Tile Is Solid"], "7"],
															[["doIfElse",
																	[">", ["getParam", "surface", "r"], "0"],
																	[["setVar:to:", "y", "1"]],
																	[["changeVar:by:", "x", ["*", ["readVariable", "MAP_WIDTH_NEG"], ["readVariable", "i"]]],
																		["setVar:to:", "i", "999"]]]]],
														["changeVar:by:", "i", 1]],
													[["doIfElse",
															["<", ["readVariable", "Tile Is Solid"], "7"],
															[["changeVar:by:", "i", 1]],
															[["changeVar:by:", "x", ["*", ["readVariable", "MAP_WIDTH_NEG"], ["-", ["readVariable", "i"], 1]]],
																["setVar:to:", "i", "999"]]]]]]]]]]],
						["doIfElse",
							[">", ["readVariable", "i"], "990"],
							[["doIfElse",
									["getParam", "mob?", "b"],
									[["setVar:to:", "i", ["readVariable", "x"]],
										["setVar:to:",
											"y",
											["computeFunction:of:", "floor", ["\/", ["-", ["readVariable", "i"], 1], ["readVariable", "MAP_WIDTH"]]]],
										["setVar:to:",
											"x",
											["+",
												["%", ["computeFunction:of:", "floor", ["-", ["readVariable", "i"], 1]], ["readVariable", "MAP_WIDTH"]],
												0.5]],
										["doIfElse",
											["=", ["getParam", "surface", "r"], "0"],
											[["call", "Place Mob %n %n", ["getParam", "typ", "r"], 0]],
											[["call", "Get Solid Details %n", ["getLine:ofList:", ["readVariable", "i"], "_Level"]],
												["doIf",
													["=", ["readVariable", "Tile Is Solid"], "2.5"],
													[["doIf",
															["&",
																["=", ["getLine:ofList:", ["-", ["readVariable", "i"], ["readVariable", "MAP_WIDTH"]], "_Level"], "26"],
																["=", ["randomFrom:to:", 0, 2], "0"]],
															[["setVar:to:", "Tile Is Solid", "0"]]],
														["doIf",
															["&",
																[">", ["getLine:ofList:", ["readVariable", "i"], "_Level"], "162"],
																["<", ["getLine:ofList:", ["readVariable", "i"], "_Level"], "176"]],
															[["setVar:to:", "Tile Is Solid", "0"]]]]],
												["doIfElse",
													["=", ["readVariable", "Tile Is Solid"], "2.5"],
													[["doIfElse",
															["<", ["getLine:ofList:", ["readVariable", "i"], "_Level"], "176"],
															[["changeVar:by:", "y", ["randomFrom:to:", 0, 0.5]],
																["call", "Get Solid Details %n", ["getLine:ofList:", ["+", ["readVariable", "i"], ["readVariable", "MAP_WIDTH"]], "_Level"]],
																["doUntil",
																	["|",
																		["=", ["randomFrom:to:", 1, 3], "1"],
																		["not", ["=", ["readVariable", "Tile Is Solid"], "2.5"]]],
																	[["changeVar:by:", "i", ["readVariable", "MAP_WIDTH"]],
																		["changeVar:by:", "y", 1],
																		["call", "Get Solid Details %n", ["getLine:ofList:", ["+", ["readVariable", "i"], ["readVariable", "MAP_WIDTH"]], "_Level"]]]],
																["doIfElse",
																	[">", ["readVariable", "y"], ["*", ["readVariable", "MAP_HEIGHT"], 0.55]],
																	[["doIfElse",
																			[">",
																				["randomFrom:to:", 0.2, 0.6],
																				["computeFunction:of:", "abs", ["-", ["\/", ["readVariable", "x"], ["readVariable", "MAP_WIDTH"]], 0.5]]],
																			[["call", "Place Mob %n %n", 176, 0]],
																			[["doIfElse",
																					["&",
																						["=", ["randomFrom:to:", 1, 3], "1"],
																						[">",
																							["computeFunction:of:", "abs", ["-", ["\/", ["readVariable", "x"], ["readVariable", "MAP_WIDTH"]], 0.5]],
																							"0.44"]],
																					[["call", "Place Mob %n %n", 207, 0]],
																					[["call", "Place Mob %n %n", 177, 0]]]]]],
																	[["doIfElse",
																			[">", ["randomFrom:to:", 1, 10], "7"],
																			[["call", "Place Mob %n %n", 176, 0]],
																			[["doIfElse",
																					[">", ["randomFrom:to:", 1, 10], "3"],
																					[["call", "Place Mob %n %n", 177, 0]],
																					[["call", "Place Mob %n %n", 206, 0]]]]]]]],
															null]],
													[["setVar:to:", "i", ["getLine:ofList:", ["-", ["readVariable", "i"], ["readVariable", "MAP_WIDTH"]], "_Level"]],
														["doIfElse",
															["=", ["readVariable", "i"], "26"],
															[["call", "Place Mob %n %n", 156, 0]],
															[["doIfElse",
																	["=", ["getParam", "surface", "r"], "1"],
																	[["doIf",
																			["=", ["readVariable", "i"], "1"],
																			[["doIfElse",
																					["&",
																						["=", ["getParam", "typ", "r"], "1"],
																						["=", ["readVariable", "Tile Is Solid"], "3.25"]],
																					[["call", "Place Mob %n %n", 2, 0]],
																					[["call", "Place Mob %n %n", ["getParam", "typ", "r"], 0]]]]]],
																	[["call", "Place Mob %n %n", ["getParam", "typ", "r"], 0]]]]]]]]]],
									[["setVar:to:", "i", ["getLine:ofList:", ["-", ["readVariable", "x"], ["readVariable", "MAP_WIDTH"]], "_Level"]],
										["doIf",
											["|",
												["not", ["=", ["getParam", "surface", "r"], "1"]],
												["=", ["readVariable", "i"], "1"]],
											[["setVar:to:", "i", ["getLine:ofList:", ["readVariable", "x"], "_Level"]],
												["doIf",
													["|",
														["=", ["readVariable", "i"], "0"],
														["|",
															["=", ["readVariable", "i"], "32"],
															["&", [">", ["readVariable", "i"], "85"], ["<", ["readVariable", "i"], "96"]]]],
													[["doIfElse",
															["|",
																["=", ["randomFrom:to:", 1, 3], "1"],
																["=", ["readVariable", "i"], "32"]],
															[["call", "Place Tile %n %n", ["readVariable", "x"], 32]],
															[["call", "Place Tile %n %n", ["readVariable", "x"], ["randomFrom:to:", 86, 95]]]]]]]]]]],
							null]]],
				[509,
					5494,
					[["call", "Check Tile at x: %n y: %n", ["readVariable", "x"], ["+", ["readVariable", "y"], 1]]]],
				[537,
					5548,
					[["doIf",
							["|", ["=", "", ["readVariable", "tok"]], [">", ["readVariable", "Tile Is Solid"], "7.75"]],
							[["changeVar:by:", "around", 1]]]]],
				[571, 5452, [["readVariable", "Tile Type"]]],
				[529, 5634, [["=", ["readVariable", "Tile Type"], ["readVariable", "tok"]]]],
				[26,
					443,
					[["whenIReceive", "animate"],
						["setVar:to:",
							"x",
							["computeFunction:of:",
								"floor",
								["+", ["\/", ["mouseX"], ["readVariable", "TILE_SIZE"]], ["readVariable", "SCROLL_X"]]]],
						["setVar:to:",
							"y",
							["computeFunction:of:",
								"floor",
								["+", ["\/", ["mouseY"], ["readVariable", "TILE_SIZE"]], ["readVariable", "SCROLL_Y"]]]],
						["doIfElse",
							["|",
								["<", ["readVariable", "x"], "0"],
								["not", ["<", ["readVariable", "x"], ["readVariable", "MAP_WIDTH"]]]],
							[["setVar:to:", "distance", "99"]],
							[["doIfElse",
									["|",
										["<", ["readVariable", "y"], "0"],
										["not", ["<", ["readVariable", "y"], ["readVariable", "MAP_HEIGHT"]]]],
									[["setVar:to:", "distance", "99"]],
									[["call",
											"distance %n %n",
											["-", ["+", ["readVariable", "x"], 0.5], ["getAttribute:of:", "x", "Player"]],
											["-",
												["+", ["readVariable", "y"], 0.5],
												["+", ["getAttribute:of:", "y", "Player"], 0.8]]]]]]],
						["setVar:to:",
							"i",
							["getLine:ofList:", ["-", ["*", ["readVariable", "ToolMode"], 2], 1], "_inv"]],
						["doIfElse",
							[">", ["readVariable", "i"], "0"],
							[["setVar:to:",
									"Tool Type",
									["getLine:ofList:", ["+", 4, ["*", ["readVariable", "i"], ["readVariable", "TMul"]]], "_TileData"]]],
							[["setVar:to:", "Tool Type", "0"]]],
						["doIfElse",
							["&",
								["=", ["getAttribute:of:", "MOUSE_PRESSED", "Player"], "true"],
								["=", ["getAttribute:of:", "Mode", "Player"], "0"]],
							[["doIfElse",
									["&", [">", ["readVariable", "Tool Type"], "0"], ["<", ["readVariable", "Tool Type"], "4"]],
									[["doIf",
											["=", ["readVariable", "MouseRelease"], "0"],
											[["setVar:to:", "MouseRelease", "1"],
												["doIfElse",
													["=", ["readVariable", "Tool Type"], "1"],
													[["call", "Drink Potion %n", ["readVariable", "ToolMode"]]],
													[["doIfElse",
															["=", ["readVariable", "Tool Type"], "2"],
															[["call", "Summon %n", ["readVariable", "ToolMode"]]],
															[["doIfElse",
																	["=",
																		["readVariable", "Mask"],
																		["getLine:ofList:", ["+", 6, ["*", ["readVariable", "i"], ["readVariable", "TMul"]]], "_TileData"]],
																	[["setVar:to:", "Mask", 0]],
																	[["setVar:to:",
																			"Mask",
																			["getLine:ofList:", ["+", 6, ["*", ["readVariable", "i"], ["readVariable", "TMul"]]], "_TileData"]]]]]]]]]]],
									null]],
							[["setVar:to:", "MouseRelease", "0"]]],
						["doIfElse",
							["&",
								["<", ["readVariable", "distance"], ["readVariable", "reach"]],
								["=", ["getAttribute:of:", "Mode", "Player"], "0"]],
							[["call", "Check Cursor Zone"]],
							[["doIfElse",
									["|",
										["=", ["getAttribute:of:", "Mode", "Player"], "0"],
										["&",
											["=", ["readVariable", "Tile Say"], ["+", ["readVariable", "Tile Say"], 0]],
											["not", ["=", ["readVariable", "Next Tile Say"], ""]]]],
									[["doIf",
											["not", ["=", ["readVariable", "Tile Say"], "0"]],
											[["setVar:to:", "Tile Say", 0], ["say:", ""], ["lookLike:", "cursor"]]],
										["doIf",
											["=", ["readVariable", "Cursor Visible"], "1"],
											[["hide"], ["setVar:to:", "Cursor Visible", 0]]]],
									[["call", "Update Tooltip"]]],
								["setVar:to:", "digIdx", 0]]],
						["doIf",
							["&",
								[">", ["readVariable", "BuffID"], "0"],
								[">", ["timer"], ["readVariable", "BuffTime"]]],
							[["setVar:to:", "BuffID", 0]]]]]],
			"scriptComments": [[2294.3, 2891.4, 100, 48, false, 2144, "Paired ID"],
				[2410.3, 3444.4, 122, 48, false, 2215, "Placed is solid"],
				[220, 10683, 100, 42, false, 3480, "A tree"],
				[370, 3872.5, 108, 167, false, 2913, "Placeable?"],
				[337, 10759, 100, 77, false, 3486, "Acorn"],
				[267, 4261, 216, 42, false, 2949, "Tree Type - on grass"],
				[4777.4, 4318.8, 100, 50, false, 1904, "A sapling"],
				[327, 5025, 100, 160, false, 3013, "Door"],
				[312, 6273, 150, 200, false, 3116, "Platform"],
				[241, 3945, 150, 200, false, 2920, "Indirect Placement"],
				[2988, 4785.4, 150, 200, false, 346, "Can we afford?"],
				[1369.5, 4355.2, 183, 48, false, 1336, "Shift allow many to be crafted"],
				[551, 5705, 150, 200, false, 3061, "2 wide furnature"],
				[2156.3, 1745.4, 150, 200, false, 2020, "Door"],
				[267, 5452, 150, 200, false, 3039, "Wall \/ Floor"],
				[2069.3, 2353.4, 150, 200, false, 2090, "Wall bound"],
				[2011.3, 1898.4, 150, 200, false, 2037, "Grandfather Clock"],
				[2151.3, 1821.9, 150, 200, false, 2029, "Chair"],
				[2026.3, 2002.4, 150, 200, false, 2046, "Seed"],
				[374, 10845.5, 100, 51, false, 3494, "Door or clock"],
				[432.4, 12239.55, 206, 56, false, 3616, "Auto Dig what's above?"],
				[276, 2153, 150, 200, false, 2723, "Chest"],
				[1391.5, 4835.2, 150, 200, false, 1375, "Use 88 for change!"],
				[598, 2841, 150, 200, false, 2810, "Chest or Sign"],
				[369, 10189, 208, 90, false, 3427, "Can't Dig a chest with contents!"],
				[282, 4429, 100, 57, false, 2961, "Veg"],
				[386, 11011.5, 150, 200, false, 3514, "2 wide furnature"],
				[321, 4852, 150, 200, false, 2998, "Sit on Table"],
				[2707, 3421.9, 262, 54, false, 241, "Enumerate up all items in inventory"],
				[2707, 3624.9, 269, 66, false, 259, "Enumerate all crafting stations nearby"],
				[447, 1920, 150, 200, false, 2706, "Material"],
				[366, 5947, 150, 200, false, 3096, "And 2 tall?"],
				[283, 11300, 150, 200, false, 3547, "2x2"],
				[529, 11334, 150, 200, false, 3550, "Get top left type id"],
				[553, 4679, 150, 200, false, 2980, "Sit of floor"],
				[4127.2, 1082.3, 127, 130, true, 3728, "0 in air\r1 on grass\r2 on solid\r3 on sand"],
				[2140.2, 512.2, 205, 148, false, 649, "Only ever one claim sign"],
				[253, 10607, 150, 200, false, 3474, "Claim Sign"],
				[1267.6, 1836, 220, 149, false, 606, "Replaces an exisiting one"],
				[3780.25, 1141.8, 150, 200, false, 3732, "Bunny"],
				[3795.25, 1216.8, 150, 200, false, 3737, "Frog"],
				[3765.25, 1726.8, 150, 200, false, 3783, "Zombie"],
				[3780.25, 1983.8, 150, 200, false, 3798, "Demon Eye"],
				[3743.55, 2631.15, 150, 200, false, 3847, "Slime"],
				[3646.8, 6203, 150, 200, false, 4131, "Sand"],
				[3670.8, 6303, 150, 200, false, 4138, "Grass"],
				[3885.8, 6335.5, 150, 200, false, 4141, "Rabbit on Fence"],
				[5469.8, 5016, 292, 65, false, 1631, "-1 means SOLID other values mean liquid level"],
				[246, 4067, 232, 55, false, 2935, "Liquid can go anywhere non solid"],
				[242, 2267, 253, 68, false, 2730, "Full blocks can be placed in water"],
				[3669.8, 5226, 150, 200, false, 4052, "In water and on sand"],
				[4290, 4487, 456, 139, true, -1, "Loop left to find leftmost water, then right...\rStop when not solid or water underneath (but include in average)\rremove all touched cells from queue (that have solid below)"],
				[4741, 6004, 207, 49, false, 818, "Combined, they fit into one block"],
				[4707, 5662, 100, 55, false, 786, "Obsidian"],
				[5454.8, 4803, 136, 55, false, 1616, "Obsidion Time"],
				[3695.8, 5361, 150, 200, false, 4062, "IN Water or Lava"],
				[4543, 5800, 150, 200, false, 800, "Extinguish torch"],
				[4543, 6595, 150, 200, false, 894, "Extinguish light"],
				[3688.8, 5782, 150, 200, false, 4115, "Shark"],
				[3688.8, 6034, 150, 200, false, 4125, "Pyranha"],
				[3758.55, 2706.15, 150, 200, false, 3852, "Purple Slime"],
				[3758.55, 2751.15, 150, 200, false, 3854, "Bunny Slime"],
				[3713.55, 2476.15, 150, 200, false, 3834, "Lava Slime"],
				[3728.55, 2556.15, 150, 200, false, 3842, "Dungeon Slime"],
				[291, 5527, 150, 200, false, 3046, "Chain"],
				[475, 6991.5, 150, 200, false, 3182, "Try to link chain downwards"],
				[302, 2375, 150, 200, false, 2745, "-3.5 = water mob"],
				[3810.25, 2138.8, 150, 200, false, 3811, "Bat"],
				[2021, 8089, 150, 200, false, 2439, "Liquid"],
				[3795.25, 2199.8, 150, 200, false, 3813, "Lava Bat"],
				[3765.25, 1338.8, 150, 200, false, 3741, "Butterfly"],
				[3795.25, 1261.8, 150, 200, false, 3739, "Squirrel"],
				[3780.25, 1892.8, 150, 200, false, 3793, "Mouse"],
				[3780.25, 1847.8, 150, 200, false, 3791, "Firefly"],
				[3810.25, 2093.8, 170, 56, false, 3809, "Firefly - no bat on surface"],
				[2870, 3027.4, 150, 200, false, 224, "No diamond please!"],
				[2870, 3071.4, 150, 200, false, 226, "No Coins..."],
				[2870, 3049.4, 150, 200, false, 225, "No Hellstone bars"],
				[2878, 3196.4, 150, 200, false, 231, "No hellforge"],
				[2166.3, 2078.9, 141, 140, false, 2052, "2 wide furnature"],
				[5568.8, 4948, 150, 200, false, 1626, "On Wall\/floor"],
				[221, 2776, 217, 63, false, 2809, "Can't mine below a door or tree"],
				[253, 10489, 150, 200, false, 3458, "Pot"],
				[2878, 3218.4, 150, 200, false, 232, "No Demon Alters"],
				[3669.8, 5303, 150, 200, false, 4061, "Shallow"]],
			"sounds": [{
					"soundName": "pop",
					"soundID": 0,
					"md5": "83a9787d4cb6f3b7632b4ddfebf74367.wav",
					"sampleCount": 258,
					"rate": 11025,
					"format": ""
				}],
			"costumes": [{
					"costumeName": "cursor",
					"baseLayerID": 519,
					"baseLayerMD5": "637470e44bd97aa0cc84f8960c8aa0d6.png",
					"bitmapResolution": 2,
					"rotationCenterX": 2,
					"rotationCenterY": 34
				},
				{
					"costumeName": "cursor2",
					"baseLayerID": 520,
					"baseLayerMD5": "f979db203bb42e9c0eddfd2e81c3fde7.png",
					"bitmapResolution": 2,
					"rotationCenterX": 2,
					"rotationCenterY": 34
				},
				{
					"costumeName": "dot",
					"baseLayerID": 427,
					"baseLayerMD5": "d36f6603ec293d2c2198d3ea05109fe0.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 0
				}],
			"currentCostumeIndex": 1,
			"scratchX": 142.77451009293486,
			"scratchY": 19.999999999998295,
			"scale": 2.38,
			"direction": 90,
			"rotationStyle": "none",
			"isDraggable": false,
			"indexInLibrary": 8,
			"visible": false,
			"spriteInfo": {
			}
		},
		{
			"objName": "Tool Swing",
			"variables": [{
					"name": "Tool",
					"value": 29,
					"isPersistent": false
				},
				{
					"name": "Tool ID",
					"value": 0,
					"isPersistent": false
				},
				{
					"name": "Tool Type",
					"value": 0,
					"isPersistent": false
				},
				{
					"name": "Tool Power",
					"value": "3",
					"isPersistent": false
				},
				{
					"name": "id",
					"value": 0,
					"isPersistent": false
				}],
			"lists": [{
					"listName": "ang",
					"contents": ["-30", "40", "105", "140"],
					"isPersistent": false,
					"x": 31,
					"y": 122,
					"width": 451,
					"height": 240,
					"visible": false
				}],
			"scripts": [[32,
					33,
					[["whenGreenFlag"],
						["setSizeTo:", 260],
						["heading:", 90],
						["gotoX:y:", 0, 0],
						["setVar:to:", "Tool Type", 0],
						["setVar:to:", "id", 0],
						["hide"]]],
				[1505, 1533, [["not", false]]],
				[360, 44, [["whenIReceive", "Hide All"], ["hide"]]],
				[927,
					38,
					[["whenIReceive", "Back_clouds"],
						["doIf", ["=", ["readVariable", "TICK"], "0"], [["comeToFront"]]]]],
				[925,
					193.8,
					[["procDef", "Get Costume %n", ["tile id"], [1], true],
						["setVar:to:",
							"Tool Type",
							["getLine:ofList:",
								["+", 4, ["*", ["getParam", "tile id", "r"], ["readVariable", "TMul"]]],
								"_TileData"]],
						["doIfElse",
							["&", [">", ["readVariable", "Tool Type"], "999"], ["<", ["readVariable", "Tool Type"], "1100"]],
							[["setVar:to:",
									"Tool",
									["getLine:ofList:",
										["+", 6, ["*", ["getParam", "tile id", "r"], ["readVariable", "TMul"]]],
										"_TileData"]],
								["setVar:to:",
									"Tool Power",
									["getLine:ofList:",
										["+", 5, ["*", ["getParam", "tile id", "r"], ["readVariable", "TMul"]]],
										"_TileData"]]],
							[["setVar:to:", "Tool", "0"], ["setVar:to:", "Tool Type", "0"]]]]],
				[923,
					532,
					[["whenIReceive", "Clone Sprites"],
						["doIf", [">", ["readVariable", "id"], "0"], [["deleteClone"]]],
						["doRepeat", ["getAttribute:of:", "@Max Players", "Multiplayer"], [["changeVar:by:", "id", 1], ["createCloneOf", "_myself_"]]],
						["setVar:to:", "id", 0]]],
				[30,
					244.2,
					[["whenIReceive", "pre animate"],
						["doIf",
							["=", ["readVariable", "id"], "0"],
							[["doIfElse",
									["&",
										["&",
											["=", ["getAttribute:of:", "MOUSE_PRESSED", "Player"], "true"],
											["=", ["getAttribute:of:", "Mode", "Player"], "0"]],
										[">", ["getAttribute:of:", "Player Health", "Player"], "0"]],
									[["call",
											"Get Costume %n",
											["getLine:ofList:", ["-", ["*", ["getAttribute:of:", "ToolMode", "Cursor"], 2], 1], "_inv"]],
										["doIfElse",
											[">", ["readVariable", "Tool"], "0"],
											[["setVar:to:", "id", 0],
												["setLine:ofList:to:", ["+", ["getAttribute:of:", "@Player ID", "Multiplayer"], 60], "@PlayerNames", ["readVariable", "Tool"]],
												["doIfElse",
													["=", ["getAttribute:of:", "dir", "Player"], "-90"],
													[["call",
															"Set Hitbox, ang %n",
															["-",
																35,
																["getLine:ofList:",
																	["+", ["%", ["computeFunction:of:", "floor", ["getAttribute:of:", "walkFrame", "Player"]], 4], 1],
																	"ang"]]]],
													[["call",
															"Set Hitbox, ang %n",
															["+",
																-35,
																["getLine:ofList:",
																	["+", ["%", ["computeFunction:of:", "floor", ["getAttribute:of:", "walkFrame", "Player"]], 4], 1],
																	"ang"]]],
														["changeVar:by:", "Tool", -1]]]],
											[["setVar:to:", "Tool Type", 0]]]],
									[["setVar:to:", "Tool Type", 0],
										["setLine:ofList:to:", ["+", ["getAttribute:of:", "@Player ID", "Multiplayer"], 60], "@PlayerNames", "0"]]]]]]],
				[32,
					826,
					[["whenIReceive", "animate"],
						["doIfElse",
							["=", ["readVariable", "id"], "0"],
							[["doIfElse",
									[">", ["readVariable", "Tool Type"], "0"],
									[["xpos:",
											["computeFunction:of:",
												"floor",
												["*", ["-", ["getAttribute:of:", "x", "Player"], ["readVariable", "SCROLL_X"]], ["readVariable", "TILE_SIZE"]]]],
										["ypos:",
											["+",
												["computeFunction:of:",
													"floor",
													["*", ["-", ["getAttribute:of:", "y", "Player"], ["readVariable", "SCROLL_Y"]], ["readVariable", "TILE_SIZE"]]],
												35]],
										["doIfElse",
											["=", ["getAttribute:of:", "dir", "Player"], "-90"],
											[["heading:",
													["-",
														180,
														["getLine:ofList:",
															["+", ["%", ["computeFunction:of:", "floor", ["getAttribute:of:", "walkFrame", "Player"]], 4], 1],
															"ang"]]]],
											[["heading:",
													["getLine:ofList:",
														["+", ["%", ["computeFunction:of:", "floor", ["getAttribute:of:", "walkFrame", "Player"]], 4], 1],
														"ang"]]]],
										["doIf",
											["not", ["=", ["costumeIndex"], ["readVariable", "Tool"]]],
											[["lookLike:", ["readVariable", "Tool"]]]],
										["show"]],
									[["hide"]]]],
							[["doIfElse",
									["=", ["readVariable", "id"], ["getAttribute:of:", "@Player ID", "Multiplayer"]],
									[["hide"]],
									[["setVar:to:", "Tool", ["getLine:ofList:", ["+", ["readVariable", "id"], 60], "@PlayerNames"]],
										["doIfElse",
											[">", ["readVariable", "Tool"], "0"],
											[["call",
													"Position %n %n",
													["computeFunction:of:",
														"floor",
														["*",
															["-", ["getLine:ofList:", ["+", ["readVariable", "id"], 10], "@PlayerNames"], ["readVariable", "SCROLL_X"]],
															["readVariable", "TILE_SIZE"]]],
													["+",
														["computeFunction:of:",
															"floor",
															["*",
																["-", ["getLine:ofList:", ["+", ["readVariable", "id"], 20], "@PlayerNames"], ["readVariable", "SCROLL_Y"]],
																["readVariable", "TILE_SIZE"]]],
														35]]],
											[["hide"]]]]]]]]],
				[34,
					2016.3,
					[["procDef", "Position %n %n", ["x", "y"], [1, 1], true],
						["setVar:to:", "Tool Type", ["getLine:ofList:", ["+", ["readVariable", "id"], 30], "@PlayerNames"]],
						["doIfElse",
							[">", ["readVariable", "Tool Type"], "-1"],
							[["gotoX:y:", ["getParam", "x", "r"], ["getParam", "y", "r"]],
								["doIfElse",
									["&",
										["=", ["getParam", "x", "r"], ["xpos"]],
										["=", ["getParam", "y", "r"], ["ypos"]]],
									[["doIfElse",
											["&", [">", ["readVariable", "Tool Type"], "0"], ["<", ["readVariable", "Tool Type"], "5"]],
											[["setVar:to:", "Tool Power", ["-", ["readVariable", "Tool Type"], 1]]],
											[["changeVar:by:", "Tool Power", ["\/", ["getAttribute:of:", "_Tick", "Multiplayer"], 3]]]],
										["doIfElse",
											["<", ["getLine:ofList:", ["+", ["readVariable", "id"], 70], "@PlayerNames"], "0"],
											[["heading:",
													["-",
														180,
														["getLine:ofList:",
															["+", ["%", ["computeFunction:of:", "floor", ["readVariable", "Tool Power"]], 4], 1],
															"ang"]]]],
											[["changeVar:by:", "Tool", -1],
												["heading:",
													["getLine:ofList:",
														["+", ["%", ["computeFunction:of:", "floor", ["readVariable", "Tool Power"]], 4], 1],
														"ang"]]]],
										["doIf",
											["not", ["=", ["costumeIndex"], ["readVariable", "Tool"]]],
											[["lookLike:", ["readVariable", "Tool"]]]],
										["show"]],
									[["hide"]]]],
							[["hide"]]]]],
				[610,
					1635,
					[["doIfElse",
							["&",
								["=", ["getAttribute:of:", "MOUSE_PRESSED", "Player"], "true"],
								["=", ["getAttribute:of:", "Mode", "Player"], "0"]],
							[["call",
									"Get Costume %n",
									["getLine:ofList:", ["-", ["*", ["getAttribute:of:", "ToolMode", "Cursor"], 2], 1], "_inv"]],
								["doIfElse",
									[">", ["readVariable", "Tool"], "0"],
									[["setLine:ofList:to:", ["+", ["getAttribute:of:", "@Player ID", "Multiplayer"], 60], "@PlayerNames", ["readVariable", "Tool"]],
										["xpos:",
											["computeFunction:of:",
												"floor",
												["*", ["-", ["getAttribute:of:", "x", "Player"], ["readVariable", "SCROLL_X"]], ["readVariable", "TILE_SIZE"]]]],
										["ypos:",
											["+",
												["computeFunction:of:",
													"floor",
													["*", ["-", ["getAttribute:of:", "y", "Player"], ["readVariable", "SCROLL_Y"]], ["readVariable", "TILE_SIZE"]]],
												35]],
										["doIfElse",
											["=", ["getAttribute:of:", "dir", "Player"], "-90"],
											[["heading:",
													["-",
														180,
														["getLine:ofList:",
															["+", ["%", ["computeFunction:of:", "floor", ["getAttribute:of:", "walkFrame", "Player"]], 4], 1],
															"ang"]]],
												["call",
													"Set Hitbox, ang %n",
													["-",
														35,
														["getLine:ofList:",
															["+", ["%", ["computeFunction:of:", "floor", ["getAttribute:of:", "walkFrame", "Player"]], 4], 1],
															"ang"]]]],
											[["changeVar:by:", "Tool", -1],
												["heading:",
													["getLine:ofList:",
														["+", ["%", ["computeFunction:of:", "floor", ["getAttribute:of:", "walkFrame", "Player"]], 4], 1],
														"ang"]],
												["call",
													"Set Hitbox, ang %n",
													["+",
														-35,
														["getLine:ofList:",
															["+", ["%", ["computeFunction:of:", "floor", ["getAttribute:of:", "walkFrame", "Player"]], 4], 1],
															"ang"]]]]],
										["doIf",
											["not", ["=", ["costumeIndex"], ["readVariable", "Tool"]]],
											[["lookLike:", ["readVariable", "Tool"]]]],
										["show"]],
									[["hide"],
										["setVar:to:", "Tool Type", 0],
										["setLine:ofList:to:", ["+", ["getAttribute:of:", "@Player ID", "Multiplayer"], 60], "@PlayerNames", "0"]]]],
							[["hide"],
								["setVar:to:", "Tool Type", 0],
								["setLine:ofList:to:", ["+", ["getAttribute:of:", "@Player ID", "Multiplayer"], 60], "@PlayerNames", "0"]]]]],
				[1539.65,
					46.7,
					[["procDef", "Set Hitbox %n %n %n", ["ang", "dist", "radius"], [1, 1, 1], true],
						["setLine:ofList:to:",
							25,
							"_Chat",
							["+",
								["computeFunction:of:",
									"floor",
									["*", ["-", ["getAttribute:of:", "x", "Player"], ["readVariable", "SCROLL_X"]], ["readVariable", "TILE_SIZE"]]],
								["*", ["getParam", "dist", "r"], ["computeFunction:of:", "sin", ["getParam", "ang", "r"]]]]],
						["setLine:ofList:to:",
							26,
							"_Chat",
							["+",
								["+",
									["computeFunction:of:",
										"floor",
										["*", ["-", ["getAttribute:of:", "y", "Player"], ["readVariable", "SCROLL_Y"]], ["readVariable", "TILE_SIZE"]]],
									["-", 35, ["getParam", "radius", "r"]]],
								["*", ["getParam", "dist", "r"], ["computeFunction:of:", "cos", ["getParam", "ang", "r"]]]]],
						["setLine:ofList:to:", 28, "_Chat", ["getParam", "radius", "r"]]]],
				[1542.35,
					327.05,
					[["procDef", "Set Hitbox, ang %n", ["ang"], [1], true],
						["doIfElse",
							["=", ["readVariable", "Tool"], "26"],
							[["call", "Set Hitbox %n %n %n", ["getParam", "ang", "r"], 50, 24]],
							[["doIfElse",
									["=", ["readVariable", "Tool"], "38"],
									[["call", "Set Hitbox %n %n %n", ["getParam", "ang", "r"], 55, 35]],
									[["call", "Set Hitbox %n %n %n", ["getParam", "ang", "r"], 44, 16]]]]]]]],
			"scriptComments": [[1713.35, 388.05, 150, 200, false, 363, "Phaseblade"]],
			"sounds": [{
					"soundName": "pop",
					"soundID": 0,
					"md5": "83a9787d4cb6f3b7632b4ddfebf74367.wav",
					"sampleCount": 258,
					"rate": 11025,
					"format": ""
				}],
			"costumes": [{
					"costumeName": "Iron_Pickaxe",
					"baseLayerID": 27,
					"baseLayerMD5": "5ccbea0f874664d49b44b67cb0897cd5.png",
					"bitmapResolution": 2,
					"rotationCenterX": -10,
					"rotationCenterY": 29
				},
				{
					"costumeName": "Iron_Pickaxe2",
					"baseLayerID": 521,
					"baseLayerMD5": "938aacb0b3a081c0b740f91c047a14f2.png",
					"bitmapResolution": 2,
					"rotationCenterX": 42,
					"rotationCenterY": 29
				},
				{
					"costumeName": "Iron_Axe",
					"baseLayerID": 28,
					"baseLayerMD5": "8a3de2f9955f6a17be0d6fdcd482e63d.png",
					"bitmapResolution": 2,
					"rotationCenterX": -10,
					"rotationCenterY": 25
				},
				{
					"costumeName": "Iron_Axe2",
					"baseLayerID": 522,
					"baseLayerMD5": "7cda921ac53979926a00b968d8311166.png",
					"bitmapResolution": 2,
					"rotationCenterX": 42,
					"rotationCenterY": 25
				},
				{
					"costumeName": "Bug_Net",
					"baseLayerID": 129,
					"baseLayerMD5": "7197d876228a7730ade75a211d854fa7.png",
					"bitmapResolution": 2,
					"rotationCenterX": -10,
					"rotationCenterY": 36
				},
				{
					"costumeName": "Bug_Net2",
					"baseLayerID": 523,
					"baseLayerMD5": "871a38f3adcdc20e22e324ef9aaa7eba.png",
					"bitmapResolution": 2,
					"rotationCenterX": 46,
					"rotationCenterY": 36
				},
				{
					"costumeName": "sword-wooden",
					"baseLayerID": 142,
					"baseLayerMD5": "6bd3f8eef60311e1e2b0c12385bb8c06.png",
					"bitmapResolution": 2,
					"rotationCenterX": -10,
					"rotationCenterY": 29
				},
				{
					"costumeName": "sword-wooden2",
					"baseLayerID": 524,
					"baseLayerMD5": "b0a97bfef35ea58b216f75008a5d5307.png",
					"bitmapResolution": 2,
					"rotationCenterX": 43,
					"rotationCenterY": 29
				},
				{
					"costumeName": "Broadsword-Iron",
					"baseLayerID": 143,
					"baseLayerMD5": "e571bffc4d611cd13ddccd713cf81ff7.png",
					"bitmapResolution": 2,
					"rotationCenterX": -10,
					"rotationCenterY": 29
				},
				{
					"costumeName": "Broadsword-Iron2",
					"baseLayerID": 525,
					"baseLayerMD5": "6972d8becde90c980b25f5a2a3acf368.png",
					"bitmapResolution": 2,
					"rotationCenterX": 42,
					"rotationCenterY": 29
				},
				{
					"costumeName": "Gold_Pickaxe",
					"baseLayerID": 148,
					"baseLayerMD5": "688bd2302eb0d26afaa5b5e92f7d9fe9.png",
					"bitmapResolution": 2,
					"rotationCenterX": -10,
					"rotationCenterY": 29
				},
				{
					"costumeName": "Gold_Pickaxe2",
					"baseLayerID": 526,
					"baseLayerMD5": "03d589832213843c0e323ace59a25fa3.png",
					"bitmapResolution": 2,
					"rotationCenterX": 42,
					"rotationCenterY": 29
				},
				{
					"costumeName": "Gold_Axe",
					"baseLayerID": 149,
					"baseLayerMD5": "5305563e3e3b27a1c617eebfd82e2557.png",
					"bitmapResolution": 2,
					"rotationCenterX": -10,
					"rotationCenterY": 25
				},
				{
					"costumeName": "Gold_Axe2",
					"baseLayerID": 527,
					"baseLayerMD5": "d713cb54d7f49303445c81d9928dcc87.png",
					"bitmapResolution": 2,
					"rotationCenterX": 42,
					"rotationCenterY": 25
				},
				{
					"costumeName": "sword-golden",
					"baseLayerID": 150,
					"baseLayerMD5": "83964bca92b4c73510b681516f621b1a.png",
					"bitmapResolution": 2,
					"rotationCenterX": -10,
					"rotationCenterY": 29
				},
				{
					"costumeName": "sword-golden2",
					"baseLayerID": 528,
					"baseLayerMD5": "a052dab078062631771fd2eb73423975.png",
					"bitmapResolution": 2,
					"rotationCenterX": 42,
					"rotationCenterY": 29
				},
				{
					"costumeName": "Platinum_Pickaxe3",
					"baseLayerID": 151,
					"baseLayerMD5": "66978225153b252ee792e5265280d6a7.png",
					"bitmapResolution": 2,
					"rotationCenterX": -10,
					"rotationCenterY": 29
				},
				{
					"costumeName": "Platinum_Pickaxe4",
					"baseLayerID": 529,
					"baseLayerMD5": "c71e63579a3a5fdc7fcd5ecd707c357a.png",
					"bitmapResolution": 2,
					"rotationCenterX": 42,
					"rotationCenterY": 29
				},
				{
					"costumeName": "Platinum_Axe",
					"baseLayerID": 152,
					"baseLayerMD5": "d25ba44d84d6392d3158dc442ad31359.png",
					"bitmapResolution": 2,
					"rotationCenterX": -10,
					"rotationCenterY": 25
				},
				{
					"costumeName": "Platinum_Axe2",
					"baseLayerID": 530,
					"baseLayerMD5": "756d26175b50d7ddc882093cdc468635.png",
					"bitmapResolution": 2,
					"rotationCenterX": 42,
					"rotationCenterY": 25
				},
				{
					"costumeName": "sword-platinum3",
					"baseLayerID": 153,
					"baseLayerMD5": "5227f90d439a0ba87eeea81689b0a69c.png",
					"bitmapResolution": 2,
					"rotationCenterX": -10,
					"rotationCenterY": 29
				},
				{
					"costumeName": "sword-platinum4",
					"baseLayerID": 531,
					"baseLayerMD5": "d4573b8cf5565becbfee41f1d8fb35bf.png",
					"bitmapResolution": 2,
					"rotationCenterX": 42,
					"rotationCenterY": 29
				},
				{
					"costumeName": "Molten_Pickaxe",
					"baseLayerID": 162,
					"baseLayerMD5": "76f34da83a98178088d5ef6814c5a08f.png",
					"bitmapResolution": 2,
					"rotationCenterX": -10,
					"rotationCenterY": 29
				},
				{
					"costumeName": "Molten_Pickaxe2",
					"baseLayerID": 532,
					"baseLayerMD5": "2af87721b6c34ebd33c6463f867f3d1f.png",
					"bitmapResolution": 2,
					"rotationCenterX": 42,
					"rotationCenterY": 29
				},
				{
					"costumeName": "Blue_Phaseblade",
					"baseLayerID": 533,
					"baseLayerMD5": "9d81c61d6a03f36002ad37b6a8c63d8c.png",
					"bitmapResolution": 2,
					"rotationCenterX": -10,
					"rotationCenterY": 45
				},
				{
					"costumeName": "Blue_Phaseblade2",
					"baseLayerID": 534,
					"baseLayerMD5": "c19992cfa8a6441786abda14666f7917.png",
					"bitmapResolution": 2,
					"rotationCenterX": 58,
					"rotationCenterY": 45
				},
				{
					"costumeName": "Diamond_Staff",
					"baseLayerID": 535,
					"baseLayerMD5": "8173b8094d2307e7ec4306aab5c76b36.png",
					"bitmapResolution": 2,
					"rotationCenterX": -10,
					"rotationCenterY": 37
				},
				{
					"costumeName": "Diamond_Staff2",
					"baseLayerID": 536,
					"baseLayerMD5": "dd824e3749da94d0dba9cdd4c82f8ccc.png",
					"bitmapResolution": 2,
					"rotationCenterX": 52,
					"rotationCenterY": 37
				},
				{
					"costumeName": "copper_Pickaxe",
					"baseLayerID": 216,
					"baseLayerMD5": "7289839e835facd576f8a13ae027cfb3.png",
					"bitmapResolution": 2,
					"rotationCenterX": -10,
					"rotationCenterY": 29
				},
				{
					"costumeName": "copper_Pickaxe2",
					"baseLayerID": 537,
					"baseLayerMD5": "08d86cffc6873a82698c5ab21f24b20b.png",
					"bitmapResolution": 2,
					"rotationCenterX": 42,
					"rotationCenterY": 29
				},
				{
					"costumeName": "Copper_Broadsword",
					"baseLayerID": 217,
					"baseLayerMD5": "2494e6ec470ee384aa900cfd91659d76.png",
					"bitmapResolution": 2,
					"rotationCenterX": -10,
					"rotationCenterY": 29
				},
				{
					"costumeName": "Copper_Broadsword2",
					"baseLayerID": 538,
					"baseLayerMD5": "056152b4d1ece054e1f4092132d0c74b.png",
					"bitmapResolution": 2,
					"rotationCenterX": 42,
					"rotationCenterY": 29
				},
				{
					"costumeName": "Copper_Axe",
					"baseLayerID": 218,
					"baseLayerMD5": "c31734f8ee6abdbd893f26903cc43de5.png",
					"bitmapResolution": 2,
					"rotationCenterX": -10,
					"rotationCenterY": 25
				},
				{
					"costumeName": "Copper_Axe2",
					"baseLayerID": 539,
					"baseLayerMD5": "e0aaf26e917b24a8daf8ee430f81c39b.png",
					"bitmapResolution": 2,
					"rotationCenterX": 42,
					"rotationCenterY": 25
				},
				{
					"costumeName": "Empty_Bucket",
					"baseLayerID": 219,
					"baseLayerMD5": "c1c019725d155b620bd85b3aa9f40117.png",
					"bitmapResolution": 2,
					"rotationCenterX": -6,
					"rotationCenterY": 18
				},
				{
					"costumeName": "Empty_Bucket2",
					"baseLayerID": 540,
					"baseLayerMD5": "ff5e6987d0e4e4d942fe89bbcde40b7d.png",
					"bitmapResolution": 2,
					"rotationCenterX": 30,
					"rotationCenterY": 18
				},
				{
					"costumeName": "Fiery_Greatsword",
					"baseLayerID": 541,
					"baseLayerMD5": "7050f0ae46c7cd7e7b202aae58fa0617.png",
					"bitmapResolution": 2,
					"rotationCenterX": -10,
					"rotationCenterY": 51
				},
				{
					"costumeName": "Fiery_Greatsword2",
					"baseLayerID": 542,
					"baseLayerMD5": "d7bbb680ff09d7d192241fbc3cdcfb2d.png",
					"bitmapResolution": 2,
					"rotationCenterX": 64,
					"rotationCenterY": 51
				},
				{
					"costumeName": "Light's_Bane",
					"baseLayerID": 303,
					"baseLayerMD5": "ed698138aafe3b5a481b1561e8d4563b.png",
					"bitmapResolution": 2,
					"rotationCenterX": -10,
					"rotationCenterY": 33
				},
				{
					"costumeName": "Light's_Bane2",
					"baseLayerID": 543,
					"baseLayerMD5": "5561abd6354b4bbd902a95f75da767f3.png",
					"bitmapResolution": 2,
					"rotationCenterX": 46,
					"rotationCenterY": 33
				}],
			"currentCostumeIndex": 28,
			"scratchX": 0,
			"scratchY": 0,
			"scale": 2.6,
			"direction": 90,
			"rotationStyle": "normal",
			"isDraggable": false,
			"indexInLibrary": 11,
			"visible": false,
			"spriteInfo": {
			}
		},
		{
			"objName": "Breath",
			"variables": [{
					"name": "Breath",
					"value": "10",
					"isPersistent": false
				},
				{
					"name": "gasp",
					"value": 0,
					"isPersistent": false
				}],
			"scripts": [[410, 54, [["whenIReceive", "Hide All"], ["hide"]]],
				[677, 64, [["whenIReceive", "Back_clouds"], ["comeToFront"]]],
				[683.75,
					575.05,
					[["procDef", "Update Costume %n", ["costume"], [1], true],
						["doIfElse",
							[">", ["getParam", "costume", "r"], "0"],
							[["doIf",
									["not", ["=", ["getParam", "costume", "r"], ["costumeIndex"]]],
									[["lookLike:", ["getParam", "costume", "r"]], ["comeToFront"]]],
								["show"]],
							[["hide"]]]]],
				[36,
					454,
					[["whenIReceive", "animate"],
						["doIfElse",
							["&",
								[">", ["getAttribute:of:", "In Liquid", "Player"], "1"],
								["not", ["=", ["getAttribute:of:", "BuffID", "Cursor"], "201"]]],
							[["changeVar:by:", "Breath", ["*", -0.012, ["getAttribute:of:", "_Tick", "Multiplayer"]]],
								["doIfElse",
									[">", ["readVariable", "Breath"], "0"],
									[["call", "Update Costume %n", ["computeFunction:of:", "ceiling", ["readVariable", "Breath"]]],
										["doIf",
											["&",
												["<", ["readVariable", "Breath"], "4"],
												["<", ["%", ["readVariable", "Breath"], 0.15], "0.06"]],
											[["hide"]]]],
									[["hide"]]],
								["setVar:to:", "gasp", 0]],
							[["changeVar:by:", "gasp", 1],
								["doIf",
									[">", ["readVariable", "gasp"], "3"],
									[["setVar:to:", "Breath", "10"], ["hide"]]]]]]],
				[407,
					157,
					[["whenIReceive", "respawn"], ["setVar:to:", "Breath", "10"], ["setVar:to:", "gasp", 0]]],
				[35,
					52,
					[["whenIReceive", "Clone Sprites"],
						["setVar:to:", "Breath", "10"],
						["setVar:to:", "gasp", 0],
						["doIfElse",
							["=", ["getAttribute:of:", "Peaceful?", "Frame"], "0"],
							[["doIfElse",
									["=", ["getAttribute:of:", "@Offline", "Multiplayer"], "0"],
									[["gotoX:y:", 150, 99]],
									[["gotoX:y:", 148, 120]]],
								["hide"],
								["setSizeTo:", 100],
								["comeToFront"]],
							[["hide"]]]]]],
			"sounds": [{
					"soundName": "pop",
					"soundID": 0,
					"md5": "83a9787d4cb6f3b7632b4ddfebf74367.wav",
					"sampleCount": 258,
					"rate": 11025,
					"format": ""
				}],
			"costumes": [{
					"costumeName": "Health10",
					"baseLayerID": 544,
					"baseLayerMD5": "52107d8236f33b2a36476e9962369291.png",
					"bitmapResolution": 2,
					"rotationCenterX": 118,
					"rotationCenterY": 10
				},
				{
					"costumeName": "Health9",
					"baseLayerID": 545,
					"baseLayerMD5": "5448339e1770c584b4af26adce263ff4.png",
					"bitmapResolution": 2,
					"rotationCenterX": 118,
					"rotationCenterY": 10
				},
				{
					"costumeName": "Health8",
					"baseLayerID": 546,
					"baseLayerMD5": "50ffeee673ca90950b01836f7e2c1654.png",
					"bitmapResolution": 2,
					"rotationCenterX": 118,
					"rotationCenterY": 10
				},
				{
					"costumeName": "Health7",
					"baseLayerID": 547,
					"baseLayerMD5": "074b9f08f6801b4159e0066ddf1aca38.png",
					"bitmapResolution": 2,
					"rotationCenterX": 118,
					"rotationCenterY": 10
				},
				{
					"costumeName": "Health6",
					"baseLayerID": 548,
					"baseLayerMD5": "d2577aa8176380a3fdeca4a02666de48.png",
					"bitmapResolution": 2,
					"rotationCenterX": 118,
					"rotationCenterY": 10
				},
				{
					"costumeName": "Health5",
					"baseLayerID": 549,
					"baseLayerMD5": "fd51e6fffa989ff714c6070ebc5b710e.png",
					"bitmapResolution": 2,
					"rotationCenterX": 118,
					"rotationCenterY": 10
				},
				{
					"costumeName": "Health4",
					"baseLayerID": 550,
					"baseLayerMD5": "491f83ae7e0fef1912e530f49399e372.png",
					"bitmapResolution": 2,
					"rotationCenterX": 118,
					"rotationCenterY": 10
				},
				{
					"costumeName": "Health3",
					"baseLayerID": 551,
					"baseLayerMD5": "8543e99a947b3de0dd3e5da7d7a10e26.png",
					"bitmapResolution": 2,
					"rotationCenterX": 118,
					"rotationCenterY": 10
				},
				{
					"costumeName": "Health2",
					"baseLayerID": 552,
					"baseLayerMD5": "d04f65818841d4553b6d09fc2d160323.png",
					"bitmapResolution": 2,
					"rotationCenterX": 118,
					"rotationCenterY": 10
				},
				{
					"costumeName": "Health1",
					"baseLayerID": 553,
					"baseLayerMD5": "f279e3de2dad4d6784c666b7e8b43a5a.png",
					"bitmapResolution": 2,
					"rotationCenterX": 118,
					"rotationCenterY": 10
				}],
			"currentCostumeIndex": 9,
			"scratchX": 150,
			"scratchY": 99,
			"scale": 1,
			"direction": 90,
			"rotationStyle": "normal",
			"isDraggable": false,
			"indexInLibrary": 22,
			"visible": false,
			"spriteInfo": {
			}
		},
		{
			"objName": "slot",
			"variables": [{
					"name": "invID",
					"value": 8,
					"isPersistent": false
				}],
			"scripts": [[280,
					33,
					[["whenIReceive", "animate"],
						["doIf",
							[">", ["readVariable", "inv_change"], "0"],
							[["doIfElse",
									[">", ["getAttribute:of:", "Mode", "Player"], "0"],
									[["call", "position %n", 999]],
									[["doIf",
											["&",
												[">", ["readVariable", "invID"], "8"],
												["=", ["getAttribute:of:", "Mode", "Player"], "0"]],
											[["deleteClone"]]],
										["call", "position %n", ["getAttribute:of:", "ToolMode", "Cursor"]]]]]]]],
				[875.35,
					33.8,
					[["procDef", "inv", [], [], true],
						["setSizeTo:", 75],
						["doIfElse",
							["=", ["getAttribute:of:", "Mode", "Player"], "1"],
							[["doRepeat",
									2,
									[["doRepeat", 8, [["changeVar:by:", "invID", 1], ["createCloneOf", "_myself_"]]]]]],
							[["doIfElse",
									["=", ["getAttribute:of:", "Mode", "Player"], "2"],
									[["doRepeat",
											4,
											[["doRepeat", 8, [["changeVar:by:", "invID", 1], ["createCloneOf", "_myself_"]]]]]],
									null]]],
						["setVar:to:", "invID", "8"]]],
				[286.8,
					374.2,
					[["procDef", "position %n", ["selID"], [1], true],
						["doIf",
							["&",
								["=", ["readVariable", "inv_change"], "2"],
								["&",
									["=", ["readVariable", "invID"], "8"],
									[">", ["getAttribute:of:", "Mode", "Player"], "0"]]],
							[["call", "inv"]]],
						["doIfElse",
							["<", ["readVariable", "invID"], ["getParam", "selID", "r"]],
							[["setSizeTo:", 75],
								["xpos:",
									["-",
										["*", ["%", ["-", ["readVariable", "invID"], 1], 8], 32],
										193]]],
							[["doIfElse",
									["=", ["readVariable", "invID"], ["getParam", "selID", "r"]],
									[["setSizeTo:", 100],
										["xpos:",
											["-",
												["*", ["%", ["-", ["readVariable", "invID"], 1], 8], 32],
												188]]],
									[["setSizeTo:", 75],
										["xpos:",
											["-",
												["*", ["%", ["-", ["readVariable", "invID"], 1], 8], 32],
												183]]]]]],
						["doIfElse",
							["&",
								["=", ["getAttribute:of:", "Mode", "Player"], "2"],
								[">", ["readVariable", "invID"], "24"]],
							[["ypos:",
									["-",
										114,
										["*",
											["computeFunction:of:", "floor", ["\/", ["-", ["readVariable", "invID"], 1], 8]],
											32]]]],
							[["ypos:",
									["-",
										133,
										["*",
											["computeFunction:of:", "floor", ["\/", ["-", ["readVariable", "invID"], 1], 8]],
											32]]]]],
						["call", "Set Amount %n", ["getLine:ofList:", ["*", ["readVariable", "invID"], 2], "_inv"]]]],
				[762.25,
					617.35,
					[["procDef", "Set Costume %n", ["cost"], [1], true],
						["doIf",
							["not", ["=", ["getParam", "cost", "r"], ["costumeIndex"]]],
							[["lookLike:", ["getParam", "cost", "r"]]]]]],
				[759.05,
					792.75,
					[["procDef", "Set Amount %n", ["num"], [1], true],
						["doIfElse",
							["<", ["getParam", "num", "r"], "2"],
							[["call", "Set Costume %n", 1]],
							[["doIfElse",
									["<", ["getParam", "num", "r"], "11"],
									[["call", "Set Costume %n", ["getParam", "num", "r"]]],
									[["doIfElse",
											["<", ["getParam", "num", "r"], "31"],
											[["call",
													"Set Costume %n",
													["+",
														["computeFunction:of:", "floor", ["\/", ["-", ["getParam", "num", "r"], 10], 5]],
														10]]],
											[["doIfElse",
													["<", ["getParam", "num", "r"], "201"],
													[["call",
															"Set Costume %n",
															["+",
																["computeFunction:of:", "floor", ["\/", ["-", ["getParam", "num", "r"], 30], 10]],
																14]]],
													[["doIfElse",
															["<", ["getParam", "num", "r"], "501"],
															[["call",
																	"Set Costume %n",
																	["+",
																		["computeFunction:of:", "floor", ["\/", ["-", ["getParam", "num", "r"], 200], 50]],
																		31]]],
															[["call", "Set Costume %n", 37]]]]]]]]]]]]],
				[29,
					31,
					[["whenIReceive", "Clone Sprites"], ["show"], ["lookLike:", "slot0"], ["call", "init"]]],
				[30.1,
					144.75,
					[["procDef", "init", [], [], true],
						["setSizeTo:", 100],
						["gotoX:y:", -193, 133],
						["setVar:to:", "invID", "1"],
						["createCloneOf", "_myself_"],
						["setSizeTo:", 75],
						["changeXposBy:", 37],
						["doRepeat", 6, [["changeVar:by:", "invID", 1], ["createCloneOf", "_myself_"], ["changeXposBy:", 32]]],
						["changeVar:by:", "invID", 1]]],
				[646, 35, [["whenIReceive", "Hide All"], ["hide"]]],
				[33,
					547,
					[["whenIReceive", "Back_clouds"],
						["doIf", ["=", ["readVariable", "TICK"], "3"], [["comeToFront"]]]]]],
			"scriptComments": [[1145.35, 278.8, 100, 61, false, 27, "Chest!"]],
			"sounds": [{
					"soundName": "pop",
					"soundID": 0,
					"md5": "83a9787d4cb6f3b7632b4ddfebf74367.wav",
					"sampleCount": 258,
					"rate": 11025,
					"format": ""
				}],
			"costumes": [{
					"costumeName": "slot1",
					"baseLayerID": 554,
					"baseLayerMD5": "298640693939703b58d60c3d60f0220f.png",
					"bitmapResolution": 2,
					"rotationCenterX": 38,
					"rotationCenterY": 38
				},
				{
					"costumeName": "slot2",
					"baseLayerID": 555,
					"baseLayerMD5": "a22874fbe9bd72d93fe0d25566b2ff58.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 19,
					"rotationCenterY": 19
				},
				{
					"costumeName": "slot3",
					"baseLayerID": 556,
					"baseLayerMD5": "08c2942711d5f4e3aa81a459845513d2.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 19,
					"rotationCenterY": 19
				},
				{
					"costumeName": "slot4",
					"baseLayerID": 557,
					"baseLayerMD5": "9c1b3acf8f5fa99b05d5b107355a4f5c.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 19,
					"rotationCenterY": 19
				},
				{
					"costumeName": "slot5",
					"baseLayerID": 558,
					"baseLayerMD5": "ba4a876765c7d82f2b36cf05bef6c997.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 19,
					"rotationCenterY": 19
				},
				{
					"costumeName": "slot6",
					"baseLayerID": 559,
					"baseLayerMD5": "1a4b92df2dd951939be58ae2ac37989b.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 19,
					"rotationCenterY": 19
				},
				{
					"costumeName": "slot7",
					"baseLayerID": 560,
					"baseLayerMD5": "b39fe262d7788948cc0fcfccf3744787.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 19,
					"rotationCenterY": 19
				},
				{
					"costumeName": "slot8",
					"baseLayerID": 561,
					"baseLayerMD5": "df9187b8aec116128e4263f3c91a1d88.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 19,
					"rotationCenterY": 19
				},
				{
					"costumeName": "slot9",
					"baseLayerID": 562,
					"baseLayerMD5": "4dbfe0f99c901f7f2bf9377fc7cef2b8.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 19,
					"rotationCenterY": 19
				},
				{
					"costumeName": "slot10",
					"baseLayerID": 563,
					"baseLayerMD5": "5ea48844d445a5c7287ba71b62e78e41.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 19,
					"rotationCenterY": 19
				},
				{
					"costumeName": "slot11",
					"baseLayerID": 564,
					"baseLayerMD5": "e839ac95c1c71eaf66e6b1579f2fdb9e.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 19,
					"rotationCenterY": 19
				},
				{
					"costumeName": "slot12",
					"baseLayerID": 565,
					"baseLayerMD5": "61a6012281a1e4ed2dc421bb87597cb4.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 19,
					"rotationCenterY": 19
				},
				{
					"costumeName": "slot13",
					"baseLayerID": 566,
					"baseLayerMD5": "d6601ca8bfc93d13499cbe84d65a764a.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 19,
					"rotationCenterY": 19
				},
				{
					"costumeName": "slot14",
					"baseLayerID": 567,
					"baseLayerMD5": "0100de4c6fea053224ea39264a755044.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 19,
					"rotationCenterY": 19
				},
				{
					"costumeName": "slot15",
					"baseLayerID": 568,
					"baseLayerMD5": "01e429f0244551fe3fe64e88632dccb0.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 19,
					"rotationCenterY": 19
				},
				{
					"costumeName": "slot16",
					"baseLayerID": 569,
					"baseLayerMD5": "f87242fbeb52fea806fbf6de58cb619c.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 19,
					"rotationCenterY": 19
				},
				{
					"costumeName": "slot17",
					"baseLayerID": 570,
					"baseLayerMD5": "510be267a05f7b55687121e2836cd1ea.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 19,
					"rotationCenterY": 19
				},
				{
					"costumeName": "slot18",
					"baseLayerID": 571,
					"baseLayerMD5": "eff01985872f318f79d0a4571d761915.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 19,
					"rotationCenterY": 19
				},
				{
					"costumeName": "slot19",
					"baseLayerID": 572,
					"baseLayerMD5": "3ce5d90f5483e331dda68d18a026e3c8.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 19,
					"rotationCenterY": 19
				},
				{
					"costumeName": "slot20",
					"baseLayerID": 573,
					"baseLayerMD5": "d041da5bddebd3c84a300fc39d564c7f.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 19,
					"rotationCenterY": 19
				},
				{
					"costumeName": "slot21",
					"baseLayerID": 574,
					"baseLayerMD5": "dff63889788bc769e488b5c7f00a0f26.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 19,
					"rotationCenterY": 19
				},
				{
					"costumeName": "slot22",
					"baseLayerID": 575,
					"baseLayerMD5": "7b9a2219b4bdaebd494f19f0cdc1e63d.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 19,
					"rotationCenterY": 19
				},
				{
					"costumeName": "slot23",
					"baseLayerID": 576,
					"baseLayerMD5": "f316dc13027c7e0c32d6520e686229f0.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 19,
					"rotationCenterY": 19
				},
				{
					"costumeName": "slot24",
					"baseLayerID": 577,
					"baseLayerMD5": "4b20b47c786753950285079b91f33e5d.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 19,
					"rotationCenterY": 19
				},
				{
					"costumeName": "slot25",
					"baseLayerID": 578,
					"baseLayerMD5": "6b5390930569ff697d5a118b2a1c9e8c.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 19,
					"rotationCenterY": 19
				},
				{
					"costumeName": "slot26",
					"baseLayerID": 579,
					"baseLayerMD5": "270591a57c2ed1fc8673773a10a146eb.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 19,
					"rotationCenterY": 19
				},
				{
					"costumeName": "slot27",
					"baseLayerID": 580,
					"baseLayerMD5": "90d2d4d100cc20c3940c31ce28e67438.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 19,
					"rotationCenterY": 19
				},
				{
					"costumeName": "slot28",
					"baseLayerID": 581,
					"baseLayerMD5": "c4eefc7888b7c7c98de675cde8f00a74.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 19,
					"rotationCenterY": 19
				},
				{
					"costumeName": "slot29",
					"baseLayerID": 582,
					"baseLayerMD5": "a49e28e576df113c62d8385e4bed1b8e.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 19,
					"rotationCenterY": 19
				},
				{
					"costumeName": "slot30",
					"baseLayerID": 583,
					"baseLayerMD5": "eb26360322e24a5846f89d01919d0fa3.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 19,
					"rotationCenterY": 19
				},
				{
					"costumeName": "slot31",
					"baseLayerID": 584,
					"baseLayerMD5": "7f8a6716223bcb55184cc433fea239dd.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 19,
					"rotationCenterY": 19
				},
				{
					"costumeName": "slot32",
					"baseLayerID": 585,
					"baseLayerMD5": "65919c136509156484438018b811d77b.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 19,
					"rotationCenterY": 19
				},
				{
					"costumeName": "slot33",
					"baseLayerID": 586,
					"baseLayerMD5": "b75e46b7c6a5d5fe024c8774bac9c5e0.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 19,
					"rotationCenterY": 19
				},
				{
					"costumeName": "slot34",
					"baseLayerID": 587,
					"baseLayerMD5": "199389d06481090108ac2a5314804534.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 19,
					"rotationCenterY": 19
				},
				{
					"costumeName": "slot35",
					"baseLayerID": 588,
					"baseLayerMD5": "02a714a7a156ef5d57c6645834bba7e1.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 19,
					"rotationCenterY": 19
				},
				{
					"costumeName": "slot36",
					"baseLayerID": 589,
					"baseLayerMD5": "47403f5e78ae07a75ce122557f129c3a.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 19,
					"rotationCenterY": 19
				},
				{
					"costumeName": "slot37",
					"baseLayerID": 590,
					"baseLayerMD5": "c6db757870e6c3f34114a610d14a585b.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 19,
					"rotationCenterY": 19
				}],
			"currentCostumeIndex": 7,
			"scratchX": 36,
			"scratchY": 133,
			"scale": 0.75,
			"direction": 90,
			"rotationStyle": "normal",
			"isDraggable": false,
			"indexInLibrary": 12,
			"visible": false,
			"spriteInfo": {
			}
		},
		{
			"objName": "Multiplayer",
			"variables": [{
					"name": "?Val",
					"value": 0,
					"isPersistent": false
				},
				{
					"name": "i",
					"value": 9,
					"isPersistent": false
				},
				{
					"name": "char",
					"value": "3003",
					"isPersistent": false
				},
				{
					"name": "i2",
					"value": "1",
					"isPersistent": false
				},
				{
					"name": "parseStr",
					"value": "12102107283747171816685687308167772158167772151010",
					"isPersistent": false
				},
				{
					"name": "parseIdx",
					"value": "1",
					"isPersistent": false
				},
				{
					"name": "_Chars",
					"value": " !\"#$%&'()*+,-.\/0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~",
					"isPersistent": false
				},
				{
					"name": "tmp",
					"value": "",
					"isPersistent": false
				},
				{
					"name": "PMUL",
					"value": "7",
					"isPersistent": false
				},
				{
					"name": "count",
					"value": "1",
					"isPersistent": false
				},
				{
					"name": "TIME_OUT",
					"value": "25",
					"isPersistent": false
				},
				{
					"name": "count2",
					"value": "4",
					"isPersistent": false
				},
				{
					"name": "tickTock",
					"value": 0,
					"isPersistent": false
				},
				{
					"name": "Send OK",
					"value": 0,
					"isPersistent": false
				},
				{
					"name": "i3",
					"value": "19102107283747171816685687308167772158167772151010",
					"isPersistent": false
				},
				{
					"name": "tickSend",
					"value": 0,
					"isPersistent": false
				},
				{
					"name": "Master Time",
					"value": 78.14699999999999,
					"isPersistent": false
				},
				{
					"name": "FadeCostume",
					"value": 102,
					"isPersistent": false
				},
				{
					"name": "Broadcast_Stream",
					"value": "",
					"isPersistent": false
				},
				{
					"name": "Game Revision",
					"value": "41",
					"isPersistent": false
				},
				{
					"name": "Last Count",
					"value": 1,
					"isPersistent": false
				},
				{
					"name": "BufferTime",
					"value": "1.4",
					"isPersistent": false
				},
				{
					"name": "changed?",
					"value": "19102107283747171816685687308167772158167772151010",
					"isPersistent": false
				},
				{
					"name": "Show Debug",
					"value": "0",
					"isPersistent": false
				},
				{
					"name": "Debug",
					"value": "Master Found",
					"isPersistent": false
				},
				{
					"name": "Glitches",
					"value": 7161454,
					"isPersistent": false
				},
				{
					"name": "tryPlayerID",
					"value": 3,
					"isPersistent": false
				},
				{
					"name": "Encoded Name",
					"value": "21072837471718166856873",
					"isPersistent": false
				},
				{
					"name": "@Offline",
					"value": "0",
					"isPersistent": false
				},
				{
					"name": "tick_frames",
					"value": 0,
					"isPersistent": false
				},
				{
					"name": "@Max Players",
					"value": "8",
					"isPersistent": false
				},
				{
					"name": "@Player ID",
					"value": "0",
					"isPersistent": false
				},
				{
					"name": "@Master ID",
					"value": "0",
					"isPersistent": false
				},
				{
					"name": "@Player Count",
					"value": "0",
					"isPersistent": false
				},
				{
					"name": "_Tick",
					"value": "1",
					"isPersistent": false
				},
				{
					"name": "ssc",
					"value": 7,
					"isPersistent": false
				},
				{
					"name": "autosave",
					"value": 36.296,
					"isPersistent": false
				},
				{
					"name": "Last Respawn",
					"value": 0,
					"isPersistent": false
				},
				{
					"name": "Snapshot ID",
					"value": "-2",
					"isPersistent": false
				},
				{
					"name": "LagDetect",
					"value": 0,
					"isPersistent": false
				},
				{
					"name": "Read Snapshot ID",
					"value": "19839",
					"isPersistent": false
				},
				{
					"name": "Time of Day",
					"value": 420,
					"isPersistent": false
				},
				{
					"name": "show console",
					"value": 0,
					"isPersistent": false
				}],
			"lists": [{
					"listName": "Cloud Data",
					"contents": ["19122108583747166798517172422181677721510339013448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021310", "15102107283747171816685687308167772158167772151010", "18102107283747171816685687308167772158167772151010", "18102107283747171816685687308167772158167772151010", "19102107283747171816685687308167772158167772151010", "0102107283747171816685687308167772158167772151010", "14102107283747171816685687308167772158167772151010", "19102107283747171816685687308167772158167772151010"],
					"isPersistent": false,
					"x": 6,
					"y": 10,
					"width": 476,
					"height": 352,
					"visible": false
				},
				{
					"listName": "Player Data",
					"contents": ["",
						"",
						"",
						"",
						"",
						"",
						"",
						"",
						"19122108583747166798517172422181677721510339013448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021310",
						58.147,
						"0",
						"",
						"134486045040213134486045040213134486045040213134486045040213134486045040213134486045040213134486045040213134486045040213134486045040213134486045040213134486045040213134486045040213134486045040213134486045040213134486045040213134486045040213134486045040213134486045040213134486045040213134486045040213134486045040213134486045040213134486045040213134486045040213134486045040213134486045040213",
						"728",
						"",
						"15102107283747171816685687308167772158167772151010",
						"-99",
						"0",
						"",
						"",
						"0",
						"",
						"12102107283747171816685687308167772158167772151010",
						59.609,
						"1",
						"",
						"",
						"0",
						"",
						"18102107283747171816685687308167772158167772151010",
						40.274,
						"1",
						"",
						"",
						"0",
						"",
						"19102107283747171816685687308167772158167772151010",
						"-99",
						"0",
						"",
						"",
						"0",
						"",
						"0102107283747171816685687308167772158167772151010",
						24.546,
						"1",
						"",
						"",
						"0",
						"",
						"14102107283747171816685687308167772158167772151010",
						"-99",
						"0",
						"",
						"",
						"0",
						"",
						"19102107283747171816685687308167772158167772151010",
						56.142,
						"1",
						"",
						"",
						"0"],
					"isPersistent": false,
					"x": 12.65,
					"y": 12,
					"width": 469,
					"height": 350,
					"visible": false
				},
				{
					"listName": "_change",
					"contents": [20, "0", "0", 2, "0", "0", "0", "0"],
					"isPersistent": false,
					"x": 0,
					"y": 0,
					"width": 482,
					"height": 362,
					"visible": false
				},
				{
					"listName": "_Broadcast",
					"contents": [],
					"isPersistent": false,
					"x": 0,
					"y": 0,
					"width": 482,
					"height": 362,
					"visible": false
				},
				{
					"listName": "_Console",
					"contents": ["trifant007 has joined the game."],
					"isPersistent": false,
					"x": 232,
					"y": 70,
					"width": 250,
					"height": 292,
					"visible": false
				},
				{
					"listName": "big",
					"contents": [2, 5, 7],
					"isPersistent": false,
					"x": 151,
					"y": 59,
					"width": 331,
					"height": 303,
					"visible": false
				}],
			"scripts": [[2474.45,
					37,
					[["whenIReceive", "@Fade Message"],
						["setVar:to:", "FadeCostume", ["costumeIndex"]],
						["setGraphicEffect:to:", "ghost", 0],
						["wait:elapsed:from:", 1],
						["doIf",
							["=", ["readVariable", "FadeCostume"], ["costumeIndex"]],
							[["doRepeat", 10, [["changeGraphicEffect:by:", "ghost", 10]]],
								["hide"],
								["setGraphicEffect:to:", "ghost", 0],
								["doIfElse",
									[">", ["readVariable", "@Player Count"], "1"],
									[["lookLike:", " "]],
									[["lookLike:", "Empty Game"], ["show"], ["comeToFront"]]]]]]],
				[2004.95,
					34.65,
					[["whenIReceive", "@Multiplayer Tick Request"],
						["doIf", [">", ["readVariable", "@Offline"], "0"], [["stopScripts", "this script"]]],
						["call", "Read Player Data Tick"]]],
				[1647.95,
					9.65,
					[["whenIReceive", "@Update Multiplayer"],
						["doIf",
							[">", ["readVariable", "@Offline"], "0"],
							[["deleteLine:ofList:", "all", "@Broadcast"], ["stopScripts", "this script"]]],
						["call", "Fill Broadcast"],
						["call", "Process Cloud Data %b", [">", ["timer"], ["readVariable", "tickTock"]]],
						["changeVar:by:", "tick_frames", ["readVariable", "_Tick"]],
						["doIf",
							[">", ["timer"], ["readVariable", "tickTock"]],
							[["doIf", ["=", ["readVariable", "@Player ID"], "-1"], null],
								["doIf",
									[">", ["readVariable", "@Player ID"], "0"],
									[["doIfElse",
											["=", ["readVariable", "@Master ID"], ["readVariable", "@Player ID"]],
											[["doIf",
													[">", ["timer"], ["readVariable", "autosave"]],
													[["setVar:to:", "autosave", ["+", ["timer"], 60]],
														["call", "snapshot %b", false],
														["append:toList:", "0", "@Place"],
														["append:toList:",
															["concatenate:with:",
																"1",
																["concatenate:with:",
																	["readVariable", "Snapshot ID"],
																	["concatenate:with:", " ", ["rounded", ["+", ["timer"], ["readVariable", "Time of Day"]]]]]],
															"@Place"]]],
												["call", "Send My Cloud Data %n %n", ["readVariable", "@Player ID"], 2]],
											[["call", "Send My Cloud Data %n %n", ["readVariable", "@Player ID"], 1]]]]],
								["setVar:to:",
									"tickTock",
									["+", ["timer"], ["+", ["readVariable", "BufferTime"], ["randomFrom:to:", 0, 0.1]]]],
								["setVar:to:", "Broadcast_Stream", ""],
								["doIfElse",
									[">", ["readVariable", "tick_frames"], ["*", ["readVariable", "BufferTime"], 40]],
									[["lookLike:", "Turbo"], ["show"], ["comeToFront"], ["stopScripts", "all"]],
									[["doIf",
											[">", ["readVariable", "LagDetect"], "-1"],
											[["doIfElse",
													["&", [">", ["readVariable", "tick_frames"], "4"], ["<", ["readVariable", "tick_frames"], "20"]],
													[["changeVar:by:", "LagDetect", 1],
														["doIf",
															[">", ["readVariable", "LagDetect"], "15"],
															[["setVar:to:", "_Tick", "2"], ["setVar:to:", "LagDetect", "-1"], ["broadcast:", "Lag Detect"]]]],
													[["doIf", [">", ["readVariable", "LagDetect"], "0"], [["changeVar:by:", "LagDetect", -1]]]]]]]]],
								["setVar:to:", "tick_frames", 0]]],
						["call", "Read Player Data Tick"]]],
				[2917,
					28.3,
					[["procDef", "Fill Broadcast", [], [], true],
						["call", "Init Reader %s", ""],
						["setVar:to:", "i", 0],
						["doUntil",
							["=", ["lineCountOfList:", "@Broadcast"], "0"],
							[["doIfElse",
									["=", ["getLine:ofList:", 1, "@Broadcast"], "@TICK"],
									[["deleteLine:ofList:", 1, "@Broadcast"],
										["setVar:to:", "tmp", ["readVariable", "parseStr"]],
										["call", "Init Reader %s", ""],
										["call", "Write Number %n", ["readVariable", "i"]],
										["setVar:to:",
											"Broadcast_Stream",
											["concatenate:with:", ["readVariable", "Broadcast_Stream"], ["concatenate:with:", ["readVariable", "parseStr"], ["readVariable", "tmp"]]]],
										["call", "Init Reader %s", ""],
										["setVar:to:", "i", 0]],
									[["changeVar:by:", "i", 1],
										["call", "Write Number %n", ["getLine:ofList:", 1, "@Broadcast"]],
										["deleteLine:ofList:", 1, "@Broadcast"]]]]],
						["doIf",
							[">", ["readVariable", "i"], "0"],
							[["call", "Write Number %n", ["readVariable", "i"]],
								["setVar:to:",
									"Broadcast_Stream",
									["concatenate:with:", ["readVariable", "Broadcast_Stream"], ["concatenate:with:", ["readVariable", "parseStr"], ["readVariable", "tmp"]]]]]]]],
				[466,
					4225,
					[["procDef", "Write String %s", ["txt"], [""], true],
						["setVar:to:", "i2", ["costumeIndex"]],
						["call", "Write Number %n", ["stringLength:", ["getParam", "txt", "r"]]],
						["setVar:to:", "?Val", ""],
						["setVar:to:", "i3", "1"],
						["doRepeat",
							["stringLength:", ["getParam", "txt", "r"]],
							[["lookLike:", ["letter:of:", ["readVariable", "i3"], ["getParam", "txt", "r"]]],
								["doIf",
									["<", ["costumeIndex"], "10"],
									[["setVar:to:", "?Val", ["concatenate:with:", ["readVariable", "?Val"], "0"]]]],
								["setVar:to:", "?Val", ["concatenate:with:", ["readVariable", "?Val"], ["costumeIndex"]]],
								["changeVar:by:", "i3", 1]]],
						["setVar:to:", "parseStr", ["concatenate:with:", ["readVariable", "parseStr"], ["readVariable", "?Val"]]],
						["lookLike:", ["readVariable", "i2"]]]],
				[4199.15,
					2035.45,
					[["procDef", "Get Rest of ?Val", [], [], true],
						["setVar:to:", "char", ""],
						["doUntil",
							[">", ["readVariable", "i3"], ["stringLength:", ["readVariable", "?Val"]]],
							[["setVar:to:",
									"char",
									["concatenate:with:", ["readVariable", "char"], ["letter:of:", ["readVariable", "i3"], ["readVariable", "?Val"]]]],
								["changeVar:by:", "i3", 1]]]]],
				[4198.5,
					2265.8,
					[["procDef", "Get LData For Tile %n", ["tile index"], [1], true],
						["setVar:to:", "ssc", "1"],
						["doUntil",
							["|",
								[">", ["readVariable", "ssc"], ["lineCountOfList:", "_LData"]],
								["=", ["getLine:ofList:", ["readVariable", "ssc"], "_LData"], ["getParam", "tile index", "r"]]],
							[["changeVar:by:", "ssc", ["getLine:ofList:", ["+", ["readVariable", "ssc"], 1], "_LData"]]]]]],
				[463,
					3783,
					[["procDef", "Read String", [], [], true],
						["call", "Read Number"],
						["doIfElse",
							[">",
								["+", ["readVariable", "parseIdx"], ["*", ["readVariable", "?Val"], 2]],
								["+", ["stringLength:", ["readVariable", "parseStr"]], 1]],
							[["setVar:to:",
									"i2",
									["\/",
										["-", ["+", ["stringLength:", ["readVariable", "parseStr"]], 1], ["readVariable", "parseIdx"]],
										2]],
								["changeVar:by:", "Glitches", 1]],
							[["setVar:to:", "i2", ["readVariable", "?Val"]]]],
						["setVar:to:", "?Val", ""],
						["doRepeat",
							["readVariable", "i2"],
							[["setVar:to:",
									"i2",
									["+",
										["*", ["letter:of:", ["readVariable", "parseIdx"], ["readVariable", "parseStr"]], 10],
										["letter:of:", ["+", ["readVariable", "parseIdx"], 1], ["readVariable", "parseStr"]]]],
								["setVar:to:",
									"?Val",
									["concatenate:with:", ["readVariable", "?Val"], ["letter:of:", ["readVariable", "i2"], ["readVariable", "_Chars"]]]],
								["changeVar:by:", "parseIdx", 2]]]]],
				[1002,
					20,
					[["whenGreenFlag"],
						["hideVariable:", "☁ Player_1"],
						["hideVariable:", "☁ Player_2"],
						["hideVariable:", "☁ Player_2"],
						["setVar:to:", "Show Debug", "0"],
						["setVar:to:", "tick_frames", 0],
						["setVar:to:", "Time of Day", ["*", 7, 60]]]],
				[2472.8,
					497,
					[["whenIReceive", "Game Revision Out of Date"],
						["doIfElse",
							["=", ["readVariable", "☁ GameData"], "-1"],
							[["lookLike:", "Planned Down Time"]],
							[["lookLike:", "Out of Date"]]],
						["show"],
						["comeToFront"],
						["stopScripts", "all"]]],
				[3327,
					1640.6,
					[["procDef", "Read Builders Block List %n %n", ["playerID", "lastTick"], [1, 1], false],
						["setLine:ofList:to:", ["getParam", "playerID", "r"], "_Chat", ""],
						["call", "Read Number"],
						["doRepeat",
							["readVariable", "?Val"],
							[["call", "Read Number"],
								["doIfElse",
									["&",
										[">", ["readVariable", "?Val"], ["-", ["getParam", "lastTick", "r"], 10]],
										["not", [">", ["readVariable", "?Val"], ["getParam", "lastTick", "r"]]]],
									[["call", "Read Number"],
										["doIfElse",
											["=", ["readVariable", "?Val"], "0"],
											[["call", "Read String"]],
											[["call", "Read Number"]]]],
									[["setLine:ofList:to:",
											["+", ["*", ["getParam", "playerID", "r"], ["readVariable", "PMUL"]], 7],
											"Player Data",
											["readVariable", "?Val"]],
										["call", "Read Number"],
										["setVar:to:", "i3", ["readVariable", "?Val"]],
										["doIfElse",
											["=", ["readVariable", "i3"], "0"],
											[["call", "Read String"],
												["setVar:to:", "i3", ["letter:of:", 1, ["readVariable", "?Val"]]],
												["doIfElse",
													["&",
														["|", ["=", ["readVariable", "i3"], "1"], ["=", ["readVariable", "i3"], "3"]],
														[">", ["readVariable", "Snapshot ID"], "-2"]],
													[["doIf", ["=", ["readVariable", "i3"], "3"], [["setVar:to:", "Snapshot ID", "-1"]]],
														["setVar:to:", "i3", "2"],
														["call", "Next Token of ?Val"],
														["doIf",
															[">", ["readVariable", "char"], ["readVariable", "Snapshot ID"]],
															[["doIfElse",
																	["|",
																		["=", ["readVariable", "Snapshot ID"], "-1"],
																		[">", ["readVariable", "char"], ["+", ["readVariable", "Snapshot ID"], 5]]],
																	[["setVar:to:", "Read Snapshot ID", ["readVariable", "char"]],
																		["call", "Next Token of ?Val"],
																		["doIf",
																			[">", ["readVariable", "char"], "0"],
																			[["setVar:to:", "Time of Day", ["-", ["readVariable", "char"], ["timer"]]]]],
																		["doBroadcastAndWait", "Msg - Loading Level"],
																		["wait:elapsed:from:", 4],
																		["deleteLine:ofList:", "all", "_change"],
																		["doRepeat", 10, [["append:toList:", "-1", "_change"]]],
																		["call", "read snapshot %s %n", ["readVariable", "parseStr"], ["readVariable", "parseIdx"]],
																		["doBroadcastAndWait", "Level Ready to Play"]],
																	[["setVar:to:", "Snapshot ID", ["readVariable", "char"]]]]]]],
													[["doIfElse",
															["=", ["readVariable", "?Val"], "2"],
															[["doBroadcastAndWait", "Msg - Loading Level"],
																["wait:elapsed:from:", 4],
																["deleteLine:ofList:", "all", "_change"],
																["doRepeat", 10, [["append:toList:", "-1", "_change"]]],
																["call", "read snapshot %s %n", ["readVariable", "parseStr"], ["readVariable", "parseIdx"]],
																["doBroadcastAndWait", "Level Ready to Play"],
																["doBroadcastAndWait", "respawn"],
																["setVar:to:", "Last Respawn", ["+", ["timer"], 5]]],
															[["doIfElse",
																	["=", ["readVariable", "i3"], "4"],
																	[["doIf",
																			["=", ["getAttribute:of:", "Time Left", "Warning"], "0"],
																			[["call", "Console Out %n %b %s", ["getParam", "playerID", "r"], false, "requested a level reset"], ["broadcast:", "Reset Request"]]]],
																	[["doIfElse",
																			["=", ["readVariable", "i3"], "5"],
																			[["call", "Console Out %n %b %s", ["getParam", "playerID", "r"], false, "cancelled level reset"], ["broadcast:", "Reset Cancelled"]],
																			[["doIfElse",
																					["=", ["readVariable", "i3"], "c"],
																					[["setVar:to:", "i3", ""],
																						["doRepeat",
																							["-", ["stringLength:", ["readVariable", "?Val"]], 1],
																							[["setVar:to:",
																									"i3",
																									["concatenate:with:",
																										["readVariable", "i3"],
																										["letter:of:", ["+", ["stringLength:", ["readVariable", "i3"]], 2], ["readVariable", "?Val"]]]]]],
																						["setLine:ofList:to:", ["getParam", "playerID", "r"], "_Chat", ["readVariable", "i3"]],
																						["call", "Console Out %n %b %s", 0, false, ["readVariable", "i3"]]],
																					[["doIfElse",
																							["=", ["readVariable", "i3"], "k"],
																							[["doIf",
																									["=", ["readVariable", "?Val"], ["concatenate:with:", "k", ["getUserName"]]],
																									[["setVar:to:", "@Player ID", "-1"]]]],
																							[["doIfElse",
																									["=", ["readVariable", "i3"], "e"],
																									[["doIf",
																											["=", ["readVariable", "?Val"], ["concatenate:with:", "e", ["getUserName"]]],
																											[["doBroadcastAndWait", "Disconnected"]]]],
																									[["doIfElse",
																											["=", ["readVariable", "i3"], "w"],
																											[["doIf",
																													["=", ["readVariable", "?Val"], ["concatenate:with:", "w", ["getUserName"]]],
																													[["setVar:to:", "@Player ID", "-999"], ["doBroadcastAndWait", "KICKED"]]]],
																											[["doIfElse",
																													["=", ["readVariable", "i3"], "n"],
																													[["setVar:to:", "i3", "2"],
																														["call", "Next Token of ?Val"],
																														["setVar:to:", "tmp", ["readVariable", "char"]],
																														["call", "Get LData For Tile %n", ["readVariable", "tmp"]],
																														["call", "Next Token of ?Val"],
																														["doIfElse",
																															[">", ["readVariable", "ssc"], ["lineCountOfList:", "_LData"]],
																															[["append:toList:", ["readVariable", "tmp"], "_LData"],
																																["append:toList:", "4", "_LData"],
																																["append:toList:", ["readVariable", "char"], "_LData"],
																																["call", "Get Rest of ?Val"],
																																["append:toList:", ["readVariable", "char"], "_LData"]],
																															[["setLine:ofList:to:", ["+", ["readVariable", "ssc"], 2], "_LData", ["readVariable", "char"]],
																																["call", "Get Rest of ?Val"],
																																["setLine:ofList:to:", ["+", ["readVariable", "ssc"], 3], "_LData", ["readVariable", "char"]]]]],
																													[["doIfElse",
																															["=", ["readVariable", "i3"], "i"],
																															[["setVar:to:", "i3", "2"],
																																["call", "Next Token of ?Val"],
																																["call", "Get LData For Tile %n", ["readVariable", "char"]],
																																["setVar:to:", "tmp", ["readVariable", "ssc"]],
																																["doIfElse",
																																	[">", ["readVariable", "ssc"], ["lineCountOfList:", "_LData"]],
																																	[["append:toList:", ["readVariable", "char"], "_LData"],
																																		["append:toList:", "4", "_LData"],
																																		["append:toList:", ["getLine:ofList:", ["getParam", "playerID", "r"], "@PlayerNames"], "_LData"],
																																		["append:toList:", "", "_LData"]],
																																	[["doRepeat",
																																			["-", ["getLine:ofList:", ["+", ["readVariable", "ssc"], 1], "_LData"], 4],
																																			[["deleteLine:ofList:", ["+", ["readVariable", "ssc"], 4], "_LData"]]]]],
																																["call", "Next Token of ?Val"],
																																["changeVar:by:", "ssc", 4],
																																["doUntil",
																																	["=", ["readVariable", "char"], ""],
																																	[["insert:at:ofList:", ["readVariable", "char"], ["readVariable", "ssc"], "_LData"],
																																		["changeVar:by:", "ssc", 1],
																																		["call", "Next Token of ?Val"]]],
																																["setLine:ofList:to:",
																																	["+", ["readVariable", "tmp"], 1],
																																	"_LData",
																																	["-", ["readVariable", "ssc"], ["readVariable", "tmp"]]]],
																															[["doIfElse",
																																	["=", ["readVariable", "i3"], "m"],
																																	[["setVar:to:", "i3", "2"], ["call", "Next Token of ?Val"], ["call", "Update Mob %n", ["readVariable", "char"]]],
																																	[["doIfElse",
																																			["=", ["readVariable", "i3"], "J"],
																																			[["setVar:to:", "i3", "2"], ["call", "Join Response"]],
																																			[["doIfElse",
																																					["=", ["readVariable", "i3"], "p"],
																																					[["setLine:ofList:to:", 23, "_Chat", ["readVariable", "?Val"]]],
																																					null]]]]]]]]]]]]]]]]]]]]]]]]]],
											[["call", "Read Number"],
												["doIf",
													["not", ["=", ["getLine:ofList:", ["readVariable", "i3"], "_Level"], ["readVariable", "?Val"]]],
													[["setLine:ofList:to:", ["readVariable", "i3"], "_Level", ["readVariable", "?Val"]],
														["call", "Get LData For Tile %n", ["readVariable", "i3"]],
														["doIf",
															["<", ["readVariable", "ssc"], ["lineCountOfList:", "_LData"]],
															[["doRepeat",
																	["getLine:ofList:", ["+", ["readVariable", "ssc"], 1], "_LData"],
																	[["deleteLine:ofList:", ["readVariable", "ssc"], "_LData"]]]]],
														["doIfElse",
															["=", ["readVariable", "?Val"], "0"],
															[["append:toList:", ["readVariable", "i3"], "NextLiquid"],
																["call", "Add Liquid %n", ["-", ["readVariable", "i3"], 1]],
																["call", "Add Liquid %n", ["+", ["readVariable", "i3"], 1]],
																["call", "Add Liquid %n", ["+", ["readVariable", "i3"], ["readVariable", "MAP_WIDTH"]]]],
															[["doIf",
																	["|", ["=", ["readVariable", "?Val"], "160"], ["=", ["readVariable", "?Val"], "178"]],
																	[["call", "Add Liquid %n", ["readVariable", "i3"]]]]]],
														["doIfElse",
															["&", [">", ["readVariable", "?Val"], "46"], ["<", ["readVariable", "?Val"], "50"]],
															[["call", "Add Light at %n amount %n", ["readVariable", "i3"], 110]],
															[["call", "Add Light at %n amount %n", ["readVariable", "i3"], 0]]]]]]]]]]]]],
				[4198.55,
					2526.65,
					[["procDef", "Update Mob %n", ["id"], [1], true],
						["doIfElse",
							["list:contains:", "_Mob", ["getParam", "id", "r"]],
							[["setVar:to:", "ssc", "1"],
								["doUntil",
									["|",
										[">", ["readVariable", "ssc"], ["lineCountOfList:", "_Mob"]],
										["=", ["getLine:ofList:", ["readVariable", "ssc"], "_Mob"], ["getParam", "id", "r"]]],
									[["changeVar:by:", "ssc", 2]]],
								["doIf",
									["<", ["readVariable", "ssc"], ["lineCountOfList:", "_Mob"]],
									[["setLine:ofList:to:", ["+", ["readVariable", "ssc"], 1], "_Mob", ["readVariable", "?Val"]]]]],
							[["setVar:to:", "ssc", "1"],
								["doUntil",
									["|",
										[">", ["readVariable", "ssc"], ["lineCountOfList:", "_Mob"]],
										["=", ["getLine:ofList:", ["readVariable", "ssc"], "_Mob"], "0"]],
									[["changeVar:by:", "ssc", 2]]],
								["doIf",
									["<", ["readVariable", "ssc"], ["lineCountOfList:", "_Mob"]],
									[["setLine:ofList:to:", ["+", ["readVariable", "ssc"], 0], "_Mob", ["getParam", "id", "r"]],
										["setLine:ofList:to:", ["+", ["readVariable", "ssc"], 1], "_Mob", ["readVariable", "?Val"]]]]]]]],
				[5019.35, 5456.35, [["not", false]]],
				[4202.05,
					3155.1,
					[["procDef", "Join Response", [], [], true],
						["call", "Next Token of ?Val"],
						["doIfElse",
							["=", ["readVariable", "char"], ["getUserName"]],
							[["call", "Next Token of ?Val"],
								["doIfElse",
									["=", ["readVariable", "char"], "N"],
									[["setVar:to:", "@Player ID", "-1"]],
									[["doIfElse",
											["=", ["readVariable", "char"], "Y"],
											[["call", "Next Token of ?Val"],
												["setVar:to:", "@Player ID", ["+", ["readVariable", "char"], 0]],
												["doIfElse",
													["|",
														["<", ["readVariable", "@Player ID"], "1"],
														[">", ["readVariable", "@Player ID"], ["readVariable", "@Max Players"]]],
													[["setVar:to:", "@Player ID", "-1"]],
													[["setLine:ofList:to:", ["readVariable", "char"], "@PlayerNames", ["getUserName"]],
														["setLine:ofList:to:",
															["+", ["*", ["readVariable", "char"], ["readVariable", "PMUL"]], 3],
															"Player Data",
															["+", ["timer"], 20]],
														["setVar:to:", "Snapshot ID", "-1"],
														["call", "Process Land Ownerships"]]]],
											null]]]],
							[["call", "Next Token of ?Val"],
								["doIfElse",
									["=", ["readVariable", "char"], "N"],
									null,
									[["doIfElse",
											["=", ["readVariable", "char"], "Y"],
											[["setLine:ofList:to:", ["readVariable", "char"], "@PlayerNames", ["getUserName"]],
												["setLine:ofList:to:",
													["+", ["*", ["readVariable", "char"], ["readVariable", "PMUL"]], 3],
													"Player Data",
													["+", ["timer"], 20]]],
											null]]]]]]],
				[4196,
					1790.85,
					[["procDef", "Next Token of ?Val", [], [], true],
						["setVar:to:", "char", ""],
						["doUntil",
							["|",
								[">", ["readVariable", "i3"], ["stringLength:", ["readVariable", "?Val"]]],
								["=", ["letter:of:", ["readVariable", "i3"], ["readVariable", "?Val"]], " "]],
							[["setVar:to:",
									"char",
									["concatenate:with:", ["readVariable", "char"], ["letter:of:", ["readVariable", "i3"], ["readVariable", "?Val"]]]],
								["changeVar:by:", "i3", 1]]],
						["changeVar:by:", "i3", 1]]],
				[359,
					99,
					[["whenIReceive", "@Allocate Gaming Slot"],
						["doIf",
							[">", ["readVariable", "@Offline"], "0"],
							[["call", "Init Cloud Data"],
								["doBroadcastAndWait", "Setup Level Data"],
								["setVar:to:", "@Player ID", "1"],
								["setVar:to:", "@Master ID", "1"],
								["setVar:to:", "@Player Count", "1"],
								["doBroadcastAndWait", "@Connected"],
								["hide"],
								["append:toList:", ["concatenate:with:", ["getUserName"], " has started a single player game."], "_Console"],
								["stopScripts", "this script"]]],
						["setVar:to:", "BufferTime", "1.6"],
						["setVar:to:", "Game Revision", "41"],
						["call", "Init Reader %s", ""],
						["call", "Write String %s", ["getUserName"]],
						["setVar:to:", "Encoded Name", ["readVariable", "parseStr"]],
						["doIfElse",
							["|", ["=", ["getUserName"], "griffpatch"], ["=", ["getUserName"], "griffpatch_tutor"]],
							[["setVar:to:", "☁ GameData", ["readVariable", "Game Revision"]]],
							[["doIfElse",
									["=", ["readVariable", "☁ GameData"], "-1"],
									[["broadcast:", "Game Revision Out of Date"]],
									[["doIf",
											["=", ["readVariable", "☁ GameData"], "0"],
											[["lookLike:", "New Scratcher"],
												["show"],
												["comeToFront"],
												["doWaitUntil", ["keyPressed:", "space"]],
												["doWaitUntil", ["not", ["keyPressed:", "space"]]],
												["setVar:to:", "☁ GameData", ["readVariable", "Game Revision"]]]]]]]],
						["setVar:to:", "@Player ID", "0"],
						["call", "Allocate Gaming Slot %b", false]]],
				[616,
					935,
					[["whenIReceive", "Check Ban"],
						["setVar:to:", "@Offline", "0"],
						["setVar:to:", "@Player ID", "0"],
						["setVar:to:", "@Master ID", "0"],
						["setVar:to:", "@Player Count", "0"]]],
				[614, 1094, [["whenIReceive", "Single Player"], ["setVar:to:", "@Offline", "1"]]],
				[609,
					1189,
					[["whenKeyPressed", "l"], ["setVar:to:", "_Tick", ["-", 3, ["readVariable", "_Tick"]]]]],
				[1213.6,
					1386.8,
					[["doIfElse",
							["&", ["not", ["getParam", "check self?", "b"]], ["=", ["readVariable", "@Player ID"], "1"]],
							[["setVar:to:", "i", "2"], ["setVar:to:", "@Player Count", "1"]],
							null]]],
				[2309.05,
					4403.05,
					[["procDef", "Process Land Ownerships", [], [], true],
						["doIf",
							[">", ["readVariable", "@Player ID"], "0"],
							[["setVar:to:", "i", "1"],
								["doUntil",
									[">", ["readVariable", "i"], ["lineCountOfList:", "_LData"]],
									[["setVar:to:", "count2", ["getLine:ofList:", ["+", ["readVariable", "i"], 1], "_LData"]],
										["doIf",
											["=", ["getLine:ofList:", ["getLine:ofList:", ["readVariable", "i"], "_LData"], "_Level"], "155"],
											[["doIf",
													["=", ["getLine:ofList:", ["+", ["readVariable", "i"], 2], "_LData"], ["getUserName"]],
													[["doIfElse",
															["<", ["getLine:ofList:", ["+", ["readVariable", "@Player ID"], 50], "@PlayerNames"], "1"],
															[["setLine:ofList:to:",
																	["+", ["readVariable", "@Player ID"], 50],
																	"@PlayerNames",
																	["getLine:ofList:", ["readVariable", "i"], "_LData"]],
																["broadcast:", "found claim"]],
															[["setLine:ofList:to:", ["getLine:ofList:", ["readVariable", "i"], "_LData"], "_Level", "0"],
																["doRepeat", ["readVariable", "count2"], [["deleteLine:ofList:", ["readVariable", "i"], "_LData"]]],
																["setVar:to:", "count2", "0"]]]]]]],
										["changeVar:by:", "i", ["readVariable", "count2"]]]],
								["setVar:to:", "i", ["getLine:ofList:", ["+", ["readVariable", "@Player ID"], 50], "@PlayerNames"]],
								["doIf",
									[">", ["readVariable", "i"], "0"],
									[["doIf",
											["not", ["=", ["getLine:ofList:", ["readVariable", "i"], "_Level"], "155"]],
											[["call", "Get LData For Tile %n", ["readVariable", "i"]],
												["doIfElse",
													[">", ["readVariable", "ssc"], ["lineCountOfList:", "_LData"]],
													[["setLine:ofList:to:", ["readVariable", "i"], "_Level", "155"],
														["append:toList:", ["readVariable", "i"], "_LData"],
														["append:toList:", "4", "_LData"],
														["append:toList:", ["getUserName"], "_LData"],
														["append:toList:", "Claimed Land", "_LData"],
														["append:toList:", "0", "@Place"],
														["append:toList:",
															["concatenate:with:",
																"n",
																["concatenate:with:",
																	["readVariable", "i"],
																	["concatenate:with:", " ", ["concatenate:with:", ["getUserName"], ["concatenate:with:", " ", "Claimed Land"]]]]],
															"@Place"]],
													[["setLine:ofList:to:", ["+", ["readVariable", "@Player ID"], 50], "_Level", ""]]]]]]],
								["setVar:to:", "i", "47"],
								["setVar:to:", "count2", 0],
								["doRepeat",
									24,
									[["setVar:to:", "count", ["getLine:ofList:", ["readVariable", "i"], "_inv"]],
										["doIfElse",
											["=", ["readVariable", "count"], "155"],
											[["setVar:to:", "count2", ["readVariable", "i"]],
												["setLine:ofList:to:", ["readVariable", "count2"], "_inv", "0"],
												["setLine:ofList:to:", ["+", ["readVariable", "count2"], 1], "_inv", "0"]],
											[["doIf",
													["=", ["readVariable", "count"], "0"],
													[["setVar:to:", "count2", ["readVariable", "i"]]]]]],
										["changeVar:by:", "i", -2]]],
								["doIf",
									["<", ["getLine:ofList:", ["+", ["readVariable", "@Player ID"], 50], "@PlayerNames"], "1"],
									[["doIf", ["=", ["readVariable", "count2"], "0"], [["setVar:to:", "count2", "15"]]],
										["setLine:ofList:to:", ["readVariable", "count2"], "_inv", "155"],
										["setLine:ofList:to:", ["+", ["readVariable", "count2"], 1], "_inv", "1"]]],
								["setVar:to:", "inv_change", "2"]]]]],
				[2922.05,
					4867.05,
					[["call", "Get Player ID for name: %s", ["getLine:ofList:", ["+", ["readVariable", "i"], 2], "_LData"]],
						["doIf",
							[">", ["readVariable", "count"], "0"],
							[["doIfElse",
									["<", ["getLine:ofList:", ["+", ["readVariable", "count"], 50], "@PlayerNames"], "1"],
									[["setLine:ofList:to:",
											["+", ["readVariable", "count"], 50],
											"@PlayerNames",
											["getLine:ofList:", ["readVariable", "i"], "_LData"]]],
									[["setLine:ofList:to:", ["getLine:ofList:", ["readVariable", "i"], "_LData"], "_Level", "0"],
										["doRepeat", ["readVariable", "count2"], [["deleteLine:ofList:", ["readVariable", "i"], "_LData"]]],
										["setVar:to:", "count2", "0"]]]]]]],
				[2908.3,
					5458.8,
					[["procDef", "Get Player ID for name: %s", ["name"], [""], true],
						["setVar:to:", "count", ["readVariable", "@Max Players"]],
						["doUntil",
							["|",
								["<", ["readVariable", "count"], "1"],
								["=", ["getParam", "name", "r"], ["getLine:ofList:", ["readVariable", "count"], "@PlayerNames"]]],
							[["changeVar:by:", "count", -1]]]]],
				[2294.55,
					2669.45,
					[["procDef", "Write String to Big %s", ["txt"], [""], true],
						["setVar:to:", "ssc", ["costumeIndex"]],
						["call", "Write Number to Big %n", ["stringLength:", ["getParam", "txt", "r"]]],
						["setVar:to:", "?Val", ""],
						["setVar:to:", "i3", "1"],
						["doRepeat",
							["stringLength:", ["getParam", "txt", "r"]],
							[["lookLike:", ["letter:of:", ["readVariable", "i3"], ["getParam", "txt", "r"]]],
								["doIfElse",
									["<", ["costumeIndex"], "10"],
									[["append:toList:", ["letter:of:", 1, "0"], "big"],
										["append:toList:", ["letter:of:", 1, ["costumeIndex"]], "big"]],
									[["append:toList:", ["letter:of:", 1, ["costumeIndex"]], "big"],
										["append:toList:", ["letter:of:", 2, ["costumeIndex"]], "big"]]],
								["changeVar:by:", "i3", 1]]],
						["lookLike:", ["readVariable", "ssc"]]]],
				[2299.75,
					3160.3,
					[["procDef", "Write Number to Big %n", ["val"], [1], true],
						["doIfElse",
							["=", ["getParam", "val", "r"], "1"],
							[["append:toList:", ["letter:of:", 1, "0"], "big"]],
							[["doIfElse",
									["<", ["getParam", "val", "r"], "0"],
									[["setVar:to:", "?Val", ["rounded", ["+", ["getParam", "val", "r"], 16777215]]]],
									[["setVar:to:", "?Val", ["rounded", ["getParam", "val", "r"]]]]],
								["append:toList:", ["letter:of:", 1, ["stringLength:", ["readVariable", "?Val"]]], "big"],
								["setVar:to:", "i2", "1"],
								["doRepeat",
									["stringLength:", ["readVariable", "?Val"]],
									[["append:toList:", ["letter:of:", ["readVariable", "i2"], ["readVariable", "?Val"]], "big"],
										["changeVar:by:", "i2", 1]]]]]]],
				[664,
					605.05,
					[["whenIReceive", "Force Player 1"],
						["doIf", ["<", ["readVariable", "@Player ID"], "1"], [["setVar:to:", "@Player ID", "1"]]],
						["setVar:to:", "@Master ID", ["readVariable", "@Player ID"]],
						["call", "Send My Cloud Data %n %n", ["readVariable", "@Player ID"], 2]]],
				[907.05,
					221.95,
					[["procDef", "Init Cloud Data", [], [], true],
						["setVar:to:", "@Player ID", 0],
						["setVar:to:", "@Master ID", 0],
						["call", "Read Cloud Data"],
						["setVar:to:", "i", "1"],
						["deleteLine:ofList:", "all", "@PlayerNames"],
						["deleteLine:ofList:", "all", "Player Data"],
						["deleteLine:ofList:", "all", "_change"],
						["deleteLine:ofList:", "all", "_Chat"],
						["doRepeat", ["readVariable", "PMUL"], [["append:toList:", "", "Player Data"]]],
						["doRepeat",
							["readVariable", "@Max Players"],
							[["append:toList:", "", "Player Data"],
								["append:toList:", ["getLine:ofList:", ["readVariable", "i"], "Cloud Data"], "Player Data"],
								["append:toList:", "-99", "Player Data"],
								["append:toList:", "0", "Player Data"],
								["append:toList:", "", "Player Data"],
								["append:toList:", "", "Player Data"],
								["append:toList:", "0", "Player Data"],
								["append:toList:", "0", "_change"],
								["append:toList:", "", "_Chat"],
								["changeVar:by:", "i", 1]]],
						["doRepeat", 80, [["append:toList:", "", "@PlayerNames"]]],
						["doRepeat", 25, [["append:toList:", "", "_Chat"]]],
						["setLine:ofList:to:", 20, "_Chat", "0"],
						["setLine:ofList:to:", 21, "_Chat", "0"]]],
				[908.4,
					964.25,
					[["procDef", "Read Cloud Data", [], [], true],
						["deleteLine:ofList:", "all", "Cloud Data"],
						["doIfElse",
							["=", ["readVariable", "@Offline"], "0"],
							[["append:toList:", ["readVariable", "☁ Player_1"], "Cloud Data"],
								["append:toList:", ["readVariable", "☁ Player_2"], "Cloud Data"],
								["append:toList:", ["readVariable", "☁ Player_3"], "Cloud Data"],
								["append:toList:", ["readVariable", "☁ Player_4"], "Cloud Data"],
								["append:toList:", ["readVariable", "☁ Player_5"], "Cloud Data"],
								["append:toList:", ["readVariable", "☁ Player_6"], "Cloud Data"],
								["append:toList:", ["readVariable", "☁ Player_7"], "Cloud Data"],
								["append:toList:", ["readVariable", "☁ Player_8"], "Cloud Data"],
								["doIf",
									["&",
										["not", ["=", ["readVariable", "☁ GameData"], ["readVariable", "Game Revision"]]],
										["not", ["=", ["getUserName"], "griffpatch"]]],
									[["broadcast:", "Game Revision Out of Date"]]]],
							[["doRepeat", 8, [["append:toList:", "", "Cloud Data"]]]]]]],
				[910.15,
					1471.8,
					[["procDef", "Process Cloud Data %b", ["check self?"], [false], false],
						["call", "Read Cloud Data"],
						["setVar:to:", "Last Count", ["readVariable", "@Player Count"]],
						["setVar:to:", "i", "1"],
						["setVar:to:", "@Player Count", 0],
						["doUntil",
							[">", ["readVariable", "i"], ["readVariable", "@Max Players"]],
							[["setVar:to:", "Send OK", 0],
								["setVar:to:",
									"changed?",
									["getLine:ofList:", ["+", ["*", ["readVariable", "i"], ["readVariable", "PMUL"]], 2], "Player Data"]],
								["setVar:to:", "i3", ["getLine:ofList:", ["readVariable", "i"], "Cloud Data"]],
								["doIfElse",
									["|",
										["<", ["stringLength:", ["readVariable", "i3"]], "2"],
										["&",
											["=", ["stringLength:", ["readVariable", "i3"]], ["stringLength:", ["readVariable", "changed?"]]],
											["=", ["letter:of:", 2, ["readVariable", "i3"]], ["letter:of:", 2, ["readVariable", "changed?"]]]]],
									[["doIf",
											["not", ["=", ["getLine:ofList:", ["readVariable", "i"], "@PlayerNames"], ""]],
											[["doIfElse",
													["|",
														["<",
															["-", ["timer"], ["readVariable", "TIME_OUT"]],
															["getLine:ofList:", ["+", ["*", ["readVariable", "i"], ["readVariable", "PMUL"]], 3], "Player Data"]],
														["=", ["readVariable", "@Player ID"], ["readVariable", "i"]]],
													[["changeVar:by:", "@Player Count", 1]],
													[["call", "Console Out %n %b %s", ["readVariable", "i"], false, "has left the game."],
														["setLine:ofList:to:", ["readVariable", "i"], "@PlayerNames", ""],
														["setLine:ofList:to:", ["+", ["readVariable", "i"], 50], "@PlayerNames", ""],
														["doIf",
															["=", ["readVariable", "@Master ID"], ["readVariable", "i"]],
															[["setVar:to:", "@Master ID", ["readVariable", "@Player ID"]],
																["setVar:to:", "Master Time", ["+", ["timer"], 5]],
																["broadcast:", "MASTER"]]],
														["setVar:to:", "Debug", "Timeout!!!"]]]]]],
									[["setLine:ofList:to:",
											["readVariable", "i"],
											"_change",
											["+", ["getLine:ofList:", ["readVariable", "i"], "_change"], 1]],
										["call", "Init Reader %s", ["readVariable", "i3"]],
										["call", "Read Number"],
										["call", "Read Number"],
										["doIfElse",
											[">", ["readVariable", "?Val"], "0"],
											[["changeVar:by:", "@Player Count", 1],
												["doIf",
													["=", ["readVariable", "?Val"], "2"],
													[["setVar:to:", "@Master ID", ["readVariable", "i"]],
														["doIfElse",
															["=", ["readVariable", "@Master ID"], ["readVariable", "@Player ID"]],
															[["broadcast:", "MASTER"]],
															[["setVar:to:",
																	"Master Time",
																	["+", ["timer"], ["+", 20, ["*", ["readVariable", "@Player ID"], 4]]]]]]]],
												["call", "Read String"],
												["doIf",
													["not", ["=", ["readVariable", "?Val"], ""]],
													[["doIf",
															["not", ["=", ["readVariable", "?Val"], ["getLine:ofList:", ["readVariable", "i"], "@PlayerNames"]]],
															[["doIfElse",
																	["&",
																		["=", ["readVariable", "@Master ID"], ["readVariable", "@Player ID"]],
																		["not", ["=", ["getLine:ofList:", ["readVariable", "i"], "@PlayerNames"], ""]]],
																	[["append:toList:", "0", "@Place"],
																		["append:toList:", ["concatenate:with:", "k", ["readVariable", "?Val"]], "@Place"],
																		["setVar:to:", "?Val", ""]],
																	[["setLine:ofList:to:", ["readVariable", "i"], "@PlayerNames", ["readVariable", "?Val"]],
																		["call", "Console Out %n %b %s", ["readVariable", "i"], false, "has joined the game."]]]]],
														["setLine:ofList:to:",
															["+", ["*", ["readVariable", "i"], ["readVariable", "PMUL"]], 2],
															"Player Data",
															["readVariable", "parseStr"]],
														["setLine:ofList:to:",
															["+", ["*", ["readVariable", "i"], ["readVariable", "PMUL"]], 3],
															"Player Data",
															["timer"]]]],
												["doIf",
													["not", ["=", ["readVariable", "?Val"], ""]],
													[["call", "Read Number"],
														["setLine:ofList:to:", ["+", ["readVariable", "i"], 40], "@PlayerNames", ["readVariable", "?Val"]],
														["doIfElse",
															["=", ["readVariable", "@Player ID"], ["readVariable", "i"]],
															[["call", "Read Number"],
																["call", "Read Number"],
																["call", "Read Data Block"],
																["setLine:ofList:to:",
																	["+", ["*", ["readVariable", "i"], ["readVariable", "PMUL"]], 6],
																	"Player Data",
																	["readVariable", "?Val"]]],
															[["call", "Read Number"],
																["setLine:ofList:to:", ["+", ["readVariable", "i"], 50], "@PlayerNames", ["readVariable", "?Val"]],
																["call", "Read Number"],
																["setLine:ofList:to:", ["+", ["readVariable", "i"], 60], "@PlayerNames", ["readVariable", "?Val"]],
																["call", "Read Data Block"],
																["setLine:ofList:to:",
																	["+", ["*", ["readVariable", "i"], ["readVariable", "PMUL"]], 6],
																	"Player Data",
																	["readVariable", "?Val"]],
																["call",
																	"Read Builders Block List %n %n",
																	["readVariable", "i"],
																	["getLine:ofList:", ["+", ["*", ["readVariable", "i"], ["readVariable", "PMUL"]], 7], "Player Data"]]]]]]],
											[["call", "Read String"],
												["doIf",
													["&",
														["=", ["readVariable", "@Master ID"], ["readVariable", "@Player ID"]],
														[">", ["timer"], ["readVariable", "Master Time"]]],
													[["doIf",
															["not", ["=", ["readVariable", "?Val"], ["getUserName"]]],
															[["call", "Process Join Request %s", ["readVariable", "?Val"]]]]]],
												["setLine:ofList:to:",
													["+", ["*", ["readVariable", "i"], ["readVariable", "PMUL"]], 2],
													"Player Data",
													["readVariable", "parseStr"]],
												["setLine:ofList:to:",
													["+", ["*", ["readVariable", "i"], ["readVariable", "PMUL"]], 3],
													"Player Data",
													["timer"]]]]]],
								["changeVar:by:", "i", 1]]],
						["doIfElse",
							["=", ["readVariable", "@Master ID"], ["readVariable", "@Player ID"]],
							null,
							[["doIf",
									[">", ["timer"], ["readVariable", "Master Time"]],
									[["doIf",
											[">", ["readVariable", "@Player ID"], "0"],
											[["setVar:to:", "@Master ID", ["readVariable", "@Player ID"]],
												["setVar:to:", "Master Time", ["+", ["timer"], 5]],
												["setVar:to:", "Debug", "Timeout!!!"],
												["broadcast:", "MASTER"]]]]]]]]],
				[29,
					19,
					[["whenIReceive", "Clone Sprites"],
						["gotoX:y:", 0, 0],
						["lookLike:", "join: Cloning"],
						["filterReset"],
						["comeToFront"],
						["show"],
						["setVar:to:", "PMUL", "7"],
						["setVar:to:", "TIME_OUT", "25"],
						["setVar:to:", "@Max Players", "8"],
						["setVar:to:", "tickTock", 0],
						["setVar:to:", "Last Count", 0],
						["setVar:to:", "Broadcast_Stream", ""],
						["setVar:to:", "tick_frames", 0],
						["setVar:to:", "autosave", ["+", ["timer"], 30]],
						["setVar:to:", "Master Time", ["+", ["timer"], 30]],
						["setVar:to:", "Last Respawn", 0],
						["deleteLine:ofList:", "all", "_Broadcast"],
						["deleteLine:ofList:", "all", "Player Data"],
						["deleteLine:ofList:", "all", "@PlayerNames"],
						["deleteLine:ofList:", "all", "@PlayerData"],
						["deleteLine:ofList:", "all", "_Console"],
						["hideVariable:", "Master Time"],
						["setVar:to:", "_Tick", "1"],
						["setVar:to:", "LagDetect", 0],
						["setVar:to:", "tickSend", 0],
						["setVar:to:", "show console", 0],
						["doIfElse",
							["=", ["readVariable", "@Offline"], "0"],
							[["showVariable:", "@Player Count"]],
							[["hideVariable:", "@Player Count"]]],
						["hideList:", "_Console"]]],
				[358,
					10,
					[["whenIReceive", "respawn"], ["setVar:to:", "autosave", ["+", ["timer"], 5]]]],
				[3328.9,
					5793,
					[["procDef", "Add Liquid %n", ["idx"], [1], true],
						["doIfElse",
							["list:contains:", "NextLiquid", ["getParam", "idx", "r"]],
							null,
							[["append:toList:", ["getParam", "idx", "r"], "NextLiquid"]]]]],
				[2856.3,
					779.1,
					[["whenIReceive", "Setup Level Data"],
						["doIf",
							["=", ["readVariable", "@Offline"], "0"],
							[["setVar:to:", "Snapshot ID", "-1"],
								["setVar:to:", "Read Snapshot ID", "-1"],
								["call", "read snapshot %s %n", ["readVariable", "parseStr"], ["readVariable", "parseIdx"]]]]]],
				[691,
					18,
					[["whenIReceive", "Hide All"],
						["hideVariable:", "@Max Players"],
						["hideVariable:", "@Master ID"],
						["hideVariable:", "@Player ID"],
						["hideVariable:", "@Player Count"],
						["hideList:", "_Console"],
						["hide"]]],
				[3419.85,
					735.5,
					[["procDef", "Write Block Build Command List", [], [], true],
						["doUntil",
							["=", ["getLine:ofList:", 1, "@Place"], "-1"],
							[["deleteLine:ofList:", 1, "@Place"], ["deleteLine:ofList:", 1, "@Place"]]],
						["deleteLine:ofList:", 1, "@Place"],
						["deleteLine:ofList:", 1, "@Place"],
						["call", "Write Number %n", ["\/", ["-", ["lineCountOfList:", "@Place"], 8], 2]],
						["setVar:to:", "ssc", ["readVariable", "tickSend"]],
						["setVar:to:", "i", "-1"],
						["doRepeat",
							["\/", ["lineCountOfList:", "@Place"], 2],
							[["changeVar:by:", "i", 2],
								["setVar:to:", "i3", ["getLine:ofList:", ["readVariable", "i"], "@Place"]],
								["doIfElse",
									[">", ["readVariable", "i3"], "-1"],
									[["call", "Write Number %n", ["readVariable", "ssc"]],
										["call", "Write Number %n", ["readVariable", "i3"]],
										["doIfElse",
											["=", ["readVariable", "i3"], "0"],
											[["call", "Write String %s", ["getLine:ofList:", ["+", ["readVariable", "i"], 1], "@Place"]]],
											[["call", "Write Number %n", ["getLine:ofList:", ["+", ["readVariable", "i"], 1], "@Place"]]]]],
									[["changeVar:by:", "ssc", 1]]]]],
						["append:toList:", "-1", "@Place"],
						["append:toList:", "-1", "@Place"]]],
				[2285.45,
					714.15,
					[["whenIReceive", "@Player Join Requested"],
						["call", "snapshot %b", false],
						["append:toList:", "0", "@Place"],
						["append:toList:",
							["concatenate:with:",
								"1",
								["concatenate:with:",
									["readVariable", "Snapshot ID"],
									["concatenate:with:", " ", ["rounded", ["+", ["timer"], ["readVariable", "Time of Day"]]]]]],
							"@Place"]]],
				[2286.45,
					850.15,
					[["whenIReceive", "FORCE SAVE"],
						["call", "snapshot %b", false],
						["append:toList:", "0", "@Place"],
						["append:toList:",
							["concatenate:with:",
								"3",
								["concatenate:with:",
									["readVariable", "Snapshot ID"],
									["concatenate:with:", " ", ["rounded", ["+", ["timer"], ["readVariable", "Time of Day"]]]]]],
							"@Place"]]],
				[2288,
					981,
					[["whenIReceive", "Force New Level"],
						["setVar:to:", "Time of Day", ["*", 7, 60]],
						["setVar:to:", "Time of Day", ["-", ["readVariable", "Time of Day"], ["timer"]]],
						["setVar:to:", "Snapshot ID", ["+", ["readVariable", "Snapshot ID"], 100]],
						["call", "snapshot %b", ["not", false]],
						["append:toList:", "0", "@Place"],
						["append:toList:", "2", "@Place"],
						["call", "Process Land Ownerships"]]],
				[2288,
					1206,
					[["procDef", "snapshot %b", ["forceNew?"], [false], true],
						["doIf",
							["=", ["readVariable", "@Offline"], "0"],
							[["doIf",
									["not", ["getParam", "forceNew?", "b"]],
									[["doIf",
											[">", ["stringLength:", ["readVariable", "☁ Snapshot"]], "10"],
											[["call", "Init Reader %s", ["readVariable", "☁ Snapshot"]],
												["call", "Read Number"],
												["doIf",
													["not", ["=", ["readVariable", "?Val"], ["readVariable", "Snapshot ID"]]],
													[["doIf",
															[">", ["readVariable", "?Val"], ["+", ["readVariable", "Snapshot ID"], 3]],
															[["call", "read snapshot %s %n", ["readVariable", "parseStr"], ["readVariable", "parseIdx"]]]]]]]]]],
								["deleteLine:ofList:", "all", "big"],
								["changeVar:by:", "Snapshot ID", 1],
								["call", "Write Number to Big %n", ["readVariable", "Snapshot ID"]],
								["call", "snapshot - push level to big"],
								["setVar:to:", "☁ Snapshot", ["contentsOfList:", "big"]],
								["deleteLine:ofList:", "all", "big"]]]]],
				[2291.95,
					1744.3,
					[["procDef", "snapshot - push level to big", [], [], true],
						["call", "Write Number to Big %n", ["readVariable", "MAP_WIDTH"]],
						["call", "Write Number to Big %n", ["readVariable", "MAP_HEIGHT"]],
						["setVar:to:", "i", "1"],
						["setVar:to:", "i3", ["getLine:ofList:", "1", "_Level"]],
						["setVar:to:", "count2", "1"],
						["doRepeat",
							["-", ["lineCountOfList:", "_Level"], 1],
							[["changeVar:by:", "i", 1],
								["doIfElse",
									["=", ["readVariable", "i3"], ["getLine:ofList:", ["readVariable", "i"], "_Level"]],
									[["changeVar:by:", "count2", 1]],
									[["call", "Write Number to Big %n", ["readVariable", "i3"]],
										["call", "Write Number to Big %n", ["readVariable", "count2"]],
										["setVar:to:", "i3", ["getLine:ofList:", ["readVariable", "i"], "_Level"]],
										["setVar:to:", "count2", "1"]]]]],
						["call", "Write Number to Big %n", ["readVariable", "i3"]],
						["call", "Write Number to Big %n", ["readVariable", "count2"]],
						["setVar:to:", "i", "1"],
						["doUntil",
							[">", ["readVariable", "i"], ["lineCountOfList:", "_LData"]],
							[["setVar:to:", "count2", ["getLine:ofList:", ["+", ["readVariable", "i"], 1], "_LData"]],
								["doIfElse",
									[">", ["getLine:ofList:", ["readVariable", "i"], "_LData"], "0"],
									[["call", "Write Number to Big %n", ["getLine:ofList:", ["readVariable", "i"], "_LData"]],
										["call", "Write Number to Big %n", ["readVariable", "count2"]],
										["call", "Write String to Big %s", ["getLine:ofList:", ["+", ["readVariable", "i"], 2], "_LData"]],
										["call", "Write String to Big %s", ["getLine:ofList:", ["+", ["readVariable", "i"], 3], "_LData"]],
										["changeVar:by:", "i", 4],
										["doRepeat",
											["-", ["readVariable", "count2"], 4],
											[["call", "Write Number to Big %n", ["getLine:ofList:", ["readVariable", "i"], "_LData"]], ["changeVar:by:", "i", 1]]]],
									[["changeVar:by:", "i", ["readVariable", "count2"]]]]]],
						["call", "Write Number to Big %n", 0],
						["call", "Write Number to Big %n", ["rounded", ["+", ["timer"], ["readVariable", "Time of Day"]]]]]],
				[2855.65,
					950.3,
					[["procDef", "read snapshot %s %n", ["prev_reader", "prev_index"], ["", 1], false],
						["doIf",
							["&",
								["=", ["readVariable", "@Offline"], "0"],
								["&", [">", ["readVariable", "@Player ID"], "-1"], [">", ["readVariable", "Snapshot ID"], "-2"]]],
							[["doIf",
									[">", ["stringLength:", ["readVariable", "☁ Snapshot"]], "10"],
									[["call", "Init Reader %s", ["readVariable", "☁ Snapshot"]],
										["call", "Read Number"],
										["doIf",
											["not", ["=", ["readVariable", "?Val"], ["readVariable", "Snapshot ID"]]],
											[["doIfElse",
													["<", ["readVariable", "?Val"], ["readVariable", "Read Snapshot ID"]],
													null,
													[["setVar:to:", "Snapshot ID", ["readVariable", "?Val"]],
														["setVar:to:", "Read Snapshot ID", ["readVariable", "?Val"]],
														["doBroadcastAndWait", "Msg - Loading Level"],
														["call", "parse snapshot"],
														["doBroadcastAndWait", "LightingAll"]]]]],
										["call", "Process Land Ownerships"],
										["doBroadcastAndWait", "Level Ready to Play"],
										["setVar:to:", "Master Time", ["+", ["timer"], ["randomFrom:to:", 20.5, 30]]]]],
								["setVar:to:", "parseStr", ["getParam", "prev_reader", "r"]],
								["setVar:to:", "parseIdx", ["getParam", "prev_index", "r"]]]]]],
				[2520.65,
					1136.3,
					[["doIf", ["not", ["<", ["readVariable", "?Val"], ["readVariable", "Read Snapshot ID"]]], null]]],
				[4098.55,
					52,
					[["procDef", "Add Light at %n amount %n", ["index", "brightness"], [1, 1], true],
						["append:toList:", ["*", ["getParam", "index", "r"], 2], "LightMod"],
						["append:toList:", ["-", ["*", ["getParam", "index", "r"], 2], 1], "LightMod"]]],
				[4098.45,
					582,
					[["whenIReceive", "List Players"],
						["doIfElse",
							["=", ["readVariable", "show console"], "0"],
							[["setVar:to:", "show console", "1"], ["comeToFront"], ["showList:", "_Console"]],
							null],
						["setVar:to:", "i3", "1"],
						["call", "Console Out %n %b %s", 0, false, "--- Players ---"],
						["doRepeat",
							["readVariable", "@Max Players"],
							[["doIf",
									["not", ["=", ["getLine:ofList:", ["readVariable", "i3"], "@PlayerNames"], ""]],
									[["call",
											"Console Out %n %b %s",
											["readVariable", "i3"],
											false,
											["concatenate:with:",
												" @",
												["concatenate:with:",
													["rounded", ["getLine:ofList:", ["+", ["readVariable", "i3"], 10], "@PlayerNames"]],
													["concatenate:with:", ",", ["rounded", ["getLine:ofList:", ["+", ["readVariable", "i3"], 20], "@PlayerNames"]]]]]]]],
								["changeVar:by:", "i3", 1]]],
						["call", "Console Out %n %b %s", 0, false, "Press [C] to close."]]],
				[4096.65,
					238,
					[["whenKeyPressed", "c"],
						["doIfElse",
							["=", ["readVariable", "show console"], "0"],
							[["setVar:to:", "show console", "1"],
								["comeToFront"],
								["showList:", "_Console"],
								["setVar:to:", "i3", ["getLine:ofList:", "last", "_Console"]]],
							[["setVar:to:", "show console", "0"],
								["hideList:", "_Console"],
								["doIf", ["=", ["getLine:ofList:", "last", "_Console"], "Press [C] to close."], [["deleteLine:ofList:", "last", "_Console"]]]]]]],
				[913.05,
					4283.5,
					[["whenIReceive", "animate"],
						["doIf",
							["&", ["=", ["readVariable", "@Offline"], "0"], [">", ["readVariable", "@Player ID"], "0"]],
							[["doIfElse",
									["=", ["readVariable", "@Master ID"], ["readVariable", "@Player ID"]],
									[["doIfElse",
											["=", ["readVariable", "@Player Count"], "1"],
											[["doIf",
													["not", ["=", ["costumeIndex"], "111"]],
													[["lookLike:", "Master - just you"], ["show"]]]],
											[["doIf",
													["not", ["=", ["costumeIndex"], "110"]],
													[["lookLike:", "Master"], ["show"]]]]]],
									[["setVar:to:", "Master Time", ["+", ["timer"], ["randomFrom:to:", 20.5, 30]]],
										["doIf",
											[">", ["readVariable", "@Player ID"], "0"],
											[["doIf",
													["not", ["=", ["costumeIndex"], "109"]],
													[["lookLike:", "Blank"], ["hide"]]]]]]]]]]],
				[1490.15,
					4330.8,
					[["doIf",
							["not", ["=", ["costumeIndex"], "111"]],
							[["lookLike:", "Master2"], ["filterReset"], ["show"]]]]],
				[3106.65,
					1552.3,
					[["doAsk",
							["concatenate:with:", "Snapshot from:", ["concatenate:with:", ["readVariable", "Snapshot ID"], ["concatenate:with:", " to ", ["readVariable", "?Val"]]]]]]],
				[2864.9,
					1578.85,
					[["procDef", "parse snapshot", [], [], true],
						["setVar:to:", "Snapshot ID", ["readVariable", "?Val"]],
						["call", "Read Number"],
						["setVar:to:", "MAP_WIDTH", ["readVariable", "?Val"]],
						["setVar:to:", "MAP_WIDTH_NEG", ["-", 0, ["readVariable", "?Val"]]],
						["call", "Read Number"],
						["setVar:to:", "MAP_HEIGHT", ["readVariable", "?Val"]],
						["setVar:to:", "tmp", "1"],
						["call", "Resize Level"],
						["doUntil",
							[">", ["readVariable", "tmp"], ["lineCountOfList:", "_Level"]],
							[["call", "Read Number"],
								["setVar:to:", "ssc", ["readVariable", "?Val"]],
								["call", "Read Number"],
								["doRepeat",
									["readVariable", "?Val"],
									[["setLine:ofList:to:", ["readVariable", "tmp"], "_Level", ["readVariable", "ssc"]], ["changeVar:by:", "tmp", 1]]]]],
						["deleteLine:ofList:", "all", "_LData"],
						["call", "Read Number"],
						["doUntil",
							["|", ["=", ["readVariable", "?Val"], "0"], ["=", ["readVariable", "?Val"], ""]],
							[["append:toList:", ["readVariable", "?Val"], "_LData"],
								["call", "Read Number"],
								["setVar:to:", "count2", ["readVariable", "?Val"]],
								["append:toList:", ["readVariable", "count2"], "_LData"],
								["call", "Read String"],
								["append:toList:", ["readVariable", "?Val"], "_LData"],
								["call", "Read String"],
								["append:toList:", ["readVariable", "?Val"], "_LData"],
								["doRepeat",
									["-", ["readVariable", "count2"], 4],
									[["call", "Read Number"], ["append:toList:", ["readVariable", "?Val"], "_LData"]]],
								["call", "Read Number"]]],
						["call", "Read Number"],
						["doIfElse",
							[">", ["readVariable", "?Val"], "0"],
							[["setVar:to:", "Time of Day", ["-", ["readVariable", "?Val"], ["timer"]]]],
							[["setVar:to:", "Time of Day", ["-", ["*", 7, 60], ["timer"]]]]],
						["setVar:to:", "count2", "1"],
						["doRepeat",
							["\/", ["lineCountOfList:", "_Mob"], 2],
							[["setLine:ofList:to:", ["readVariable", "count2"], "_Mob", "0"],
								["changeVar:by:", "count2", 1],
								["setLine:ofList:to:", ["readVariable", "count2"], "_Mob", ""],
								["changeVar:by:", "count2", 1]]],
						["call", "Refresh My Changes"]]],
				[2854.9,
					2868.6,
					[["procDef", "Refresh My Changes", [], [], true],
						["setVar:to:", "i3", "1"],
						["doRepeat",
							["\/", ["lineCountOfList:", "@Place"], 2],
							[["setVar:to:", "?Val", ["getLine:ofList:", ["readVariable", "i"], "@Place"]],
								["doIf",
									[">", ["readVariable", "?Val"], "0"],
									[["setLine:ofList:to:",
											["readVariable", "?Val"],
											"_Level",
											["getLine:ofList:", ["+", ["readVariable", "i"], 1], "@Place"]]]],
								["changeVar:by:", "i3", 2]]]]],
				[2855.1,
					3195,
					[["procDef", "Resize Level", [], [], true],
						["doIfElse",
							["<", ["lineCountOfList:", "_Level"], ["*", ["readVariable", "MAP_WIDTH"], ["readVariable", "MAP_HEIGHT"]]],
							[["doRepeat",
									["-", ["*", ["readVariable", "MAP_WIDTH"], ["readVariable", "MAP_HEIGHT"]], ["lineCountOfList:", "_Level"]],
									[["append:toList:", "0", "_Level"]]]],
							[["doRepeat",
									["-", ["lineCountOfList:", "_Level"], ["*", ["readVariable", "MAP_WIDTH"], ["readVariable", "MAP_HEIGHT"]]],
									[["deleteLine:ofList:", "last", "_Level"]]]]]]],
				[3184.65, 1104.3, [["computeFunction:of:", "abs", ["-", 10, ["readVariable", "Snapshot ID"]]]]],
				[3177.65,
					1158.3,
					[["doIf", [">", ["readVariable", "?Val"], ["readVariable", "Snapshot ID"]], null]]],
				[1649.55,
					1319.75,
					[["procDef", "Read Player Data Tick", [], [], true],
						["deleteLine:ofList:", "all", "@PlayerData"],
						["deleteLine:ofList:", "all", "@PlayerOffset"],
						["setVar:to:", "i", "1"],
						["doRepeat",
							["readVariable", "@Max Players"],
							[["append:toList:", ["+", ["lineCountOfList:", "@PlayerData"], 1], "@PlayerOffset"],
								["doRepeat",
									["readVariable", "_Tick"],
									[["doIfElse",
											["|",
												["=", ["readVariable", "i"], ["readVariable", "@Player ID"]],
												["=", ["getLine:ofList:", ["readVariable", "i"], "@PlayerNames"], ""]],
											[["append:toList:", "0", "@PlayerData"]],
											[["call",
													"Init Reader %s",
													["getLine:ofList:", ["+", ["*", ["readVariable", "i"], ["readVariable", "PMUL"]], 5], "Player Data"]],
												["setVar:to:",
													"parseIdx",
													["getLine:ofList:", ["+", ["*", ["readVariable", "i"], ["readVariable", "PMUL"]], 4], "Player Data"]],
												["doIf",
													["not", ["<", ["readVariable", "parseIdx"], ["stringLength:", ["readVariable", "parseStr"]]]],
													[["call",
															"Init Reader %s",
															["getLine:ofList:", ["+", ["*", ["readVariable", "i"], ["readVariable", "PMUL"]], 6], "Player Data"]],
														["doIf",
															["not", ["=", ["readVariable", "parseStr"], ""]],
															[["setLine:ofList:to:",
																	["+", ["*", ["readVariable", "i"], ["readVariable", "PMUL"]], 4],
																	"Player Data",
																	"1"],
																["setLine:ofList:to:",
																	["+", ["*", ["readVariable", "i"], ["readVariable", "PMUL"]], 5],
																	"Player Data",
																	["readVariable", "parseStr"]],
																["setLine:ofList:to:",
																	["+", ["*", ["readVariable", "i"], ["readVariable", "PMUL"]], 6],
																	"Player Data",
																	""]]]]],
												["doIfElse",
													["<", ["readVariable", "parseIdx"], ["stringLength:", ["readVariable", "parseStr"]]],
													[["call", "Read Number"],
														["append:toList:", ["readVariable", "?Val"], "@PlayerData"],
														["doRepeat",
															["readVariable", "?Val"],
															[["call", "Read Number"], ["append:toList:", ["readVariable", "?Val"], "@PlayerData"]]],
														["setLine:ofList:to:",
															["+", ["*", ["readVariable", "i"], ["readVariable", "PMUL"]], 4],
															"Player Data",
															["readVariable", "parseIdx"]]],
													[["append:toList:", "0", "@PlayerData"]]]]]]],
								["changeVar:by:", "i", 1]]],
						["append:toList:", ["+", ["lineCountOfList:", "@PlayerData"], 1], "@PlayerOffset"]]],
				[1500.05,
					5320.5,
					[["doIf",
							[">", ["timer"], ["readVariable", "Master Time"]],
							[["doIf",
									[">", ["readVariable", "@Player ID"], "0"],
									[["setVar:to:", "@Master ID", ["readVariable", "@Player ID"]],
										["setVar:to:", "Master Time", ["+", ["timer"], 5]],
										["doIf",
											["not", ["=", ["costumeIndex"], "111"]],
											[["lookLike:", "Master2"], ["filterReset"], ["show"]]],
										["setVar:to:", "Debug", "Timeout!!!"],
										["broadcast:", "MASTER"]]]]]]],
				[1804.95,
					1213.65,
					[["doIf",
							[">", ["readVariable", "Read Snapshot ID"], ["readVariable", "Snapshot ID"]],
							[["call", "read snapshot %s %n", ["readVariable", "parseStr"], ["readVariable", "parseIdx"]]]]]],
				[2853.3,
					613.05,
					[["whenIReceive", "REFRESH"],
						["doIf",
							["=", ["readVariable", "@Offline"], "0"],
							[["setVar:to:", "Snapshot ID", "-1"],
								["setVar:to:", "Read Snapshot ID", "-1"],
								["call", "read snapshot %s %n", ["readVariable", "parseStr"], ["readVariable", "parseIdx"]]]]]],
				[3792,
					2399.6,
					[["doIfElse",
							["|",
								["=", ["readVariable", "Snapshot ID"], "-1"],
								[">", ["readVariable", "char"], ["+", ["readVariable", "Snapshot ID"], 5]]],
							[["setVar:to:", "Read Snapshot ID", ["readVariable", "char"]],
								["call", "Next Token of ?Val"],
								["doIf",
									[">", ["readVariable", "char"], "0"],
									[["setVar:to:", "Time of Day", ["-", ["readVariable", "char"], ["timer"]]]]]],
							[["setVar:to:", "Snapshot ID", ["readVariable", "char"]]]]]],
				[655, 234.9, [["changeVar:by:", "Time of Day", 800]]],
				[353, 1007.05, [["setVar:to:", "@Player ID", "5"]]],
				[29,
					5373.8,
					[["procDef", "Write Number %n", ["val"], [1], true],
						["doIfElse",
							["=", ["getParam", "val", "r"], "1"],
							[["setVar:to:", "parseStr", ["concatenate:with:", ["readVariable", "parseStr"], "0"]]],
							[["doIfElse",
									["<", ["getParam", "val", "r"], "0"],
									[["setVar:to:", "?Val", ["rounded", ["+", ["getParam", "val", "r"], 16777215]]]],
									[["setVar:to:", "?Val", ["rounded", ["getParam", "val", "r"]]]]],
								["setVar:to:",
									"parseStr",
									["concatenate:with:",
										["readVariable", "parseStr"],
										["concatenate:with:", ["stringLength:", ["readVariable", "?Val"]], ["readVariable", "?Val"]]]]]]]],
				[26,
					5774.05,
					[["procDef", "Read Number", [], [], true],
						["setVar:to:", "?Val", ""],
						["doRepeat",
							["letter:of:", ["readVariable", "parseIdx"], ["readVariable", "parseStr"]],
							[["changeVar:by:", "parseIdx", 1],
								["setVar:to:",
									"?Val",
									["concatenate:with:", ["readVariable", "?Val"], ["letter:of:", ["readVariable", "parseIdx"], ["readVariable", "parseStr"]]]]]],
						["doIfElse",
							["=", ["readVariable", "?Val"], ""],
							[["setVar:to:", "?Val", "1"]],
							[["doIf",
									[">", ["readVariable", "?Val"], "8388608"],
									[["setVar:to:", "?Val", ["-", ["readVariable", "?Val"], 16777215]]]]]],
						["changeVar:by:", "parseIdx", 1]]],
				[508,
					5552,
					[["procDef", "Skip String", [], [], true],
						["call", "Read Number"],
						["changeVar:by:", "parseIdx", ["*", ["readVariable", "?Val"], 2]]]],
				[502,
					5240,
					[["procDef", "Write Data Block %s", ["data"], [""], true],
						["call", "Write Number %n", ["stringLength:", ["getParam", "data", "r"]]],
						["setVar:to:", "?Val", ""],
						["setVar:to:", "i2", "1"],
						["doRepeat",
							["stringLength:", ["getParam", "data", "r"]],
							[["setVar:to:",
									"?Val",
									["concatenate:with:", ["readVariable", "?Val"], ["letter:of:", ["readVariable", "i2"], ["getParam", "data", "r"]]]],
								["changeVar:by:", "i2", 1]]],
						["setVar:to:", "parseStr", ["concatenate:with:", ["readVariable", "parseStr"], ["readVariable", "?Val"]]]]],
				[505, 5837.6, [["setVar:to:", "_Chars", " !\"#$%&'()*+,-.\/0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~"]]],
				[28.85,
					4996.4,
					[["procDef", "Read Data Block", [], [], true],
						["call", "Read Number"],
						["doIfElse",
							[">",
								["+", ["readVariable", "parseIdx"], ["readVariable", "?Val"]],
								["+", ["stringLength:", ["readVariable", "parseStr"]], 1]],
							[["setVar:to:",
									"i3",
									["-", ["+", ["stringLength:", ["readVariable", "parseStr"]], 1], ["readVariable", "parseIdx"]]],
								["changeVar:by:", "Glitches", 1]],
							[["setVar:to:", "i3", ["readVariable", "?Val"]]]],
						["setVar:to:", "?Val", ""],
						["doRepeat",
							["readVariable", "i3"],
							[["setVar:to:",
									"?Val",
									["concatenate:with:", ["readVariable", "?Val"], ["letter:of:", ["readVariable", "parseIdx"], ["readVariable", "parseStr"]]]],
								["changeVar:by:", "parseIdx", 1]]]]],
				[29.6,
					781.4,
					[["procDef", "Allocate Gaming Slot %b", ["reconnect?"], [false], false],
						["doIfElse",
							["getParam", "reconnect?", "b"],
							[["lookLike:", "Re-connecting"]],
							[["lookLike:", "join: Search"], ["show"], ["comeToFront"], ["call", "Init Cloud Data"], ["wait:elapsed:from:", 2]]],
						["show"],
						["comeToFront"],
						["setVar:to:", "Debug", "Looking for Master..."],
						["setVar:to:", "count", "1"],
						["setVar:to:", "Snapshot ID", "-2"],
						["call", "Process Cloud Data %b", false],
						["doUntil",
							[">", ["readVariable", "count"], "8"],
							[["wait:elapsed:from:", 1.8],
								["call", "Process Cloud Data %b", false],
								["doIfElse",
									["&", ["=", ["readVariable", "@Player Count"], "0"], [">", ["readVariable", "count"], "4"]],
									[["setVar:to:", "count", "999"]],
									[["doIfElse",
											[">", ["readVariable", "@Master ID"], "0"],
											[["setVar:to:", "count", "999"]],
											[["changeVar:by:", "count", 1]]]]]]],
						["doIfElse",
							["=", ["readVariable", "@Master ID"], "0"],
							[["setVar:to:", "Debug", "No Master Found..."],
								["doIf",
									["=", ["readVariable", "@Player Count"], "0"],
									[["setVar:to:", "@Player ID", "1"],
										["setVar:to:", "@Master ID", "1"],
										["setVar:to:", "Master Time", 0],
										["call", "Assign Player %n %s %n", ["readVariable", "@Player ID"], ["getUserName"], 2]]]],
							[["lookLike:", "join: Request"],
								["comeToFront"],
								["setVar:to:", "Debug", "Master Found"],
								["setVar:to:", "count", "1"],
								["doUntil",
									["|", [">", ["readVariable", "count"], "3"], [">", ["readVariable", "@Player ID"], "0"]],
									[["wait:elapsed:from:", 1.1],
										["call", "Process Cloud Data %b", false],
										["deleteLine:ofList:", "all", "big"],
										["setVar:to:", "tryPlayerID", "1"],
										["doRepeat",
											["readVariable", "@Max Players"],
											[["setVar:to:", "tmp", ["getLine:ofList:", ["readVariable", "tryPlayerID"], "@PlayerNames"]],
												["doIf",
													["|",
														["=", ["readVariable", "tmp"], ""],
														["=", ["readVariable", "tmp"], ["getUserName"]]],
													[["append:toList:", ["readVariable", "tryPlayerID"], "big"]]],
												["changeVar:by:", "tryPlayerID", 1]]],
										["doUntil",
											["|",
												["=", ["lineCountOfList:", "big"], "0"],
												["not", ["=", ["readVariable", "@Player ID"], "0"]]],
											[["setVar:to:", "tmp", ["randomFrom:to:", 1, ["lineCountOfList:", "big"]]],
												["setVar:to:", "tryPlayerID", ["getLine:ofList:", ["readVariable", "tmp"], "big"]],
												["deleteLine:ofList:", ["readVariable", "tmp"], "big"],
												["setVar:to:", "tmp", ["getLine:ofList:", ["readVariable", "tryPlayerID"], "@PlayerNames"]],
												["doIf",
													["|",
														["=", ["readVariable", "tmp"], ""],
														["=", ["readVariable", "tmp"], ["getUserName"]]],
													[["wait:elapsed:from:", ["randomFrom:to:", 0.4, 0.6]],
														["doRepeat",
															5,
															[["doIf",
																	["=", ["readVariable", "@Player ID"], "0"],
																	[["setVar:to:", "tmp", ["getLine:ofList:", ["readVariable", "tryPlayerID"], "@PlayerNames"]],
																		["doIf",
																			["|",
																				["=", ["readVariable", "tmp"], ""],
																				["=", ["readVariable", "tmp"], ["getUserName"]]],
																			[["call", "Assign Player %n %s %n", ["readVariable", "tryPlayerID"], ["getUserName"], 0],
																				["wait:elapsed:from:", 1],
																				["doRepeat",
																					10,
																					[["doIf",
																							["=", ["readVariable", "@Player ID"], "0"],
																							[["wait:elapsed:from:", 0.2], ["call", "Process Cloud Data %b", false]]]]]]]]]]]]]]],
										["changeVar:by:", "count", 1]]]]],
						["doIfElse",
							[">", ["readVariable", "@Player ID"], "0"],
							[["doIfElse",
									["=", ["readVariable", "@Player ID"], ["readVariable", "@Master ID"]],
									[["lookLike:", "join: New Game"],
										["wait:elapsed:from:", 2],
										["setVar:to:", "Snapshot ID", "-1"],
										["doBroadcastAndWait", "Setup Level Data"],
										["call", "Process Land Ownerships"],
										["setVar:to:", "Time of Day", ["-", ["*", 7, 60], ["timer"]]],
										["append:toList:", ["concatenate:with:", ["getUserName"], " has started a new game."], "_Console"],
										["lookLike:", "Master"]],
									[["lookLike:", "join: Accepted"],
										["append:toList:", ["concatenate:with:", ["getUserName"], " has joined the game."], "_Console"],
										["setVar:to:", "Snapshot ID", "-1"],
										["setVar:to:", "Read Snapshot ID", "-1"],
										["doRepeat",
											100,
											[["doIf",
													["=", ["readVariable", "Snapshot ID"], "-1"],
													[["wait:elapsed:from:", 0.4], ["call", "Process Cloud Data %b", false]]]]],
										["hide"]]],
								["deleteLine:ofList:", "all", "@Place"],
								["append:toList:", "-1", "@Place"],
								["append:toList:", "-1", "@Place"],
								["append:toList:", "-1", "@Place"],
								["append:toList:", "-1", "@Place"],
								["append:toList:", "-1", "@Place"],
								["append:toList:", "-1", "@Place"],
								["append:toList:", "-1", "@Place"],
								["append:toList:", "-1", "@Place"],
								["append:toList:", "-1", "@Place"],
								["append:toList:", "-1", "@Place"],
								["doBroadcastAndWait", "@Connected"]],
							[["doIfElse",
									["=", ["readVariable", "@Player ID"], "-1"],
									[["lookLike:", "join: Deny"], ["doWaitUntil", ["keyPressed:", "space"]], ["hide"]],
									[["lookLike:", "join: Unable"], ["doWaitUntil", ["keyPressed:", "space"]], ["lookLike:", "Unable (Small)"]]],
								["setVar:to:", "@Player ID", "-0.5"],
								["setVar:to:", "Snapshot ID", "-1"],
								["doBroadcastAndWait", "Setup Level Data"],
								["call", "Process Land Ownerships"]]]]],
				[429.5,
					3152.8,
					[["procDef", "Assign Player %n %s %n", ["player id", "username", "is Master"], [1, "", 1], true],
						["setLine:ofList:to:", ["getParam", "player id", "r"], "@PlayerNames", ["getParam", "username", "r"]],
						["setLine:ofList:to:",
							["+", ["*", ["getParam", "player id", "r"], ["readVariable", "PMUL"]], 4],
							"Player Data",
							"1"],
						["setLine:ofList:to:",
							["+", ["*", ["getParam", "player id", "r"], ["readVariable", "PMUL"]], 3],
							"Player Data",
							["timer"]],
						["setLine:ofList:to:",
							["+", ["*", ["getParam", "player id", "r"], ["readVariable", "PMUL"]], 5],
							"Player Data",
							""],
						["setLine:ofList:to:",
							["+", ["*", ["getParam", "player id", "r"], ["readVariable", "PMUL"]], 6],
							"Player Data",
							""],
						["setLine:ofList:to:",
							["+", ["*", ["getParam", "player id", "r"], ["readVariable", "PMUL"]], 7],
							"Player Data",
							"0"],
						["call", "Send My Cloud Data %n %n", ["getParam", "player id", "r"], ["getParam", "is Master", "r"]],
						["doIf",
							["=", ["getParam", "is Master", "r"], "0"],
							[["setLine:ofList:to:", ["getParam", "player id", "r"], "@PlayerNames", ""],
								["setLine:ofList:to:", ["+", ["getParam", "player id", "r"], 50], "@PlayerNames", ""]]]]],
				[2748.8, 4316.8, [["doBroadcastAndWait", "@Player Join Requested"]]],
				[30.7,
					3799.6,
					[["procDef", "Send My Cloud Data %n %n", ["player id", "is master"], [1, 1], true],
						["call", "Init Reader %s", ""],
						["doIfElse",
							["=", ["getParam", "player id", "r"], ["readVariable", "@Player ID"]],
							[["changeVar:by:", "tickSend", 1], ["call", "Write Number %n", ["%", ["readVariable", "tickSend"], 10]]],
							[["call", "Write Number %n", ["randomFrom:to:", 0, 9]]]],
						["call", "Write Number %n", ["getParam", "is master", "r"]],
						["doIfElse",
							["=", ["getLine:ofList:", ["getParam", "player id", "r"], "@PlayerNames"], ["getUserName"]],
							[["setVar:to:", "parseStr", ["concatenate:with:", ["readVariable", "parseStr"], ["readVariable", "Encoded Name"]]]],
							[["call", "Write String %s", ["getLine:ofList:", ["getParam", "player id", "r"], "@PlayerNames"]]]],
						["doIfElse",
							[">", ["getAttribute:of:", "Mask", "Cursor"], "0"],
							[["call", "Write Number %n", ["getAttribute:of:", "Mask", "Cursor"]]],
							[["call", "Write Number %n", ["getAttribute:of:", "Profile_Hair", "Player"]]]],
						["call", "Write Number %n", ["getLine:ofList:", ["+", ["getParam", "player id", "r"], 50], "@PlayerNames"]],
						["call", "Write Number %n", ["getLine:ofList:", ["+", ["getParam", "player id", "r"], 60], "@PlayerNames"]],
						["doIfElse",
							["=", ["getParam", "player id", "r"], ["readVariable", "@Player ID"]],
							[["call", "Write Data Block %s", ["readVariable", "Broadcast_Stream"]], ["setVar:to:", "Broadcast_Stream", ""], ["call", "Write Block Build Command List"]],
							[["call", "Write Data Block %s", ""], ["call", "Write Number %n", 0]]],
						["doIf",
							["=", ["readVariable", "@Offline"], "0"],
							[["doIfElse",
									["=", ["getParam", "player id", "r"], "1"],
									[["setVar:to:", "☁ Player_1", ["readVariable", "parseStr"]]],
									[["doIfElse",
											["=", ["getParam", "player id", "r"], "2"],
											[["setVar:to:", "☁ Player_2", ["readVariable", "parseStr"]]],
											[["doIfElse",
													["=", ["getParam", "player id", "r"], "3"],
													[["setVar:to:", "☁ Player_3", ["readVariable", "parseStr"]]],
													[["doIfElse",
															["=", ["getParam", "player id", "r"], "4"],
															[["setVar:to:", "☁ Player_4", ["readVariable", "parseStr"]]],
															[["doIfElse",
																	["=", ["getParam", "player id", "r"], "5"],
																	[["setVar:to:", "☁ Player_5", ["readVariable", "parseStr"]]],
																	[["doIfElse",
																			["=", ["getParam", "player id", "r"], "6"],
																			[["setVar:to:", "☁ Player_6", ["readVariable", "parseStr"]]],
																			[["doIfElse",
																					["=", ["getParam", "player id", "r"], "7"],
																					[["setVar:to:", "☁ Player_7", ["readVariable", "parseStr"]]],
																					[["doIfElse",
																							["=", ["getParam", "player id", "r"], "8"],
																							[["setVar:to:", "☁ Player_8", ["readVariable", "parseStr"]]],
																							null]]]]]]]]]]]]]]]]],
						["setLine:ofList:to:",
							["+", ["*", ["getParam", "player id", "r"], ["readVariable", "PMUL"]], 2],
							"Player Data",
							["readVariable", "parseStr"]],
						["setLine:ofList:to:",
							["+", ["*", ["getParam", "player id", "r"], ["readVariable", "PMUL"]], 3],
							"Player Data",
							["timer"]]]],
				[1213.4, 1168.8, [["setVar:to:", "☁ GameData", "-1"]]],
				[1512.05,
					4575.5,
					[["doIf",
							["not", ["=", ["costumeIndex"], "111"]],
							[["lookLike:", "Master2"], ["show"]]]]],
				[969.05,
					4924.5,
					[["doIf",
							["|",
								["|", ["=", ["costumeIndex"], "192"], ["=", ["costumeIndex"], "96"]],
								["|", ["=", ["costumeIndex"], "98"], ["=", ["costumeIndex"], "108"]]],
							[["doIfElse",
									["<", ["readVariable", "@Player Count"], "2"],
									[["setVar:to:", "tmp", "96"]],
									[["setVar:to:", "tmp", "108"]]],
								["doIf",
									["not", ["=", ["readVariable", "tmp"], ["costumeIndex"]]],
									[["doIfElse",
											["=", ["readVariable", "tmp"], "108"],
											[["lookLike:", "Blank"], ["hide"]],
											[["lookLike:", "Empty Game"], ["show"], ["comeToFront"]]]]]]]]],
				[1564.05,
					4844.5,
					[["&", false, [">", ["timer"], ["getAttribute:of:", "reset timeout", "Setup Level"]]]]],
				[1171.05, 4476.5, [["broadcast:", "MASTER"]]],
				[1166.05, 4588.5, [["broadcast:", "MASTER"]]],
				[4201.45,
					4433,
					[["whenIReceive", "Log Chat"], ["call", "Console Out %n %b %s", 0, false, ["getAttribute:of:", "Filtered", "Safe Chat"]]]],
				[4203.75,
					4030,
					[["procDef", "Console Out %n %b %s", ["playerID", "say?", "text"], [1, false, ""], true],
						["doUntil", ["<", ["lineCountOfList:", "_Console"], "25"], [["deleteLine:ofList:", 1, "_Console"]]],
						["doIfElse",
							["=", ["getParam", "playerID", "r"], "0"],
							[["append:toList:", ["getParam", "text", "r"], "_Console"]],
							[["doIfElse",
									["getParam", "say?", "b"],
									[["append:toList:",
											["concatenate:with:",
												["getLine:ofList:", ["getParam", "playerID", "r"], "@PlayerNames"],
												["concatenate:with:", ": ", ["getParam", "text", "r"]]],
											"_Console"]],
									[["append:toList:",
											["concatenate:with:",
												["getLine:ofList:", ["getParam", "playerID", "r"], "@PlayerNames"],
												["concatenate:with:", " ", ["getParam", "text", "r"]]],
											"_Console"]]]]]]],
				[2304.8,
					3613.8,
					[["procDef", "Process Join Request %s", ["who"], [""], false],
						["setVar:to:", "tmp", "1"],
						["doUntil",
							["|",
								[">", ["readVariable", "tmp"], ["lineCountOfList:", "@PlayerNames"]],
								["=", ["getLine:ofList:", ["readVariable", "tmp"], "@PlayerNames"], ["getParam", "who", "r"]]],
							[["changeVar:by:", "tmp", 1]]],
						["doIf",
							[">", ["readVariable", "tmp"], ["lineCountOfList:", "@PlayerNames"]],
							[["setVar:to:", "tmp", "1"],
								["doUntil",
									["|",
										[">", ["readVariable", "tmp"], ["lineCountOfList:", "@PlayerNames"]],
										["=", ["getLine:ofList:", ["readVariable", "tmp"], "@PlayerNames"], ""]],
									[["changeVar:by:", "tmp", 1]]]]],
						["doIfElse",
							[">", ["readVariable", "tmp"], ["readVariable", "@Max Players"]],
							[["append:toList:", "0", "@Place"],
								["append:toList:", ["concatenate:with:", "J", ["concatenate:with:", ["getParam", "who", "r"], " N"]], "@Place"],
								["append:toList:", ["concatenate:with:", ["getParam", "who", "r"], " trying to join - but full..."], "_Console"]],
							[["append:toList:", "0", "@Place"],
								["append:toList:",
									["concatenate:with:",
										"J",
										["concatenate:with:", ["getParam", "who", "r"], ["concatenate:with:", " Y ", ["readVariable", "tmp"]]]],
									"@Place"],
								["setLine:ofList:to:", ["readVariable", "tmp"], "@PlayerNames", ["getParam", "who", "r"]],
								["setLine:ofList:to:",
									["+", ["*", ["readVariable", "tmp"], ["readVariable", "PMUL"]], 3],
									"Player Data",
									["timer"]],
								["setLine:ofList:to:",
									["+", ["*", ["readVariable", "tmp"], ["readVariable", "PMUL"]], 4],
									"Player Data",
									"1"],
								["setLine:ofList:to:",
									["+", ["*", ["readVariable", "tmp"], ["readVariable", "PMUL"]], 5],
									"Player Data",
									""],
								["setLine:ofList:to:",
									["+", ["*", ["readVariable", "tmp"], ["readVariable", "PMUL"]], 6],
									"Player Data",
									""],
								["setLine:ofList:to:",
									["+", ["*", ["readVariable", "tmp"], ["readVariable", "PMUL"]], 7],
									"Player Data",
									"0"],
								["call", "Console Out %n %b %s", ["readVariable", "tmp"], false, ["concatenate:with:", " joined as player ", ["readVariable", "tmp"]]],
								["setVar:to:", "autosave", ["+", ["timer"], 1.5]]]]]],
				[465,
					3615,
					[["procDef", "Init Reader %s", ["text"], [""], true],
						["setVar:to:", "parseStr", ["getParam", "text", "r"]],
						["setVar:to:", "parseIdx", "1"]]],
				[1612.15,
					2468.8,
					[["doIfElse",
							["=", ["readVariable", "@Player ID"], ["readVariable", "i"]],
							[["doIf",
									["&",
										[">", ["getUserName"], ["readVariable", "?Val"]],
										[">", ["readVariable", "?Val"], ""]],
									[["setVar:to:", "@Player ID", "-1"]]]],
							[["doIf", ["=", ["readVariable", "?Val"], ["getUserName"]], null]]]]],
				[1500.15, 3719.8, [["call", "Console Out %n %b %s", ["readVariable", "i"], false, "has left the game."]]],
				[691, 276.25, [["setVar:to:", "BufferTime", "1"]]],
				[493.6, 1789.4, [["wait:elapsed:from:", 0.6]]]],
			"scriptComments": [[3699.85, 792.5, 355, 49, false, 1394, "-1 is a seperater of 1 second batches of block placements"],
				[3489, 2038.6, 207, 85, false, 310, "Block Index (or 0 for command)"],
				[3903.95, 2153.6, 277, 270, true, 319, "cmd 1 = reload from snapshot.\rtodo: also, rerun own block placement history to resolve pre building issues?"],
				[1213, 782.45, 362, 102, true, 1048, "This is now used for storing the current location of each player too"],
				[3740, 3516.6, 185, 51, false, 422, "kill connection for player me"],
				[3644, 3866.6, 150, 200, false, 447, "Name a sign"],
				[2455.95, 2671.3, 150, 200, false, 1580, "LData End with 0"],
				[2967.9, 2054.85, 150, 200, false, 1776, "LData"],
				[3659, 4300.6, 177, 177, false, 478, "Update a chest (Inside)"],
				[2391.95, 2232.3, 207, 193, false, 1544, "LData too (signs), chests"],
				[3586.85, 1317.5, 189, 192, false, 1433, "Next Block of instructions"],
				[3681.9, 1671.6, 150, 200, false, 277, "Can't use 'i' !"],
				[3559, 2214.6, 150, 200, false, 331, "Force a refresh!"],
				[3660, 4348.6, 130, 45, false, 482, "sets char, uses i3"],
				[3698, 4372.6, 170, 179, false, 483, "Sets ssc to LData index"],
				[3675, 4881.6, 150, 200, false, 522, "Mob!"],
				[3554, 3033.6, 150, 200, false, 383, "Reset Request"],
				[3689, 4999.6, 150, 200, false, 529, "New JOIN response"],
				[1209.15, 2707.8, 150, 200, false, 1214, "k = disconnect -1"],
				[1310.15, 3002.8, 150, 200, false, 1240, "Hairstyle"],
				[2721.05, 5765.05, 282, 57, false, 893, "No land ownership for self? Need to give sign"],
				[1088.15, 3176.8, 150, 200, false, 1257, "Land Claim"],
				[1213, 862.95, 309, 296, true, 1051, "20 = Friendly Mob count\r21 = Aggressive Mob count\r22 = Projectile communications\r23 = Other players projectiles\r24 = Particle Commands (local)\r25 = tool x\r26 = tool y\r27 = game loop command (\"create new level\")\r28 = tool radius\r29 = pickup change\r30 = pickup obj typ\r31 = pickup count\r32 = pickup obj typ 2\r33 = pickup count 2\r"],
				[1088.15, 3228.8, 150, 200, false, 1262, "Active Tool"],
				[3704, 5091.6, 150, 200, false, 534, "Projectile"],
				[2598, 1331, 100, 71, false, 1484, "Latest?"],
				[4419.05, 3569.1, 180, 50, false, 679, "Force Load New Snapshot"],
				[3599, 2682.6, 204, 51, false, 365, "Assume this is incremental..."],
				[199.6, 3214.4, 214, 63, false, 2292, "Reset placement...\rPrevents mass batch placements!"],
				[3025.3, 675.05, 192, 154, false, 1994, "Just added this 13 Oct 15\rSet to -1"]],
			"sounds": [{
					"soundName": "meow",
					"soundID": 1,
					"md5": "83c36d806dc92327b9e7049a565c6bff.wav",
					"sampleCount": 18688,
					"rate": 22050,
					"format": ""
				}],
			"costumes": [{
					"costumeName": " ",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "!",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "\"",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "#",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "$",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "%",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "&",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "'",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "(",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": ")",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "*",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "+",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": ",",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "-",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": ".",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "\/",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "0",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "1",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "2",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "3",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "4",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "5",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "6",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "7",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "8",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "9",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": ":",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": ";",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "<",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "=",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": ">",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "?",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "@",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "A",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "B",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "C",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "D",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "E",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "F",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "G",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "H",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "I",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "J",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "K",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "L",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "M",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "N",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "O",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "P",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "Q",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "R",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "S",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "T",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "U",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "V",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "W",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "X",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "Y",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "Z",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "[",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "\\",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "]",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "^",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "_",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "`",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "a",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "b",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "c",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "d",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "e",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "f",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "g",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "h",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "i",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "j",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "k",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "l",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "m",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "n",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "o",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "p",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "q",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "r",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "s",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "t",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "u",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "v",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "w",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "x",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "y",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "z",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "{",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "|",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "}",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "~",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "Empty Game",
					"baseLayerID": 592,
					"baseLayerMD5": "e62a2a3e6ce3eda4477680350d03ad79.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 109,
					"rotationCenterY": -160
				},
				{
					"costumeName": "Scanning",
					"baseLayerID": 593,
					"baseLayerMD5": "745b6093045f694156e733d598d597e4.svg",
					"bitmapResolution": 1,
					"rotationCenterX": -59,
					"rotationCenterY": -153
				},
				{
					"costumeName": "New Game",
					"baseLayerID": 594,
					"baseLayerMD5": "23d377d5983e7cd30f9c068761ff67e1.svg",
					"bitmapResolution": 1,
					"rotationCenterX": -109,
					"rotationCenterY": -153
				},
				{
					"costumeName": "Unable",
					"baseLayerID": 595,
					"baseLayerMD5": "6564fe746e42268712edb06dc2475b10.svg",
					"bitmapResolution": 1,
					"rotationCenterX": -102,
					"rotationCenterY": -112
				},
				{
					"costumeName": "Unable (Small)",
					"baseLayerID": 595,
					"baseLayerMD5": "6564fe746e42268712edb06dc2475b10.svg",
					"bitmapResolution": 1,
					"rotationCenterX": -102,
					"rotationCenterY": -112
				},
				{
					"costumeName": "Requesting",
					"baseLayerID": 596,
					"baseLayerMD5": "76ed4e23518e2229d2f0d9b5e9ff6046.svg",
					"bitmapResolution": 1,
					"rotationCenterX": -80,
					"rotationCenterY": -152
				},
				{
					"costumeName": "Allocated",
					"baseLayerID": 597,
					"baseLayerMD5": "2a6d34d7e30f1e9889b1ef685f8ead12.svg",
					"bitmapResolution": 1,
					"rotationCenterX": -79,
					"rotationCenterY": -149
				},
				{
					"costumeName": "Full",
					"baseLayerID": 598,
					"baseLayerMD5": "7365a72124e3f73d6ca015e5ddaf1e94.svg",
					"bitmapResolution": 1,
					"rotationCenterX": -71,
					"rotationCenterY": -148
				},
				{
					"costumeName": "Re-connecting",
					"baseLayerID": 599,
					"baseLayerMD5": "eb64874fcadec7f80f80a27047dca226.svg",
					"bitmapResolution": 1,
					"rotationCenterX": -39,
					"rotationCenterY": -149
				},
				{
					"costumeName": "Out of Date",
					"baseLayerID": 600,
					"baseLayerMD5": "72ea2db29473e9cd291d89b96451b1e0.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 173,
					"rotationCenterY": 64
				},
				{
					"costumeName": "New Scratcher",
					"baseLayerID": 601,
					"baseLayerMD5": "9a769b578e64c888c453bdbe5e52f37f.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 173,
					"rotationCenterY": 92
				},
				{
					"costumeName": "Planned Down Time",
					"baseLayerID": 602,
					"baseLayerMD5": "53cdd87eaf7c208720946f56de1798dc.svg",
					"bitmapResolution": 1,
					"rotationCenterX": -99,
					"rotationCenterY": -112
				},
				{
					"costumeName": "Turbo",
					"baseLayerID": 603,
					"baseLayerMD5": "9bff9cc207b2a8982bda57f5f5b012f4.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 173,
					"rotationCenterY": 64
				},
				{
					"costumeName": "Blank",
					"baseLayerID": 591,
					"baseLayerMD5": "c27300871525a8e549661e40d8671d47.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "Master",
					"baseLayerID": 604,
					"baseLayerMD5": "3ff56568399c9600fc51de8fa8db636a.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 107,
					"rotationCenterY": -162
				},
				{
					"costumeName": "Master - just you",
					"baseLayerID": 605,
					"baseLayerMD5": "197f291f406d51d78f04f9f1dab5cb36.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 143,
					"rotationCenterY": -160
				},
				{
					"costumeName": "join: Search",
					"baseLayerID": 606,
					"baseLayerMD5": "7fe317f9144f84209f50aeb22145f09a.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "join: Request",
					"baseLayerID": 607,
					"baseLayerMD5": "1c3d033c1bd587b34a080f628cdc8ddf.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "join: Deny",
					"baseLayerID": 608,
					"baseLayerMD5": "a42d84ce9a31a66db0caa630b8a7fff9.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "join: Accepted",
					"baseLayerID": 609,
					"baseLayerMD5": "42f60e8cb23e76752710d63c2bf5bdd6.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "join: New Game",
					"baseLayerID": 610,
					"baseLayerMD5": "64c3148093ae42c353e5348c19f744d4.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "join: Unable",
					"baseLayerID": 611,
					"baseLayerMD5": "160c816edbcc9cca9c5055afe043d8bd.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				},
				{
					"costumeName": "join: Cloning",
					"baseLayerID": 612,
					"baseLayerMD5": "d3f98f9df1f3a0204ccae8fb182c22ff.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 240,
					"rotationCenterY": 180
				}],
			"currentCostumeIndex": 112,
			"scratchX": 0,
			"scratchY": 0,
			"scale": 1,
			"direction": 90,
			"rotationStyle": "none",
			"isDraggable": false,
			"indexInLibrary": 13,
			"visible": false,
			"spriteInfo": {
			}
		},
		{
			"objName": "Snapshot",
			"variables": [{
					"name": "last",
					"value": 0,
					"isPersistent": false
				},
				{
					"name": "i",
					"value": "",
					"isPersistent": false
				},
				{
					"name": "i3",
					"value": "0",
					"isPersistent": false
				},
				{
					"name": "count2",
					"value": 33,
					"isPersistent": false
				},
				{
					"name": "Time of Day",
					"value": 412.199,
					"isPersistent": false
				},
				{
					"name": "readIdx",
					"value": "2",
					"isPersistent": false
				},
				{
					"name": "?Val",
					"value": "",
					"isPersistent": false
				},
				{
					"name": "tmp",
					"value": 56001,
					"isPersistent": false
				},
				{
					"name": "ssc",
					"value": "0",
					"isPersistent": false
				}],
			"lists": [{
					"listName": "Save Game",
					"contents": [],
					"isPersistent": false,
					"x": 101,
					"y": 153,
					"width": 296,
					"height": 191,
					"visible": false
				}],
			"scripts": [[806.2,
					302.45,
					[["procDef", "register block %n", ["type"], [1], true],
						["doIf",
							[">", ["readVariable", "last"], "0"],
							[["setLine:ofList:to:", ["readVariable", "last"], "Save Game", ["+", ["lineCountOfList:", "Save Game"], 1]]]],
						["doIf",
							[">", ["getParam", "type", "r"], "0"],
							[["call", "Write String to Big %s", "#####"],
								["call", "Write Number to Big %n", ["getParam", "type", "r"]],
								["call", "Write Number to Big %n", 0],
								["setVar:to:", "last", ["lineCountOfList:", "Save Game"]]]]]],
				[805.35,
					171.4,
					[["procDef", "Write Number to Big %n", ["num"], [1], true],
						["append:toList:", ["getParam", "num", "r"], "Save Game"]]],
				[810.35,
					617.65,
					[["procDef", "snapshot - save level", [], [], true],
						["call", "register block %n", 100],
						["call", "Write Number to Big %n", ["readVariable", "MAP_WIDTH"]],
						["call", "Write Number to Big %n", ["readVariable", "MAP_HEIGHT"]],
						["setVar:to:", "i", "1"],
						["setVar:to:", "i3", ["getLine:ofList:", "1", "_Level"]],
						["setVar:to:", "count2", "1"],
						["doRepeat",
							["-", ["lineCountOfList:", "_Level"], 1],
							[["changeVar:by:", "i", 1],
								["doIfElse",
									["=", ["readVariable", "i3"], ["getLine:ofList:", ["readVariable", "i"], "_Level"]],
									[["changeVar:by:", "count2", 1]],
									[["call", "Write Number to Big %n", ["readVariable", "i3"]],
										["call", "Write Number to Big %n", ["readVariable", "count2"]],
										["setVar:to:", "i3", ["getLine:ofList:", ["readVariable", "i"], "_Level"]],
										["setVar:to:", "count2", "1"]]]]],
						["call", "Write Number to Big %n", ["readVariable", "i3"]],
						["call", "Write Number to Big %n", ["readVariable", "count2"]],
						["setVar:to:", "i", "1"],
						["doUntil",
							[">", ["readVariable", "i"], ["lineCountOfList:", "_LData"]],
							[["setVar:to:", "count2", ["getLine:ofList:", ["+", ["readVariable", "i"], 1], "_LData"]],
								["doIfElse",
									[">", ["getLine:ofList:", ["readVariable", "i"], "_LData"], "0"],
									[["call", "Write Number to Big %n", ["getLine:ofList:", ["readVariable", "i"], "_LData"]],
										["call", "Write Number to Big %n", ["readVariable", "count2"]],
										["call", "Write String to Big %s", ["getLine:ofList:", ["+", ["readVariable", "i"], 2], "_LData"]],
										["call", "Write String to Big %s", ["getLine:ofList:", ["+", ["readVariable", "i"], 3], "_LData"]],
										["changeVar:by:", "i", 4],
										["doRepeat",
											["-", ["readVariable", "count2"], 4],
											[["call", "Write Number to Big %n", ["getLine:ofList:", ["readVariable", "i"], "_LData"]], ["changeVar:by:", "i", 1]]]],
									[["changeVar:by:", "i", ["readVariable", "count2"]]]]]],
						["call", "Write Number to Big %n", 0],
						["call", "Write Number to Big %n", ["rounded", ["+", ["timer"], ["getAttribute:of:", "Time of Day", "Multiplayer"]]]]]],
				[814.2,
					1688,
					[["procDef", "snapshot - save inventory", [], [], true],
						["call", "register block %n", 200],
						["setVar:to:", "i", "1"],
						["append:toList:", ["lineCountOfList:", "_inv"], "Save Game"],
						["doRepeat",
							["lineCountOfList:", "_inv"],
							[["append:toList:", ["getLine:ofList:", ["readVariable", "i"], "_inv"], "Save Game"], ["changeVar:by:", "i", 1]]]]],
				[817.1,
					1985.2,
					[["procDef", "snapshot - save mobs", [], [], true],
						["call", "register block %n", 300],
						["setVar:to:", "i", "1"],
						["append:toList:", ["lineCountOfList:", "_Mob"], "Save Game"],
						["doRepeat",
							["lineCountOfList:", "_Mob"],
							[["append:toList:", ["getLine:ofList:", ["readVariable", "i"], "_Mob"], "Save Game"], ["changeVar:by:", "i", 1]]]]],
				[4100.2, 4100, [["not", false]]],
				[803.75,
					35.05,
					[["procDef", "Write String to Big %s", ["str"], [""], true],
						["append:toList:", ["getParam", "str", "r"], "Save Game"]]],
				[1350.1,
					25.4,
					[["procDef", "Read String", [], [], true],
						["setVar:to:", "?Val", ["getLine:ofList:", ["readVariable", "readIdx"], "Save Game"]],
						["changeVar:by:", "readIdx", 1]]],
				[1352.85,
					164.65,
					[["procDef", "Read Number", [], [], true],
						["setVar:to:", "?Val", ["getLine:ofList:", ["readVariable", "readIdx"], "Save Game"]],
						["changeVar:by:", "readIdx", 1]]],
				[1361.45,
					1795.55,
					[["procDef", "snapshot - load inventory %n", ["typ"], [1], true],
						["deleteLine:ofList:", "all", "_inv"],
						["call", "Read Number"],
						["doRepeat",
							["readVariable", "?Val"],
							[["call", "Read Number"], ["append:toList:", ["readVariable", "?Val"], "_inv"]]]]],
				[1362.05,
					2029.9,
					[["procDef", "snapshot - load mobs %n", ["typ"], [1], true],
						["deleteLine:ofList:", "all", "_Mob"],
						["call", "Read Number"],
						["doRepeat",
							["readVariable", "?Val"],
							[["call", "Read Number"], ["append:toList:", ["readVariable", "?Val"], "_Mob"]]]]],
				[348.75,
					930.9,
					[["procDef", "Convert All to String %n", ["slot"], [1], true],
						["setVar:to:", "readIdx", "1"],
						["doRepeat",
							["lineCountOfList:", "Save Game"],
							[["setVar:to:", "?Val", ["getLine:ofList:", ["readVariable", "readIdx"], "Save Game"]],
								["setLine:ofList:to:", ["readVariable", "readIdx"], "Save Game", ["concatenate:with:", ["readVariable", "?Val"], "¬"]],
								["changeVar:by:", "readIdx", 1]]],
						["deleteLine:ofList:", "all", "Save Game"]]],
				[1359.45,
					619.8,
					[["procDef", "snapshot - load level %n", ["typ"], [1], true],
						["call", "Read Number"],
						["setVar:to:", "MAP_WIDTH", ["readVariable", "?Val"]],
						["setVar:to:", "MAP_WIDTH_NEG", ["-", 0, ["readVariable", "?Val"]]],
						["call", "Read Number"],
						["setVar:to:", "MAP_HEIGHT", ["readVariable", "?Val"]],
						["call", "Resize Level"],
						["setVar:to:", "tmp", "1"],
						["doUntil",
							[">", ["readVariable", "tmp"], ["lineCountOfList:", "_Level"]],
							[["call", "Read Number"],
								["setVar:to:", "ssc", ["readVariable", "?Val"]],
								["call", "Read Number"],
								["doRepeat",
									["readVariable", "?Val"],
									[["setLine:ofList:to:", ["readVariable", "tmp"], "_Level", ["readVariable", "ssc"]], ["changeVar:by:", "tmp", 1]]]]],
						["deleteLine:ofList:", "all", "_LData"],
						["call", "Read Number"],
						["doUntil",
							["|", ["=", ["readVariable", "?Val"], "0"], ["=", ["readVariable", "?Val"], ""]],
							[["append:toList:", ["readVariable", "?Val"], "_LData"],
								["call", "Read Number"],
								["setVar:to:", "count2", ["readVariable", "?Val"]],
								["append:toList:", ["readVariable", "count2"], "_LData"],
								["call", "Read String"],
								["append:toList:", ["readVariable", "?Val"], "_LData"],
								["call", "Read String"],
								["append:toList:", ["readVariable", "?Val"], "_LData"],
								["doRepeat",
									["-", ["readVariable", "count2"], 4],
									[["call", "Read Number"], ["append:toList:", ["readVariable", "?Val"], "_LData"]]],
								["call", "Read Number"]]],
						["call", "Read Number"],
						["doIfElse",
							[">", ["readVariable", "?Val"], "0"],
							[["setVar:to:", "Time of Day", ["-", ["readVariable", "?Val"], ["timer"]]]],
							[["setVar:to:", "Time of Day", ["-", ["*", 7, 60], ["timer"]]]]],
						["setVar:to:", "count2", "1"],
						["doRepeat",
							["\/", ["lineCountOfList:", "_Mob"], 2],
							[["setLine:ofList:to:", ["readVariable", "count2"], "_Mob", "0"],
								["changeVar:by:", "count2", 1],
								["setLine:ofList:to:", ["readVariable", "count2"], "_Mob", ""],
								["changeVar:by:", "count2", 1]]]]],
				[1358.35,
					312,
					[["procDef", "Resize Level", [], [], true],
						["doIfElse",
							["<", ["lineCountOfList:", "_Level"], ["*", ["readVariable", "MAP_WIDTH"], ["readVariable", "MAP_HEIGHT"]]],
							[["doRepeat",
									["-", ["*", ["readVariable", "MAP_WIDTH"], ["readVariable", "MAP_HEIGHT"]], ["lineCountOfList:", "_Level"]],
									[["append:toList:", "0", "_Level"]]]],
							[["doRepeat",
									["-", ["lineCountOfList:", "_Level"], ["*", ["readVariable", "MAP_WIDTH"], ["readVariable", "MAP_HEIGHT"]]],
									[["deleteLine:ofList:", "last", "_Level"]]]]]]],
				[20,
					531,
					[["whenIReceive", "SAVE GAME"],
						["deleteLine:ofList:", "all", "Save Game"],
						["setVar:to:", "last", 0],
						["append:toList:", "Scratcharia Save Game v1.6", "Save Game"],
						["call", "register block %n", 1],
						["append:toList:", ["getUserName"], "Save Game"],
						["append:toList:",
							["concatenate:with:",
								"Date: ",
								["concatenate:with:",
									["timeAndDate", "year"],
									["concatenate:with:", "-", ["concatenate:with:", ["timeAndDate", "month"], ["concatenate:with:", "-", ["timeAndDate", "date"]]]]]],
							"Save Game"],
						["call", "snapshot - save level"],
						["call", "snapshot - save inventory"],
						["call", "register block %n", 0],
						["gotoX:y:", 0, 0],
						["doIf",
							false,
							[["doAsk", "Enter a save game slot (1-9) or enter to export"],
								["doIf",
									["&",
										["&", [">", ["answer"], "0"], ["<", ["answer"], "10"]],
										["=", ["stringLength:", ["answer"]], "1"]],
									[["call", "Convert All to String %n", ["answer"]], ["broadcast:", "Close Save Game"], ["stopScripts", "this script"]]]]],
						["lookLike:", "SAVE GAME"],
						["show"],
						["comeToFront"],
						["showList:", "Save Game"],
						["setVar:to:", "i", ["getLine:ofList:", 1, "Save Game"]],
						["createCloneOf", "_myself_"],
						["doWaitUntil", false]]],
				[20.65, 386.35, [["whenCloned"], ["lookLike:", "close"], ["show"], ["comeToFront"]]],
				[350.75,
					1239.5,
					[["procDef", "Convert All from String %n", ["slot"], [1], true],
						["setVar:to:", "?Val", ""],
						["deleteLine:ofList:", "all", "Save Game"],
						["setVar:to:", "i", "1"],
						["doUntil",
							[">", ["readVariable", "i"], ["stringLength:", ["readVariable", "?Val"]]],
							[["setVar:to:", "tmp", ""],
								["doUntil",
									["=", "¬", ["letter:of:", ["readVariable", "i"], ["readVariable", "?Val"]]],
									[["setVar:to:",
											"tmp",
											["concatenate:with:", ["readVariable", "tmp"], ["letter:of:", ["readVariable", "i"], ["readVariable", "?Val"]]]],
										["changeVar:by:", "i", 1]]],
								["append:toList:", ["readVariable", "tmp"], "Save Game"],
								["changeVar:by:", "i", 2]]]]],
				[391, 566, [["call", "snapshot - save mobs"]]],
				[21,
					1193,
					[["whenIReceive", "LOAD GAME"],
						["deleteLine:ofList:", "all", "Save Game"],
						["setVar:to:", "last", 0],
						["append:toList:", "", "Save Game"],
						["append:toList:", "", "Save Game"],
						["append:toList:", "", "Save Game"],
						["append:toList:", "", "Save Game"],
						["append:toList:", "", "Save Game"],
						["gotoX:y:", 0, 0],
						["doIf",
							false,
							[["doAsk", "Enter a load game slot (1-9) or enter to use import"],
								["doIf",
									["&",
										["&", [">", ["answer"], "0"], ["<", ["answer"], "10"]],
										["=", ["stringLength:", ["answer"]], "1"]],
									[["call", "Convert All from String %n", ["answer"]],
										["doIf",
											["<", ["lineCountOfList:", "Save Game"], "2"],
											[["doAsk", "No game found..."], ["stopScripts", "this script"]]],
										["call", "load parse"],
										["stopScripts", "this script"]]]]],
						["lookLike:", "LOAD GAME"],
						["show"],
						["comeToFront"],
						["wait:elapsed:from:", 0.04],
						["showList:", "Save Game"],
						["setVar:to:", "i", ["getLine:ofList:", 1, "Save Game"]],
						["createCloneOf", "_myself_"],
						["doWaitUntil", [">", ["lineCountOfList:", "Save Game"], "1000"]],
						["call", "load parse"]]],
				[343.5,
					1723.2,
					[["procDef", "load parse", [], [], false],
						["setVar:to:", "readIdx", "2"],
						["doUntil",
							[">", ["readVariable", "readIdx"], ["lineCountOfList:", "Save Game"]],
							[["doIf",
									["not", ["=", ["getLine:ofList:", ["readVariable", "readIdx"], "Save Game"], "#####"]],
									[["deleteLine:ofList:", "all", "Save Game"], ["append:toList:", "The save game was corrupted :(", "Save Game"], ["stopScripts", "all"]]],
								["setVar:to:", "i", ["getLine:ofList:", ["+", ["readVariable", "readIdx"], 1], "Save Game"]],
								["setVar:to:", "last", ["getLine:ofList:", ["+", ["readVariable", "readIdx"], 2], "Save Game"]],
								["doIf",
									["<", ["readVariable", "last"], ["+", ["readVariable", "readIdx"], 3]],
									[["deleteLine:ofList:", "all", "Save Game"], ["append:toList:", "The save game was corrupted :(", "Save Game"], ["stopScripts", "all"]]],
								["changeVar:by:", "readIdx", 3],
								["doIfElse",
									["<", ["readVariable", "i"], "99"],
									null,
									[["doIfElse",
											["<", ["readVariable", "i"], "199"],
											[["call", "snapshot - load level %n", ["readVariable", "i"]]],
											[["doIfElse",
													["<", ["readVariable", "i"], "299"],
													[["call", "snapshot - load inventory %n", ["readVariable", "i"]]],
													[["doIfElse",
															["<", ["readVariable", "i"], "399"],
															[["call", "snapshot - load mobs %n", ["readVariable", "i"]]],
															null]]]]]]],
								["setVar:to:", "readIdx", ["readVariable", "last"]]]],
						["doBroadcastAndWait", "LightingAll"],
						["doBroadcastAndWait", "Level Ready to Play"],
						["doBroadcastAndWait", "respawn"],
						["doBroadcastAndWait", "Close Save Game"]]],
				[21,
					234,
					[["whenIReceive", "Close Save Game"],
						["hide"],
						["hideList:", "Save Game"],
						["deleteLine:ofList:", "all", "Save Game"],
						["stopScripts", "other scripts in sprite"]]],
				[18,
					23,
					[["whenClicked"],
						["doIfElse",
							["=", ["costumeIndex"], "2"],
							[["hide"], ["broadcast:", "Close Save Game"], ["deleteClone"]],
							null]]],
				[313, 430, [["whenIReceive", "Start Game Loop"], ["stopScripts", "other scripts in sprite"], ["hide"], ["filterReset"]]],
				[570,
					345,
					[["whenGreenFlag"],
						["doForever",
							[["doWaitUntil", ["touching:", "_mouse_"]],
								["doIfElse", false, [["say:", "Yay - Scratch Messaging Extension is installed!"]], [["say:", "This game supports enhanced save games if you install the Scratch Messaging Extension from www.griffpatch.co.uk"]]],
								["doWaitUntil", ["not", ["touching:", "_mouse_"]]],
								["say:", ""]]]]],
				[317,
					30,
					[["whenGreenFlag"],
						["show"],
						["lookLike:", "extension"],
						["gotoX:y:", 0, 0],
						["hideList:", "Save Game"],
						["deleteLine:ofList:", "all", "Save Game"],
						["setVar:to:", "?Val", ""],
						["comeToFront"],
						["doForever",
							[["doIf", ["not", false], [["wait:elapsed:from:", 1], ["setGraphicEffect:to:", "brightness", -20]]],
								["wait:elapsed:from:", 0.3],
								["setGraphicEffect:to:", "brightness", 0]]]]]],
			"sounds": [{
					"soundName": "pop",
					"soundID": 0,
					"md5": "83a9787d4cb6f3b7632b4ddfebf74367.wav",
					"sampleCount": 258,
					"rate": 11025,
					"format": ""
				}],
			"costumes": [{
					"costumeName": "SAVE GAME",
					"baseLayerID": 613,
					"baseLayerMD5": "8fb7002f2d1e9f9f79b6184e4011b9c2.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 162,
					"rotationCenterY": 156
				},
				{
					"costumeName": "close",
					"baseLayerID": 614,
					"baseLayerMD5": "b0f0fdbab818c5f38c14c896740023b4.svg",
					"bitmapResolution": 1,
					"rotationCenterX": -141,
					"rotationCenterY": 128
				},
				{
					"costumeName": "LOAD GAME",
					"baseLayerID": 615,
					"baseLayerMD5": "ff71d124bbc2eb36003680481a18d10f.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 164,
					"rotationCenterY": 157
				},
				{
					"costumeName": "extension",
					"baseLayerID": 427,
					"baseLayerMD5": "d36f6603ec293d2c2198d3ea05109fe0.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 0
				},
				{
					"costumeName": "extension2",
					"baseLayerID": 616,
					"baseLayerMD5": "010aeb3c06933b4c91201eac36ca87b4.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 234,
					"rotationCenterY": 174
				}],
			"currentCostumeIndex": 3,
			"scratchX": 0,
			"scratchY": 0,
			"scale": 1,
			"direction": 90,
			"rotationStyle": "none",
			"isDraggable": false,
			"indexInLibrary": 27,
			"visible": true,
			"spriteInfo": {
			}
		},
		{
			"objName": "Frame",
			"variables": [{
					"name": "Options",
					"value": "",
					"isPersistent": false
				},
				{
					"name": "Typ",
					"value": "color2",
					"isPersistent": false
				},
				{
					"name": "HoverID",
					"value": "0",
					"isPersistent": false
				},
				{
					"name": "Peaceful?",
					"value": 0,
					"isPersistent": false
				},
				{
					"name": "Color",
					"value": 0,
					"isPersistent": false
				}],
			"scripts": [[475,
					23,
					[["whenIReceive", "Clone Sprites"],
						["gotoX:y:", 0, 0],
						["comeToFront"],
						["doIfElse",
							["=", ["getAttribute:of:", "@Offline", "Multiplayer"], "0"],
							[["lookLike:", "frame multi"]],
							[["lookLike:", "frame single"]]]]],
				[24,
					18,
					[["whenGreenFlag"],
						["deleteLine:ofList:", "all", "_Level"],
						["deleteLine:ofList:", "all", "_Light"],
						["deleteLine:ofList:", "all", "LightMod"],
						["setVar:to:", "Options", ""],
						["setVar:to:", "HoverID", "0"],
						["filterReset"],
						["lookLike:", "Trees"],
						["gotoX:y:", 0, 0],
						["comeToFront"],
						["show"],
						["doBroadcastAndWait", "Hide All"],
						["setVar:to:", "Peaceful?", 0],
						["setVar:to:", "Typ", "logo"],
						["createCloneOf", "_myself_"],
						["setVar:to:", "Typ", "logo2"],
						["createCloneOf", "_myself_"],
						["setVar:to:", "Typ", "choose player"],
						["createCloneOf", "_myself_"],
						["setVar:to:", "Typ", "color1"],
						["createCloneOf", "_myself_"],
						["setVar:to:", "Typ", "color2"],
						["createCloneOf", "_myself_"],
						["doIf", ["=", ["getAttribute:of:", "@Player ID", "Multiplayer"], "-999"], [["stopScripts", "all"]]],
						["doBroadcastAndWait", "Check Ban"],
						["doWaitUntil", ["not", ["mousePressed"]]],
						["doUntil",
							["&", ["mousePressed"], [">", ["readVariable", "HoverID"], "0"]],
							[["setVar:to:", "HoverID", ["rounded", ["+", ["\/", ["mouseX"], 34], 8]]],
								["doIfElse",
									["&", [">", ["readVariable", "HoverID"], "1"], ["<", ["readVariable", "HoverID"], "15"]],
									[["doIfElse",
											[">", ["mouseY"], "48"],
											[["setVar:to:", "HoverID", "0"]],
											[["doIfElse",
													[">", ["mouseY"], "-13"],
													null,
													[["doIfElse",
															[">", ["mouseY"], "-72"],
															[["changeVar:by:", "HoverID", 13]],
															[["doIfElse",
																	[">", ["mouseY"], "-133"],
																	[["changeVar:by:", "HoverID", 26]],
																	[["setVar:to:", "HoverID", "0"],
																		["doIf",
																			["mousePressed"],
																			[["doIf",
																					["<", ["computeFunction:of:", "abs", ["+", ["mouseY"], 152]], "13"],
																					[["doIf",
																							["<", ["computeFunction:of:", "abs", ["+", ["mouseX"], 200]], "20"],
																							[["setVar:to:", "Color", 0], ["broadcast:", "Change Color"]]],
																						["doIf",
																							["<", ["computeFunction:of:", "abs", ["+", ["mouseX"], 153]], "20"],
																							[["setVar:to:", "Color", "1"], ["broadcast:", "Change Color"]]]]]]]]]]]]]]]],
									[["setVar:to:", "HoverID", "0"]]]]],
						["setVar:to:", "Options", ["readVariable", "HoverID"]],
						["doBroadcastAndWait", "ClearMenuClones"],
						["setVar:to:", "Typ", "choose mode"],
						["createCloneOf", "_myself_"],
						["setVar:to:", "Typ", "single"],
						["createCloneOf", "_myself_"],
						["setVar:to:", "Typ", "multi"],
						["createCloneOf", "_myself_"],
						["setVar:to:", "Typ", "peaceful"],
						["createCloneOf", "_myself_"],
						["setVar:to:", "HoverID", "0"],
						["doWaitUntil", ["not", ["mousePressed"]]],
						["setVar:to:", "TICK", 0],
						["doUntil",
							["&",
								["mousePressed"],
								["&", [">", ["readVariable", "HoverID"], "0"], ["<", ["readVariable", "HoverID"], "3"]]],
							[["doIfElse",
									["mousePressed"],
									[["doIf", ["=", ["readVariable", "TICK"], "0"], [["setVar:to:", "TICK", "1"]]]],
									[["setVar:to:", "TICK", 0]]],
								["doIfElse",
									["<", ["computeFunction:of:", "abs", ["mouseX"]], "90"],
									[["doIfElse",
											["<", ["computeFunction:of:", "abs", ["-", ["mouseY"], 0]], "20"],
											[["setVar:to:", "HoverID", "1"]],
											[["doIfElse",
													["<", ["computeFunction:of:", "abs", ["-", ["mouseY"], -50]], "20"],
													[["setVar:to:", "HoverID", "2"]],
													[["doIfElse",
															["<", ["computeFunction:of:", "abs", ["-", ["mouseY"], -100]], "20"],
															[["setVar:to:", "HoverID", "3"],
																["doIf",
																	["=", ["readVariable", "TICK"], "1"],
																	[["setVar:to:", "Peaceful?", ["-", 1, ["readVariable", "Peaceful?"]]], ["setVar:to:", "TICK", "2"]]]],
															[["setVar:to:", "HoverID", "0"]]]]]]]],
									[["setVar:to:", "HoverID", "0"]]]]],
						["doBroadcastAndWait", "ClearMenuClonesAll"],
						["doWaitUntil", ["not", ["mousePressed"]]],
						["doIf", ["=", ["readVariable", "HoverID"], "1"], [["doBroadcastAndWait", "Single Player"]]],
						["broadcast:", "Start Game Loop"]]],
				[826,
					191.65,
					[["whenIReceive", "ClearMenuClones"],
						["doIf",
							["not",
								["|", ["=", ["readVariable", "Typ"], "logo"], ["=", ["readVariable", "Typ"], "logo2"]]],
							[["deleteClone"]]]]],
				[824,
					453,
					[["whenCloned"],
						["comeToFront"],
						["lookLike:", ["readVariable", "Typ"]],
						["doIfElse",
							["=", ["readVariable", "Typ"], "logo"],
							[["ypos:", 104],
								["doForever",
									[["heading:",
											["+", ["*", 5, ["computeFunction:of:", "cos", ["*", ["timer"], 80]]], 90]]]]],
							[["doIfElse",
									["|", ["=", ["readVariable", "Typ"], "choose player"], ["=", ["readVariable", "Typ"], "choose mode"]],
									[["doForever",
											[["ypos:", ["*", 5, ["computeFunction:of:", "sin", ["*", ["timer"], 250]]]]]]],
									[["doIfElse",
											["=", ["readVariable", "Typ"], "single"],
											[["doForever",
													[["doIfElse",
															["=", ["getAttribute:of:", "HoverID", "Frame"], "1"],
															[["ypos:",
																	["+", 0, ["*", 3, ["computeFunction:of:", "sin", ["*", ["timer"], 250]]]]]],
															[["ypos:", 0]]]]]],
											[["doIfElse",
													["=", ["readVariable", "Typ"], "multi"],
													[["doForever",
															[["doIfElse",
																	["=", ["getAttribute:of:", "HoverID", "Frame"], "2"],
																	[["ypos:",
																			["+", -50, ["*", 3, ["computeFunction:of:", "sin", ["*", ["timer"], 250]]]]]],
																	[["ypos:", -50]]]]]],
													[["doIfElse",
															["=", ["readVariable", "Typ"], "peaceful"],
															[["doForever",
																	[["doIfElse",
																			["=", ["getAttribute:of:", "HoverID", "Frame"], "3"],
																			[["ypos:",
																					["+", -100, ["*", 3, ["computeFunction:of:", "sin", ["*", ["timer"], 250]]]]]],
																			[["ypos:", -100]]],
																		["doIfElse",
																			["=", ["getAttribute:of:", "Peaceful?", "Frame"], "0"],
																			[["doIf", ["=", ["costumeIndex"], "11"], [["lookLike:", "peaceful"]]]],
																			[["doIf", ["=", ["costumeIndex"], "10"], [["lookLike:", "peacefulY"]]]]]]]],
															null]]]]]]]]]]],
				[822, 337, [["whenIReceive", "ClearMenuClonesAll"], ["deleteClone"]]],
				[2547, 2998, [["not", false]]],
				[475,
					313,
					[["whenIReceive", "Back_clouds"],
						["doIf", ["=", ["readVariable", "TICK"], "0"], [["comeToFront"]]]]]],
			"sounds": [{
					"soundName": "pop",
					"soundID": 0,
					"md5": "83a9787d4cb6f3b7632b4ddfebf74367.wav",
					"sampleCount": 258,
					"rate": 11025,
					"format": ""
				}],
			"costumes": [{
					"costumeName": "frame multi",
					"baseLayerID": 617,
					"baseLayerMD5": "d98ab2f44a561df7f943cf9d7d26b0b7.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 241,
					"rotationCenterY": 180
				},
				{
					"costumeName": "frame single",
					"baseLayerID": 618,
					"baseLayerMD5": "d1315e2e4e289302caed4d4312663379.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 241,
					"rotationCenterY": 180
				},
				{
					"costumeName": "logo",
					"baseLayerID": 619,
					"baseLayerMD5": "363eeccdfd69f22bc28dd208a2632063.png",
					"bitmapResolution": 2,
					"rotationCenterX": 360,
					"rotationCenterY": 86
				},
				{
					"costumeName": "logo2",
					"baseLayerID": 620,
					"baseLayerMD5": "3157bdc821387a90850763c3c8fc0530.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 76,
					"rotationCenterY": 157
				},
				{
					"costumeName": "Trees",
					"baseLayerID": 621,
					"baseLayerMD5": "345ce13ee81a293ba23833bd89c1ea17.png",
					"bitmapResolution": 2,
					"rotationCenterX": 480,
					"rotationCenterY": 69
				},
				{
					"costumeName": "choose player",
					"baseLayerID": 622,
					"baseLayerMD5": "5d49eabe4fdb48ca4b61418cfb2f934d.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 109,
					"rotationCenterY": -136
				},
				{
					"costumeName": "choose mode",
					"baseLayerID": 623,
					"baseLayerMD5": "04ce5044f2ab5c30303507cd20b42a69.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 136,
					"rotationCenterY": -137
				},
				{
					"costumeName": "single",
					"baseLayerID": 624,
					"baseLayerMD5": "919dbb408db24a2d78fb5db8ab4bf99f.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 71,
					"rotationCenterY": 16
				},
				{
					"costumeName": "multi",
					"baseLayerID": 625,
					"baseLayerMD5": "4be6c06f2ddaa70887444429d57f53f2.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 62,
					"rotationCenterY": 15
				},
				{
					"costumeName": "peaceful",
					"baseLayerID": 626,
					"baseLayerMD5": "b0166ce18c67040a9ad369bb0ca681c6.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 57,
					"rotationCenterY": 16
				},
				{
					"costumeName": "peacefulY",
					"baseLayerID": 627,
					"baseLayerMD5": "e4e5506686b09c5210021d7cecff992f.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 57,
					"rotationCenterY": 16
				},
				{
					"costumeName": "color1",
					"baseLayerID": 628,
					"baseLayerMD5": "cca156b907fa0d535812cab774310b00.png",
					"bitmapResolution": 2,
					"rotationCenterX": 438,
					"rotationCenterY": -286
				},
				{
					"costumeName": "color2",
					"baseLayerID": 629,
					"baseLayerMD5": "7be5aea27806e2f90c8c52422387c037.png",
					"bitmapResolution": 2,
					"rotationCenterX": 342,
					"rotationCenterY": -286
				},
				{
					"costumeName": "loadgame",
					"baseLayerID": 630,
					"baseLayerMD5": "729e1af58b35194235da974268f475e8.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 62,
					"rotationCenterY": 16
				}],
			"currentCostumeIndex": 4,
			"scratchX": 0,
			"scratchY": 0,
			"scale": 1,
			"direction": 90,
			"rotationStyle": "normal",
			"isDraggable": false,
			"indexInLibrary": 9,
			"visible": true,
			"spriteInfo": {
			}
		},
		{
			"objName": "Warning",
			"variables": [{
					"name": "i",
					"value": 83,
					"isPersistent": false
				},
				{
					"name": "str",
					"value": "lblpqhxfxt",
					"isPersistent": false
				},
				{
					"name": "c",
					"value": 0,
					"isPersistent": false
				},
				{
					"name": "_Chars",
					"value": " !\"#$%&'()*+,-.\/0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~",
					"isPersistent": false
				},
				{
					"name": "Time Left",
					"value": 0,
					"isPersistent": false
				},
				{
					"name": "command",
					"value": "",
					"isPersistent": false
				},
				{
					"name": "Reset Spam Timer",
					"value": 126.296,
					"isPersistent": false
				},
				{
					"name": "Ignore Echo",
					"value": "0",
					"isPersistent": false
				}],
			"lists": [{
					"listName": "Warning",
					"contents": [" gtbokxl",
						1,
						"pshglw",
						1,
						"qbtrks`'#$",
						1,
						"ikmgrln),-+",
						1,
						"pllslskllmyrzmrmsx#",
						1,
						"`$|~'))",
						1,
						"`h|~'))",
						1,
						"ibfslwmq",
						"2",
						"oocf^vjgh",
						14,
						"aoqtblm),-'",
						"2",
						"lshqevja+*-\/",
						4,
						"okkq`ccp",
						"2",
						"`sbui($",
						"15",
						"rblui($",
						"15",
						"f_baucwe",
						14,
						"o_cf^vjgh",
						14,
						"mb`mcvxfgc",
						"2",
						"`ltrhasym+*.",
						"2",
						"osgbosfwi{i{w{o",
						"2",
						"go_m$'",
						"2",
						"qecmd'*'",
						"2",
						"!d`f",
						"2",
						"m_gh^dpmv+..,",
						"2",
						"`gtddwc*,",
						"2",
						"_ehsvd",
						"2",
						"``fdj,v",
						"2",
						"gei ",
						12,
						"o_rkucklb+",
						"2",
						"`siivYxxy{ye",
						"2",
						"gknqe$&;",
						"2",
						"_ehmci",
						"2",
						"`gtdcexd+-",
						"2",
						"gofctfxfxtxl",
						"2",
						"ckgoblplf",
						"2",
						"]kijvqth+'-",
						12,
						"os_mswkvw{djpr",
						16,
						"fk]qkkxggwk}|{",
						"2",
						"asgrhkiuiinp\/***",
						"2",
						"^mi]datygwk",
						"2",
						"ka_'~",
						"2",
						"fsnmtd)))",
						4],
					"isPersistent": false,
					"x": 57,
					"y": 34,
					"width": 425,
					"height": 328,
					"visible": false
				}],
			"scripts": [[10, 10, [["setVar:to:", "_Chars", " !\"#$%&'()*+,-.\/0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~"]]],
				[1203.95, 838.65, [["not", false]]],
				[484.1,
					494.2,
					[["procDef", "Encode %s", ["str"], [""], true],
						["setVar:to:", "str", ""],
						["setVar:to:", "i", "1"],
						["doRepeat",
							["stringLength:", ["getParam", "str", "r"]],
							[["call", "Get Char Idx %s", ["letter:of:", ["readVariable", "i"], ["getParam", "str", "r"]]],
								["setVar:to:",
									"c",
									["%",
										["-", ["+", 20, ["readVariable", "i"]], ["readVariable", "c"]],
										["stringLength:", ["readVariable", "_Chars"]]]],
								["setVar:to:",
									"str",
									["concatenate:with:",
										["readVariable", "str"],
										["letter:of:", ["+", ["readVariable", "c"], 1], ["readVariable", "_Chars"]]]],
								["changeVar:by:", "i", 1]]]]],
				[488.25,
					143.1,
					[["procDef", "Add Warning %s", ["username"], [""], true],
						["call", "Encode %s", ["getParam", "username", "r"]],
						["setVar:to:", "i", "1"],
						["doRepeat",
							["\/", ["lineCountOfList:", "Warning"], 2],
							[["doIf",
									["=", ["readVariable", "str"], ["getLine:ofList:", ["readVariable", "i"], "Warning"]],
									[["setLine:ofList:to:",
											["+", ["readVariable", "i"], 1],
											"Warning",
											["+", ["getLine:ofList:", ["+", ["readVariable", "i"], 1], "Warning"], 2]],
										["stopScripts", "this script"]]],
								["changeVar:by:", "i", 2]]],
						["append:toList:", ["readVariable", "str"], "Warning"],
						["append:toList:", "2", "Warning"]]],
				[1054.25,
					18,
					[["procDef", "Reduce All", [], [], true],
						["setVar:to:", "i", "1"],
						["doRepeat",
							["\/", ["lineCountOfList:", "Warning"], 2],
							[["setLine:ofList:to:",
									["+", ["readVariable", "i"], 1],
									"Warning",
									["-", ["getLine:ofList:", ["+", ["readVariable", "i"], 1], "Warning"], 1]],
								["doIfElse",
									["=", ["getLine:ofList:", ["+", ["readVariable", "i"], 1], "Warning"], "0"],
									[["deleteLine:ofList:", ["readVariable", "i"], "Warning"], ["deleteLine:ofList:", ["readVariable", "i"], "Warning"]],
									[["changeVar:by:", "i", 2]]]]]]],
				[1058.8,
					372.75,
					[["procDef", "Remove Warning %s", ["username"], [""], true],
						["call", "Encode %s", ["getParam", "username", "r"]],
						["setVar:to:", "i", "1"],
						["doRepeat",
							["\/", ["lineCountOfList:", "Warning"], 2],
							[["doIfElse",
									["=", ["readVariable", "str"], ["getLine:ofList:", ["readVariable", "i"], "Warning"]],
									[["deleteLine:ofList:", ["readVariable", "i"], "Warning"], ["deleteLine:ofList:", ["readVariable", "i"], "Warning"]],
									[["changeVar:by:", "i", 2]]]]]]],
				[1058.75,
					707.7,
					[["procDef", "Get Char Idx %s", ["c"], [""], true],
						["setVar:to:", "c", "1"],
						["doUntil",
							["|",
								[">", ["readVariable", "c"], ["stringLength:", ["readVariable", "_Chars"]]],
								["=", ["getParam", "c", "r"], ["letter:of:", ["readVariable", "c"], ["readVariable", "_Chars"]]]],
							[["changeVar:by:", "c", 1]]]]],
				[840.85, 64, [["call", "Reduce All"]]],
				[2196, 1961, [["not", false]]],
				[602,
					831.25,
					[["whenIReceive", "Clone Sprites"],
						["hideVariable:", "Time Left"],
						["setVar:to:", "command", ""],
						["setVar:to:", "Time Left", 0],
						["setVar:to:", "Reset Spam Timer", ["+", ["timer"], 120]],
						["setVar:to:", "Ignore Echo", "0"]]],
				[1675,
					26,
					[["whenIReceive", "KICKED"],
						["lookLike:", "stop"],
						["gotoX:y:", 0, 0],
						["comeToFront"],
						["show"],
						["stopScripts", "all"]]],
				[1672,
					231,
					[["whenIReceive", "Disconnected"],
						["lookLike:", "disconnect"],
						["gotoX:y:", 0, 0],
						["comeToFront"],
						["show"],
						["stopScripts", "all"]]],
				[572.3,
					1554,
					[["whenIReceive", "Reset Cancelled"],
						["stopScripts", "other scripts in sprite"],
						["setVar:to:", "Time Left", "0"],
						["hideVariable:", "Time Left"],
						["setVar:to:", "Ignore Echo", ["+", ["timer"], 7]],
						["setVar:to:", "Reset Spam Timer", ["+", ["timer"], 120]],
						["lookLike:", "Reset Cancelled"],
						["wait:elapsed:from:", 3],
						["lookLike:", "ok"],
						["hide"]]],
				[604,
					1060,
					[["whenClicked"],
						["doIf",
							[">", ["readVariable", "Time Left"], "0"],
							[["doIf",
									["&",
										["<", ["computeFunction:of:", "abs", ["-", ["mouseX"], 166]], "50"],
										["<", ["computeFunction:of:", "abs", ["-", ["mouseY"], -160]], "14"]],
									[["stopScripts", "other scripts in sprite"],
										["append:toList:", "0", "@Place"],
										["append:toList:", "5", "@Place"],
										["hideVariable:", "Time Left"],
										["lookLike:", "Reset Cancelled"],
										["wait:elapsed:from:", 2],
										["lookLike:", "ok"],
										["hide"],
										["setVar:to:", "Time Left", "0"],
										["setVar:to:", "Ignore Echo", ["+", ["timer"], 7]]]]]]]],
				[363,
					1248,
					[["whenIReceive", "Lag Detect"],
						["lookLike:", "Lag Detect"],
						["show"],
						["wait:elapsed:from:", 10],
						["lookLike:", "ok"],
						["hide"]]],
				[311,
					904.75,
					[["whenIReceive", "Start Game Loop"],
						["doIfElse",
							["=", ["getAttribute:of:", "@Offline", "Multiplayer"], "0"],
							[["show"], ["lookLike:", "simple message"], ["broadcast:", "no warning"]],
							[["lookLike:", "ok"], ["hide"]]]]],
				[31,
					44,
					[["whenIReceive", "Check Ban"],
						["lookLike:", "ok"],
						["gotoX:y:", 0, 0],
						["comeToFront"],
						["show"],
						["call", "Check Ban"],
						["doIf",
							[">", ["readVariable", "c"], "0"],
							[["doIfElse",
									["<", ["getLine:ofList:", ["+", ["readVariable", "c"], 1], "Warning"], "10"],
									[["doIfElse",
											["<", ["getLine:ofList:", ["+", ["readVariable", "c"], 1], "Warning"], "3"],
											[["lookLike:", "warning"]],
											[["lookLike:", "warning2"]]],
										["show"],
										["doWaitUntil", ["not", ["mousePressed"]]],
										["doWaitUntil", ["mousePressed"]],
										["doWaitUntil", ["not", ["mousePressed"]]],
										["lookLike:", "ok"],
										["hide"],
										["stopScripts", "this script"]],
									[["lookLike:", "banned"], ["show"], ["stopScripts", "all"]]]]],
						["lookLike:", "ok"]]],
				[31,
					1014,
					[["whenIReceive", "no warning"], ["wait:elapsed:from:", 10], ["lookLike:", "ok"], ["hide"]]],
				[24.85,
					716.35,
					[["procDef", "Check Ban", [], [], true],
						["call", "Encode %s", ["getUserName"]],
						["setVar:to:", "i", "1"],
						["setVar:to:", "c", 0],
						["doRepeat",
							["\/", ["lineCountOfList:", "Warning"], 2],
							[["doIf",
									["=", ["readVariable", "str"], ["getLine:ofList:", ["readVariable", "i"], "Warning"]],
									[["setVar:to:", "c", ["readVariable", "i"]]]],
								["changeVar:by:", "i", 2]]]]],
				[494, 69, [["call", "Remove Warning %s", ""]]],
				[270, 138.15, [["deleteLine:ofList:", "all", "Warning"]]],
				[31.3,
					1154,
					[["whenIReceive", "Reset Request"],
						["doIf", ["<", ["timer"], ["readVariable", "Ignore Echo"]], [["stopScripts", "this script"]]],
						["doIf",
							[">", ["getAttribute:of:", "@Player ID", "Multiplayer"], "0"],
							[["stopScripts", "other scripts in sprite"],
								["lookLike:", "Reset Request"],
								["show"],
								["comeToFront"],
								["doIf", ["=", ["readVariable", "Time Left"], "0"], [["setVar:to:", "Time Left", "30"]]],
								["showVariable:", "Time Left"],
								["doRepeat", ["readVariable", "Time Left"], [["changeVar:by:", "Time Left", -1], ["wait:elapsed:from:", 1]]]]],
						["setVar:to:", "Time Left", "0"],
						["hideVariable:", "Time Left"],
						["setVar:to:", "Ignore Echo", ["+", ["timer"], 10]],
						["lookLike:", "ok"],
						["hide"]]],
				[33.3,
					1750,
					[["whenIReceive", "Send Reset Request"],
						["doIf", [">", ["readVariable", "Time Left"], "0"], [["stopScripts", "this script"]]],
						["stopScripts", "other scripts in sprite"],
						["lookLike:", "Reset Request"],
						["show"],
						["comeToFront"],
						["setVar:to:", "Time Left", "32"],
						["setVar:to:", "Reset Spam Timer", ["+", ["timer"], 120]],
						["showVariable:", "Time Left"],
						["doRepeat",
							["readVariable", "Time Left"],
							[["doIf",
									["&",
										["=", ["%", ["readVariable", "Time Left"], 5], "0"],
										[">", ["readVariable", "Time Left"], "4"]],
									[["append:toList:", "0", "@Place"], ["append:toList:", ["concatenate:with:", "4", ["readVariable", "Time Left"]], "@Place"]]],
								["wait:elapsed:from:", 1],
								["changeVar:by:", "Time Left", -1]]],
						["setVar:to:", "Time Left", "0"],
						["hideVariable:", "Time Left"],
						["setVar:to:", "Reset Spam Timer", ["+", ["timer"], 120]],
						["setVar:to:", "Ignore Echo", ["+", ["timer"], 7]],
						["lookLike:", "ok"],
						["hide"],
						["setLine:ofList:to:", 27, "_Chat", "create new level"]]],
				[281.35, 64, [["call", "Add Warning %s", ""]]],
				[398.3, 2348.5, [["broadcast:", "CREATE NEW LEVEL (stop)"]]]],
			"sounds": [{
					"soundName": "pop",
					"soundID": 0,
					"md5": "83a9787d4cb6f3b7632b4ddfebf74367.wav",
					"sampleCount": 258,
					"rate": 11025,
					"format": ""
				}],
			"costumes": [{
					"costumeName": "ok",
					"baseLayerID": 427,
					"baseLayerMD5": "d36f6603ec293d2c2198d3ea05109fe0.png",
					"bitmapResolution": 2,
					"rotationCenterX": 0,
					"rotationCenterY": 0
				},
				{
					"costumeName": "warning",
					"baseLayerID": 631,
					"baseLayerMD5": "1220ec758f3d28f91b37220a951d2d49.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 197,
					"rotationCenterY": 138
				},
				{
					"costumeName": "warning2",
					"baseLayerID": 632,
					"baseLayerMD5": "11d0a45c8d0631b783758bd091e092fa.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 197,
					"rotationCenterY": 138
				},
				{
					"costumeName": "banned",
					"baseLayerID": 633,
					"baseLayerMD5": "0d158474ed0cf6dc6667810a3c84fc1e.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 199,
					"rotationCenterY": 96
				},
				{
					"costumeName": "simple message",
					"baseLayerID": 634,
					"baseLayerMD5": "1b94bf3b21bfcb5e8e56a060d70db998.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 210,
					"rotationCenterY": -95
				},
				{
					"costumeName": "stop",
					"baseLayerID": 635,
					"baseLayerMD5": "2d4da7bcaf30c68817dbce39ccf569ce.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 199,
					"rotationCenterY": 96
				},
				{
					"costumeName": "disconnect",
					"baseLayerID": 636,
					"baseLayerMD5": "1f83c8e2b45f439296e2b465fad580c1.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 199,
					"rotationCenterY": 96
				},
				{
					"costumeName": "Lag Detect",
					"baseLayerID": 637,
					"baseLayerMD5": "58f763adc74bbd626564b898282c140f.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 208,
					"rotationCenterY": -105
				},
				{
					"costumeName": "Reset Request",
					"baseLayerID": 638,
					"baseLayerMD5": "6a92892a0f753157a4914bbeeea8be55.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 241,
					"rotationCenterY": -143
				},
				{
					"costumeName": "Reset Cancelled",
					"baseLayerID": 639,
					"baseLayerMD5": "a64c3be1f783ee9644cce85459f76652.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 241,
					"rotationCenterY": -143
				}],
			"currentCostumeIndex": 0,
			"scratchX": 0,
			"scratchY": 0,
			"scale": 1,
			"direction": 90,
			"rotationStyle": "none",
			"isDraggable": false,
			"indexInLibrary": 19,
			"visible": true,
			"spriteInfo": {
			}
		},
		{
			"objName": "Choose Player",
			"variables": [{
					"name": "x",
					"value": 227.65,
					"isPersistent": false
				},
				{
					"name": "y",
					"value": 80.925,
					"isPersistent": false
				},
				{
					"name": "dx",
					"value": 2.8421709430404014e-14,
					"isPersistent": false
				},
				{
					"name": "dy",
					"value": -0.5000000000000213,
					"isPersistent": false
				},
				{
					"name": "gx",
					"value": "34",
					"isPersistent": false
				},
				{
					"name": "id",
					"value": 41,
					"isPersistent": false
				}],
			"scripts": [[24.65,
					158.95,
					[["procDef", "init", [], [], true],
						["setVar:to:", "gx", "34"],
						["setSizeTo:", 200],
						["show"],
						["heading:", 90],
						["comeToFront"],
						["gotoX:y:", ["*", ["readVariable", "gx"], -6], 20],
						["lookLike:", ["+", 1, ["getAttribute:of:", "Color", "Frame"]]],
						["setVar:to:", "id", "2"],
						["doRepeat",
							3,
							[["doRepeat",
									13,
									[["createCloneOf", "_myself_"], ["changeXposBy:", ["readVariable", "gx"]], ["changeVar:by:", "id", 1]]],
								["changeXposBy:", ["*", ["readVariable", "gx"], -13]],
								["changeYposBy:", -60]]],
						["gotoX:y:", ["*", ["readVariable", "gx"], -6], 20],
						["lookLike:", "hair_7"],
						["setVar:to:", "id", "2"],
						["doRepeat",
							3,
							[["doRepeat",
									13,
									[["createCloneOf", "_myself_"],
										["nextCostume"],
										["changeXposBy:", ["readVariable", "gx"]],
										["changeVar:by:", "id", 1]]],
								["changeXposBy:", ["*", ["readVariable", "gx"], -13]],
								["changeYposBy:", -60]]],
						["gotoX:y:", ["*", ["readVariable", "gx"], -6], 20],
						["lookLike:", ["+", 3, ["getAttribute:of:", "Color", "Frame"]]],
						["setVar:to:", "id", "2"],
						["doRepeat",
							3,
							[["doRepeat",
									13,
									[["createCloneOf", "_myself_"], ["changeXposBy:", ["readVariable", "gx"]], ["changeVar:by:", "id", 1]]],
								["changeXposBy:", ["*", ["readVariable", "gx"], -13]],
								["changeYposBy:", -60]]],
						["hide"]]],
				[383,
					172,
					[["whenCloned"],
						["setVar:to:", "y", ["ypos"]],
						["doForever",
							[["doIfElse",
									["=", ["readVariable", "id"], ["getAttribute:of:", "HoverID", "Frame"]],
									[["call",
											"Change y %n",
											["+",
												["+",
													["readVariable", "y"],
													["*", 3, ["computeFunction:of:", "sin", ["*", ["timer"], 250]]]],
												2]]],
									[["ypos:", ["readVariable", "y"]]]]]]]],
				[393.95,
					448.9,
					[["procDef", "Change y %n", ["y"], [1], true],
						["doIfElse",
							["<", ["computeFunction:of:", "abs", ["-", ["getParam", "y", "r"], ["ypos"]]], "1"],
							[["ypos:", ["getParam", "y", "r"]]],
							[["doIfElse",
									["<", ["getParam", "y", "r"], ["ypos"]],
									[["changeYposBy:", -1]],
									[["changeYposBy:", 1]]]]]]],
				[814, 42, [["whenIReceive", "ClearMenuClones"], ["hide"], ["deleteClone"]]],
				[397,
					770,
					[["whenIReceive", "Change Color"],
						["doIfElse",
							["<", ["costumeIndex"], "3"],
							[["lookLike:", ["+", 1, ["getAttribute:of:", "Color", "Frame"]]]],
							[["doIf",
									["<", ["costumeIndex"], "5"],
									[["lookLike:", ["+", 3, ["getAttribute:of:", "Color", "Frame"]]]]]]]]],
				[388, 37, [["whenIReceive", "Start Game Loop"], ["hide"], ["deleteClone"]]],
				[26,
					15,
					[["whenGreenFlag"], ["hide"], ["wait:elapsed:from:", 0.2], ["comeToFront"], ["call", "init"]]]],
			"sounds": [{
					"soundName": "pop",
					"soundID": 0,
					"md5": "83a9787d4cb6f3b7632b4ddfebf74367.wav",
					"sampleCount": 258,
					"rate": 11025,
					"format": ""
				}],
			"costumes": [{
					"costumeName": "body_01",
					"baseLayerID": 399,
					"baseLayerMD5": "59be5816574d057aabc99761998b50aa.png",
					"bitmapResolution": 2,
					"rotationCenterX": 12,
					"rotationCenterY": 16
				},
				{
					"costumeName": "bodyB_01",
					"baseLayerID": 412,
					"baseLayerMD5": "5ce3bbe7f657d84ab8b4237470630b1e.png",
					"bitmapResolution": 2,
					"rotationCenterX": 12,
					"rotationCenterY": 16
				},
				{
					"costumeName": "arms_01",
					"baseLayerID": 478,
					"baseLayerMD5": "615710a052ae6b89487e91294a80693f.png",
					"bitmapResolution": 2,
					"rotationCenterX": 12,
					"rotationCenterY": 4
				},
				{
					"costumeName": "armB_01",
					"baseLayerID": 489,
					"baseLayerMD5": "5181bddecdf8a645b9c7efdd26eeaf94.png",
					"bitmapResolution": 2,
					"rotationCenterX": 12,
					"rotationCenterY": 4
				},
				{
					"costumeName": "hair_7",
					"baseLayerID": 429,
					"baseLayerMD5": "af992e9e393dac174708025d69f21729.png",
					"bitmapResolution": 2,
					"rotationCenterX": 16,
					"rotationCenterY": 18
				},
				{
					"costumeName": "hair_7b",
					"baseLayerID": 430,
					"baseLayerMD5": "ee9057cd8e8937473b9af523296914fd.png",
					"bitmapResolution": 2,
					"rotationCenterX": 16,
					"rotationCenterY": 18
				},
				{
					"costumeName": "hair_7c",
					"baseLayerID": 431,
					"baseLayerMD5": "6961f3eb829df4cb97a4b841204ed146.png",
					"bitmapResolution": 2,
					"rotationCenterX": 16,
					"rotationCenterY": 18
				},
				{
					"costumeName": "hair_6",
					"baseLayerID": 432,
					"baseLayerMD5": "97177c793e0b0013189db6992161a919.png",
					"bitmapResolution": 2,
					"rotationCenterX": 18,
					"rotationCenterY": 22
				},
				{
					"costumeName": "hair_6b",
					"baseLayerID": 433,
					"baseLayerMD5": "bc848bab2f6da7cad53917053d8b0f54.png",
					"bitmapResolution": 2,
					"rotationCenterX": 18,
					"rotationCenterY": 22
				},
				{
					"costumeName": "hair_6c",
					"baseLayerID": 434,
					"baseLayerMD5": "66c6edc485bed32d4b29e5017c81ed1d.png",
					"bitmapResolution": 2,
					"rotationCenterX": 18,
					"rotationCenterY": 22
				},
				{
					"costumeName": "hair_6e",
					"baseLayerID": 435,
					"baseLayerMD5": "54ba94bba8c85289a1b51c2f9204f8fe.png",
					"bitmapResolution": 2,
					"rotationCenterX": 18,
					"rotationCenterY": 22
				},
				{
					"costumeName": "hair_6d",
					"baseLayerID": 436,
					"baseLayerMD5": "61cdcf5d5acbde56026841e88febe90f.png",
					"bitmapResolution": 2,
					"rotationCenterX": 18,
					"rotationCenterY": 22
				},
				{
					"costumeName": "hair_3",
					"baseLayerID": 437,
					"baseLayerMD5": "2d0a325b0e0a482dbeb898b3f7a8a4ef.png",
					"bitmapResolution": 2,
					"rotationCenterX": 10,
					"rotationCenterY": 16
				},
				{
					"costumeName": "hair_14",
					"baseLayerID": 438,
					"baseLayerMD5": "182af4b8a87b70d44e9525faf0b47ff1.png",
					"bitmapResolution": 2,
					"rotationCenterX": 14,
					"rotationCenterY": 22
				},
				{
					"costumeName": "hair14b",
					"baseLayerID": 439,
					"baseLayerMD5": "afb9fab39ef6a1e8149de98da5875be4.png",
					"bitmapResolution": 2,
					"rotationCenterX": 14,
					"rotationCenterY": 22
				},
				{
					"costumeName": "hair_1",
					"baseLayerID": 440,
					"baseLayerMD5": "f9a9d71c41002033c3db749e50f01886.png",
					"bitmapResolution": 2,
					"rotationCenterX": 16,
					"rotationCenterY": 22
				},
				{
					"costumeName": "hair_1b",
					"baseLayerID": 441,
					"baseLayerMD5": "ca3327a659804c8a7927e56ca57525da.png",
					"bitmapResolution": 2,
					"rotationCenterX": 16,
					"rotationCenterY": 22
				},
				{
					"costumeName": "hair_1c",
					"baseLayerID": 442,
					"baseLayerMD5": "9ec3c356f3472d81c9a7dc817a390b40.png",
					"bitmapResolution": 2,
					"rotationCenterX": 16,
					"rotationCenterY": 22
				},
				{
					"costumeName": "hair_1d",
					"baseLayerID": 443,
					"baseLayerMD5": "c01808e8d1506ba04076361353d136e0.png",
					"bitmapResolution": 2,
					"rotationCenterX": 16,
					"rotationCenterY": 22
				},
				{
					"costumeName": "hair_2",
					"baseLayerID": 444,
					"baseLayerMD5": "204e60c5b4762212acfea2d319a15d14.png",
					"bitmapResolution": 2,
					"rotationCenterX": 12,
					"rotationCenterY": 20
				},
				{
					"costumeName": "hair_2b",
					"baseLayerID": 445,
					"baseLayerMD5": "a2dd8834b6dfb87e90d5509ae5e3f2d7.png",
					"bitmapResolution": 2,
					"rotationCenterX": 12,
					"rotationCenterY": 20
				},
				{
					"costumeName": "hair_17",
					"baseLayerID": 446,
					"baseLayerMD5": "4972521f0c90be3bb2718703d4ae6669.png",
					"bitmapResolution": 2,
					"rotationCenterX": 14,
					"rotationCenterY": 24
				},
				{
					"costumeName": "hair_23_y",
					"baseLayerID": 447,
					"baseLayerMD5": "e7729e30bf99b4303c95ba771bae9d27.png",
					"bitmapResolution": 2,
					"rotationCenterX": 16,
					"rotationCenterY": 22
				},
				{
					"costumeName": "hair_24_g",
					"baseLayerID": 448,
					"baseLayerMD5": "4effb281cd27c8cc7c2520ba3c8266cd.png",
					"bitmapResolution": 2,
					"rotationCenterX": 16,
					"rotationCenterY": 26
				},
				{
					"costumeName": "hair_34_lb",
					"baseLayerID": 449,
					"baseLayerMD5": "3f052dd4ed2f67454f7c202611e7decf.png",
					"bitmapResolution": 2,
					"rotationCenterX": 12,
					"rotationCenterY": 18
				},
				{
					"costumeName": "hair_34_p",
					"baseLayerID": 450,
					"baseLayerMD5": "b785d6bb0f8e3f5e1f6c2114fac677d2.png",
					"bitmapResolution": 2,
					"rotationCenterX": 12,
					"rotationCenterY": 18
				},
				{
					"costumeName": "hair_38_bl",
					"baseLayerID": 451,
					"baseLayerMD5": "71db29305b3f9e736d5a4ea85a610b99.png",
					"bitmapResolution": 2,
					"rotationCenterX": 8,
					"rotationCenterY": 20
				},
				{
					"costumeName": "hair_40_y",
					"baseLayerID": 452,
					"baseLayerMD5": "4194057ca2e21e2a17d2e0959391e3bc.png",
					"bitmapResolution": 2,
					"rotationCenterX": 8,
					"rotationCenterY": 18
				},
				{
					"costumeName": "hair_40_b",
					"baseLayerID": 453,
					"baseLayerMD5": "c06eb54695a5ecba8f280aa147cf6423.png",
					"bitmapResolution": 2,
					"rotationCenterX": 8,
					"rotationCenterY": 18
				},
				{
					"costumeName": "hair_49_y",
					"baseLayerID": 454,
					"baseLayerMD5": "637c6bfa1a8bfd4d79eaa2dddf4af21a.png",
					"bitmapResolution": 2,
					"rotationCenterX": 14,
					"rotationCenterY": 20
				},
				{
					"costumeName": "hair_51_y",
					"baseLayerID": 455,
					"baseLayerMD5": "9082183e7e770317cc159a886c36f610.png",
					"bitmapResolution": 2,
					"rotationCenterX": 20,
					"rotationCenterY": 18
				},
				{
					"costumeName": "hair_51_p",
					"baseLayerID": 456,
					"baseLayerMD5": "bb0bd835d158c989aeb2868e177270f9.png",
					"bitmapResolution": 2,
					"rotationCenterX": 20,
					"rotationCenterY": 18
				},
				{
					"costumeName": "hair_51_b",
					"baseLayerID": 457,
					"baseLayerMD5": "eab6ecbc555e48fb871e9189b9a9099c.png",
					"bitmapResolution": 2,
					"rotationCenterX": 20,
					"rotationCenterY": 18
				},
				{
					"costumeName": "hair_66_y",
					"baseLayerID": 458,
					"baseLayerMD5": "208fd1f4083ca72770268eca06d471b4.png",
					"bitmapResolution": 2,
					"rotationCenterX": 16,
					"rotationCenterY": 18
				},
				{
					"costumeName": "hair_66_br",
					"baseLayerID": 459,
					"baseLayerMD5": "fe65e5d055938825e5e03109baa3170a.png",
					"bitmapResolution": 2,
					"rotationCenterX": 16,
					"rotationCenterY": 18
				},
				{
					"costumeName": "hair_66_bl",
					"baseLayerID": 460,
					"baseLayerMD5": "fcb39eb771f378e6a0797a84d445a6c6.png",
					"bitmapResolution": 2,
					"rotationCenterX": 16,
					"rotationCenterY": 18
				},
				{
					"costumeName": "hair_85_o",
					"baseLayerID": 461,
					"baseLayerMD5": "27d24a36c6764af0458a320edd0feda3.png",
					"bitmapResolution": 2,
					"rotationCenterX": 16,
					"rotationCenterY": 22
				},
				{
					"costumeName": "hair_84_o",
					"baseLayerID": 462,
					"baseLayerMD5": "5c48b235535bd3f806745c905b9a78ff.png",
					"bitmapResolution": 2,
					"rotationCenterX": 20,
					"rotationCenterY": 26
				},
				{
					"costumeName": "hair_100_o",
					"baseLayerID": 463,
					"baseLayerMD5": "e410682959a1ad7770b6061b20b1a31b.png",
					"bitmapResolution": 2,
					"rotationCenterX": 16,
					"rotationCenterY": 18
				},
				{
					"costumeName": "hair_100_b",
					"baseLayerID": 464,
					"baseLayerMD5": "2e8735abfe2975630aeb1424e21f4247.png",
					"bitmapResolution": 2,
					"rotationCenterX": 16,
					"rotationCenterY": 18
				},
				{
					"costumeName": "hair_103_b",
					"baseLayerID": 465,
					"baseLayerMD5": "c1e2c8bcdc88b874e52f5e68d8b1744f.png",
					"bitmapResolution": 2,
					"rotationCenterX": 14,
					"rotationCenterY": 20
				},
				{
					"costumeName": "hair_103_br",
					"baseLayerID": 466,
					"baseLayerMD5": "a658daffd6c4e8261d3d4de34b083937.png",
					"bitmapResolution": 2,
					"rotationCenterX": 14,
					"rotationCenterY": 20
				},
				{
					"costumeName": "hair_103_g",
					"baseLayerID": 467,
					"baseLayerMD5": "8b8a210e3d46033b517a5835e4a702eb.png",
					"bitmapResolution": 2,
					"rotationCenterX": 14,
					"rotationCenterY": 20
				}],
			"currentCostumeIndex": 2,
			"scratchX": -204,
			"scratchY": -160,
			"scale": 2,
			"direction": 90,
			"rotationStyle": "leftRight",
			"isDraggable": false,
			"indexInLibrary": 20,
			"visible": false,
			"spriteInfo": {
			}
		},
		{
			"listName": "light tiles",
			"contents": ["38",
				"47",
				"48",
				"49",
				"52",
				"98",
				"99",
				"178",
				"179",
				"180",
				"181",
				"182",
				"183",
				"184",
				"185",
				"186",
				"187",
				"188",
				"189",
				"190",
				"191",
				"221",
				"248",
				"251",
				"252"],
			"isPersistent": false,
			"x": 38,
			"y": 67,
			"width": 301,
			"height": 295,
			"visible": false
		},
		{
			"listName": "_SolidLight",
			"contents": [],
			"isPersistent": false,
			"x": 383,
			"y": 82,
			"width": 120,
			"height": 280,
			"visible": false
		},
		{
			"listName": "Dictionary",
			"contents": ["the",
				"scratch",
				"and",
				"i",
				"a",
				"to",
				"was",
				"it",
				"in",
				"we",
				"they",
				"he",
				"my",
				"of",
				"on",
				"so",
				"went",
				"said",
				"had",
				"she",
				"there",
				"then",
				"but",
				"that",
				"got",
				"were",
				"is",
				"one",
				"you",
				"for",
				"when",
				"day",
				"her",
				"with",
				"at",
				"all",
				"up",
				"me",
				"out",
				"go",
				"mum",
				"his",
				"have",
				"get",
				"as",
				"came",
				"time",
				"back",
				"what",
				"because",
				"home",
				"called",
				"are",
				"like",
				"saw",
				"house",
				"not",
				"after",
				"going",
				"them",
				"him",
				"be",
				"this",
				"school",
				"down",
				"from",
				"dad",
				"did",
				"two",
				"into",
				"ran",
				"could",
				"do",
				"just",
				"next",
				"their",
				"some",
				"no",
				"about",
				"am",
				"can",
				"people",
				"will",
				"an",
				"didn't",
				"see",
				"off",
				"very",
				"our",
				"started",
				"once",
				"would",
				"big",
				"friends",
				"found",
				"who",
				"name",
				"put",
				"little",
				"other",
				"night",
				"over",
				"really",
				"i'm",
				"bed",
				"know",
				"by",
				"took",
				"looked",
				"away",
				"first",
				"girl",
				"if",
				"door",
				"it's",
				"made",
				"come",
				"where",
				"lived",
				"play",
				"your",
				"again",
				"now",
				"us",
				"look",
				"best",
				"morning",
				"later",
				"find",
				"or",
				"around",
				"good",
				"three",
				"want",
				"thought",
				"don't",
				"dog",
				"how",
				"car",
				"something",
				"way",
				"has",
				"only",
				"think",
				"here",
				"lots",
				"more",
				"game",
				"well",
				"told",
				"make",
				"new",
				"OK",
				"water",
				"room",
				"still",
				"until",
				"black",
				"family",
				"walked",
				"brother",
				"played",
				"upon",
				"boy",
				"everyone",
				"man",
				"ball",
				"couldn't",
				"ever",
				"too",
				"woke",
				"friend",
				"old",
				"five",
				"wanted",
				"dark",
				"fell",
				"fun",
				"happy",
				"heard",
				"long",
				"suddenly",
				"named",
				"asked",
				"inside",
				"last",
				"outside",
				"yes",
				"every",
				"through",
				"another",
				"never",
				"playing",
				"why",
				"help",
				"stopped",
				"even",
				"left",
				"that's",
				"world",
				"looking",
				"teacher",
				"turned",
				"been",
				"party",
				"place",
				"yelled",
				"before",
				"four",
				"hit",
				"scared",
				"things",
				"ready",
				"tried",
				"years",
				"also",
				"fast",
				"gave",
				"jumped",
				"head",
				"opened",
				"running",
				"dinner",
				"king",
				"sleep",
				"tell",
				"won",
				"coming",
				"screamed",
				"food",
				"while",
				"always",
				"kicked",
				"minutes",
				"each",
				"everything",
				"finally",
				"say",
				"tree",
				"which",
				"year",
				"hair",
				"hours",
				"let's",
				"lot",
				"rain",
				"work",
				"bad",
				"football",
				"front",
				"let",
				"life",
				"thing",
				"birthday",
				"cold",
				"days",
				"eat",
				"great",
				"red",
				"different",
				"eyes",
				"fish",
				"knew",
				"run",
				"take",
				"walking",
				"class",
				"getting",
				"girls",
				"monster",
				"person",
				"shot",
				"straight",
				"stuff",
				"happened",
				"love",
				"parents",
				"park",
				"right",
				"felt",
				"its",
				"nice",
				"sister",
				"soon",
				"week",
				"bought",
				"cool",
				"decided",
				"died",
				"Saturday",
				"today",
				"watched",
				"ate",
				"finished",
				"ground",
				"hear",
				"lunch",
				"much",
				"nothing",
				"shop",
				"Sunday",
				"whole",
				"animals",
				"beach",
				"boys",
				"favourite",
				"lost",
				"six",
				"any",
				"chocolate",
				"doing",
				"end",
				"hole",
				"kept",
				"noise",
				"noone",
				"small",
				"fire",
				"goal",
				"need",
				"having",
				"live",
				"replied",
				"stay",
				"story",
				"ten",
				"window",
				"dream",
				"give",
				"gun",
				"police",
				"quickly",
				"shopping",
				"store",
				"street",
				"top",
				"anything",
				"bit",
				"brown",
				"dragon",
				"few",
				"kids",
				"open",
				"same",
				"someone",
				"space",
				"under",
				"wait",
				"wasn't",
				"asleep",
				"blue",
				"excited",
				"hard",
				"light",
				"names",
				"white",
				"can't",
				"children",
				"evil",
				"forest",
				"green",
				"huge",
				"loved",
				"pet",
				"plane",
				"they're",
				"town",
				"weeks",
				"ago",
				"baby",
				"fairy",
				"goes",
				"gone",
				"i'll",
				"keep",
				"we're",
				"both",
				"cat",
				"footy",
				"grabbed",
				"hi",
				"most",
				"should",
				"show",
				"sky",
				"sound",
				"talking",
				"than",
				"together",
				"weekend",
				"across",
				"arrived",
				"bang",
				"beautiful",
				"dinosaurs",
				"hour",
				"kill",
				"myself",
				"sat",
				"giant",
				"hand",
				"i've",
				"land",
				"second",
				"TV",
				"being",
				"bus",
				"cars",
				"cave",
				"everywhere",
				"games",
				"landed",
				"money",
				"moved",
				"picked",
				"please",
				"set",
				"stop",
				"there's",
				"walk",
				"behind",
				"breakfast",
				"call",
				"Earth",
				"face",
				"horse",
				"kitchen",
				"own",
				"queen",
				"real",
				"rest",
				"sun",
				"team",
				"these",
				"trying",
				"you're",
				"comes",
				"dead",
				"guy",
				"half",
				"high",
				"Mr",
				"nearly",
				"onto",
				"pretty",
				"puppy",
				"ride",
				"turn",
				"used",
				"watch",
				"dogs",
				"flew",
				"floor",
				"happily",
				"killed",
				"lady",
				"middle",
				"movie",
				"quarter",
				"rock",
				"ship",
				"side",
				"storm",
				"toilet",
				"basketball",
				"caught",
				"centre",
				"crazy",
				"eating",
				"fight",
				"hello",
				"leave",
				"rocket",
				"saying",
				"says",
				"scary",
				"seen",
				"seven",
				"shouted",
				"sorry",
				"tomorrow",
				"twenty",
				"already",
				"bag",
				"book",
				"city",
				"cute",
				"else",
				"except",
				"Friday",
				"friend's",
				"he's",
				"hill",
				"jump",
				"lightning",
				"luck",
				"paper",
				"pink",
				"points",
				"sure",
				"air",
				"bigger",
				"boat",
				"camp",
				"corner",
				"eight",
				"fly",
				"flying",
				"grew",
				"knocked",
				"must",
				"oh",
				"past",
				"swimming",
				"toy",
				"voice",
				"wet",
				"win",
				"became",
				"better",
				"coach",
				"colour",
				"cousin",
				"dance",
				"done",
				"dragons",
				"hope",
				"kind",
				"liked",
				"making",
				"many",
				"mother",
				"pool",
				"power",
				"pushed",
				"rang",
				"screaming",
				"sick",
				"strange",
				"trouble",
				"war",
				"weird",
				"wind",
				"writing",
				"cut",
				"deep",
				"dollars",
				"dressed",
				"ended",
				"enough",
				"far",
				"forever",
				"gets",
				"goals",
				"island",
				"kid",
				"late",
				"near",
				"passed",
				"pets",
				"piece",
				"plan",
				"race",
				"realised",
				"ring",
				"secret",
				"she's",
				"shops",
				"siren",
				"sitting",
				"snow",
				"stayed",
				"strong",
				"tall",
				"thank",
				"what's",
				"without",
				"yesterday",
				"alien",
				"ask",
				"attack",
				"bike",
				"buy",
				"cake",
				"care",
				"closer",
				"clothes",
				"clouds",
				"couple",
				"cried",
				"dirt",
				"disappeared",
				"drink",
				"everybody",
				"farm",
				"free",
				"full",
				"hotel",
				"idea",
				"instead",
				"jungle",
				"match",
				"mud",
				"nobody",
				"remember",
				"road",
				"scream",
				"sea",
				"start",
				"though",
				"use",
				"village",
				"waiting",
				"wrong",
				"zoo",
				"amazing",
				"anyway",
				"bush",
				"does",
				"drove",
				"famous",
				"feed",
				"hot",
				"human",
				"kitten",
				"lights",
				"map",
				"maybe",
				"monkey",
				"Mrs",
				"number",
				"phone",
				"princess",
				"sight",
				"step",
				"sudden",
				"super",
				"those",
				"tired",
				"training",
				"trees",
				"watching",
				"aliens",
				"almost",
				"believe",
				"bird",
				"castle",
				"destroy",
				"doesn't",
				"dropped",
				"eggs",
				"father",
				"fighting",
				"holiday",
				"horrible",
				"job",
				"legs",
				"loud",
				"magic",
				"men",
				"month",
				"moon",
				"music",
				"needed",
				"nowhere",
				"packed",
				"pants",
				"pigs",
				"popcorn",
				"robot",
				"sad",
				"saved",
				"seconds",
				"sheep",
				"shoes",
				"slept",
				"sports",
				"stick",
				"surprise",
				"talk",
				"third",
				"thirty",
				"threw",
				"thunder",
				"toys",
				"try",
				"warm",
				"wow",
				"airport",
				"awhile",
				"bedroom",
				"bell",
				"box",
				"bridge",
				"broken",
				"cats",
				"computer",
				"course",
				"crash",
				"early",
				"fall",
				"garden",
				"guys",
				"heaps",
				"himself",
				"knife",
				"least",
				"luckily",
				"met",
				"metres",
				"missing",
				"mouse",
				"mummy",
				"news",
				"owner",
				"pieces",
				"probably",
				"save",
				"sent",
				"shut",
				"soccer",
				"stairs",
				"stepped",
				"stood",
				"tiger",
				"times",
				"wear",
				"won't",
				"working",
				"young",
				"afternoon",
				"along",
				"answer",
				"answered",
				"anyone",
				"bark",
				"bear",
				"biggest",
				"birds",
				"board",
				"cage",
				"chair",
				"chest",
				"destroyed",
				"doll",
				"draw",
				"goodbye",
				"helped",
				"hey",
				"humans",
				"jail",
				"kick",
				"likes",
				"line",
				"looks",
				"lovely",
				"million",
				"minute",
				"Miss",
				"Monday",
				"normal",
				"oval",
				"pig",
				"point",
				"prince",
				"pulled",
				"reached",
				"river",
				"roof",
				"since",
				"sit",
				"sleeping",
				"special",
				"sunny",
				"table",
				"themselves",
				"tiny",
				"wall",
				"whispered",
				"wish",
				"beat",
				"boss",
				"break",
				"bright",
				"broke",
				"case",
				"catch",
				"close",
				"closed",
				"competition",
				"cricket",
				"drop",
				"egg",
				"fat",
				"feet",
				"fifty",
				"gold",
				"grass",
				"hands",
				"happen",
				"hide",
				"led",
				"lives",
				"meet",
				"might",
				"missed",
				"months",
				"netball",
				"nine",
				"present",
				"reading",
				"safe",
				"score",
				"snake",
				"sport",
				"stand",
				"standing",
				"starting",
				"stuck",
				"tea",
				"thinking",
				"ugly",
				"upstairs",
				"wake",
				"weren't",
				"wings",
				"wood",
				"worked",
				"wouldn't",
				"against",
				"alpaca",
				"angry",
				"anymore",
				"Australia",
				"bags",
				"born",
				"bread",
				"bring",
				"brought",
				"built",
				"bushes",
				"changed",
				"chasing",
				"chicken",
				"chose",
				"classroom",
				"clean",
				"cow",
				"cross",
				"dad's",
				"dear",
				"diamond",
				"dinosaur",
				"downstairs",
				"dwarf",
				"field",
				"final",
				"followed",
				"forgot",
				"guess",
				"happening",
				"haunted",
				"heads",
				"hopped",
				"houses",
				"hungry",
				"hurt",
				"jelly",
				"kangaroo",
				"makes",
				"mansion",
				"massive",
				"maths",
				"motorbike",
				"move",
				"movies",
				"nose",
				"orange",
				"pizza",
				"planet",
				"racing",
				"rocks",
				"sand",
				"sing",
				"sleepover",
				"smell",
				"songs",
				"spider",
				"teddy",
				"treasure",
				"trip",
				"truck",
				"wave",
				"wonder",
				"yelling",
				"yet",
				"actually",
				"add",
				"allowed",
				"arm",
				"armour",
				"arms",
				"army",
				"attacked",
				"babies",
				"backyard",
				"bathroom",
				"blood",
				"bored",
				"brother's",
				"build",
				"building",
				"bully",
				"circus",
				"control",
				"cream",
				"cupboard",
				"dancing",
				"devil",
				"driving",
				"flash",
				"fold",
				"foot",
				"ghost",
				"haven't",
				"hero",
				"hid",
				"hospital",
				"hundred",
				"ice",
				"invisible",
				"journey",
				"jumping",
				"knock",
				"knows",
				"lake",
				"learnt",
				"leg",
				"lesson",
				"longer",
				"married",
				"mouth",
				"mum's",
				"pitch",
				"punched",
				"puppies",
				"quiet",
				"rabbit",
				"raining",
				"read",
				"rich",
				"ripped",
				"robber",
				"round",
				"search",
				"short",
				"skinny",
				"sometimes",
				"son",
				"song",
				"sounded",
				"stars",
				"stole",
				"struck",
				"teachers",
				"terrible",
				"towards",
				"track",
				"underground",
				"word",
				"yellow",
				"able",
				"alive",
				"amulet",
				"annoying",
				"bikes",
				"blanket",
				"body",
				"bowling",
				"brothers",
				"cabin",
				"captain",
				"cattle",
				"charm",
				"chips",
				"circle",
				"cottage",
				"country",
				"crashed",
				"creatures",
				"doctor",
				"doorbell",
				"escape",
				"escaped",
				"exploded",
				"eye",
				"fairies",
				"falling",
				"feel",
				"feeling",
				"flooded",
				"following",
				"forget",
				"forward",
				"gate",
				"hall",
				"heavy",
				"laptop",
				"laughed",
				"living",
				"locked",
				"lounge",
				"lucky",
				"May",
				"mind",
				"mini",
				"monsters",
				"note",
				"ones",
				"others",
				"pack",
				"popular",
				"presents",
				"rides",
				"rode",
				"rooms",
				"rushed",
				"shelter",
				"showed",
				"sign",
				"size",
				"slipped",
				"snakes",
				"spelling",
				"star",
				"stared",
				"starts",
				"steps",
				"tap",
				"teased",
				"test",
				"thousand",
				"toast",
				"trampoline",
				"travelled",
				"tripped",
				"tunnel",
				"waited",
				"wants",
				"waves",
				"Wednesday",
				"west",
				"winning",
				"write",
				"adventure",
				"afraid",
				"appeared",
				"art",
				"babysitter",
				"balloons",
				"beds",
				"bone",
				"bones",
				"bounced",
				"busy",
				"button",
				"change",
				"chase",
				"check",
				"climbed",
				"clock",
				"clown",
				"couch",
				"crashing",
				"creature",
				"crying",
				"cup",
				"dangerous",
				"death",
				"diary",
				"ding",
				"dresses",
				"drive",
				"ear",
				"fashion",
				"finish",
				"fit",
				"fluffy",
				"fox",
				"funny",
				"glass",
				"golden",
				"grey",
				"herself",
				"holding",
				"homework",
				"i'd",
				"isn't",
				"kite",
				"kittens",
				"knight",
				"ladybug",
				"learn",
				"leaves",
				"letter",
				"lift",
				"low",
				"mad",
				"marked",
				"meeting",
				"mess",
				"midnight",
				"mirror",
				"moment",
				"mountain",
				"museum",
				"neighbour",
				"nest",
				"ocean",
				"o'clock",
				"ordered",
				"packing",
				"pass",
				"pay",
				"peanuts",
				"pharaoh",
				"pick",
				"planets",
				"problem",
				"purple",
				"push",
				"putting",
				"rabbits",
				"reason",
				"robots",
				"rope",
				"shape",
				"shells",
				"singers",
				"smash",
				"smoke",
				"snack",
				"somewhere",
				"sort",
				"speed",
				"spent",
				"staying",
				"stream",
				"swam",
				"takes",
				"taking",
				"tasted",
				"teach",
				"teeth",
				"telling",
				"tent",
				"tonight",
				"torch",
				"tourists",
				"train",
				"TRUE",
				"Tuesday",
				"turning",
				"twelve",
				"uncle",
				"unicorn",
				"upset",
				"versus",
				"warrior",
				"wore",
				"worried",
				"yell",
				"accidentally",
				"agreed",
				"alone",
				"animal",
				"asking",
				"barn",
				"bears",
				"blew",
				"boy's",
				"bullies",
				"burning",
				"burnt",
				"calm",
				"camera",
				"champ",
				"chance",
				"cheese",
				"choose",
				"cleaning",
				"climb",
				"club",
				"cousin's",
				"crabs",
				"customers",
				"delicious",
				"desert",
				"dong",
				"dreamt",
				"dummy",
				"eaten",
				"evening",
				"explore",
				"extremely",
				"falls",
				"fantastic",
				"fine",
				"fishing",
				"flies",
				"flowers",
				"fountain",
				"fourteen",
				"freaky",
				"grade",
				"grand",
				"grandma",
				"grow",
				"ham",
				"hardly",
				"hat",
				"held",
				"helicopter",
				"holes",
				"holidays",
				"horses",
				"hotdog",
				"I",
				"July",
				"jumps",
				"key",
				"kicking",
				"kinds",
				"laughing",
				"lead",
				"leaving",
				"library",
				"lion",
				"lollies",
				"lonely",
				"lord",
				"loves",
				"machine",
				"main",
				"mates",
				"may",
				"mermaid",
				"meteor",
				"miles",
				"monkeys",
				"mother's",
				"normally",
				"oldest",
				"peaceful",
				"pen",
				"penguins",
				"playful",
				"playground",
				"poor",
				"pop",
				"pressed",
				"project",
				"promise",
				"quick",
				"raced",
				"rat",
				"recess",
				"remembered",
				"riding",
				"rings",
				"roll",
				"scare",
				"science",
				"scientist",
				"scores",
				"season",
				"seat",
				"seemed",
				"shadow",
				"shed",
				"shoe",
				"shooting",
				"singer",
				"sink",
				"sister's",
				"skirts",
				"slimy",
				"slowly",
				"snail",
				"soft",
				"stage",
				"staring",
				"stormy",
				"studied",
				"such",
				"sushi",
				"sword",
				"tail",
				"tells",
				"tennis",
				"terriers",
				"thick",
				"thirteen",
				"throw",
				"tickets",
				"transformer",
				"trust",
				"umpire",
				"upside",
				"vine",
				"wearing",
				"we'll",
				"wondered",
				"woods",
				"wrote",
				"youngest",
				"yuk",
				"zombies",
				"adults",
				"aeroplane",
				"alright",
				"answers",
				"ant",
				"anywhere",
				"apple",
				"aunty",
				"awesome",
				"bar",
				"battle",
				"bedtime",
				"beep",
				"between",
				"boots",
				"bottom",
				"bull",
				"butter",
				"cabins",
				"careful",
				"carefully",
				"championship",
				"cheeky",
				"cleaned",
				"cliff",
				"coat",
				"collar",
				"computers",
				"confused",
				"cooked",
				"cops",
				"cousins",
				"crowd",
				"cry",
				"crystals",
				"cubby",
				"danced",
				"daughter",
				"deeper",
				"digging",
				"dress",
				"drew",
				"drops",
				"during",
				"dwarfs",
				"Easter",
				"either",
				"entrance",
				"eventually",
				"fact",
				"faint",
				"fainted",
				"flips",
				"flower",
				"follow",
				"footsteps",
				"form",
				"forty",
				"fright",
				"fruit",
				"fuel",
				"fur",
				"garage",
				"gardening",
				"gates",
				"ghostly",
				"goblins",
				"government",
				"grab",
				"growing",
				"guns",
				"hanging",
				"helping",
				"hop",
				"humungous",
				"hurried",
				"iguana",
				"interesting",
				"jewellery",
				"joy",
				"jumper",
				"June",
				"lands",
				"large",
				"laser",
				"lawn",
				"leader",
				"lips",
				"listen",
				"lollipop",
				"lunchtime",
				"mail",
				"meat",
				"metre",
				"neck",
				"nightmare",
				"opening",
				"paint",
				"palace",
				"pancakes",
				"passage",
				"pasta",
				"path",
				"peach",
				"perfect",
				"photo",
				"picture",
				"pile",
				"places",
				"plants",
				"plays",
				"pocket",
				"pools",
				"possum",
				"poured",
				"powerful",
				"principal",
				"pump",
				"rag",
				"recipe",
				"roar",
				"rolled",
				"ruckman",
				"ruled",
				"rumble",
				"sang",
				"sausage",
				"scored",
				"scratching",
				"screams",
				"sell",
				"shaking",
				"sheriff",
				"shining",
				"ships",
				"sighed",
				"silence",
				"silent",
				"simulation",
				"chances",
				"skate",
				"skeleton",
				"skin",
				"sleepy",
				"slug",
				"smelt",
				"smile",
				"sorts",
				"spend",
				"split",
				"spooky",
				"spot",
				"station",
				"sticks",
				"stomach",
				"stone",
				"summer",
				"surfer",
				"swim",
				"taken",
				"teams",
				"thin",
				"thrown",
				"thump",
				"Thursday",
				"totally",
				"touched",
				"trolls",
				"trophy",
				"twice",
				"valley",
				"villains",
				"volcano",
				"weather",
				"weenie",
				"welcome",
				"where's",
				"wife",
				"wild",
				"windows",
				"wing",
				"wondering",
				"woof",
				"worse",
				"worst",
				"wrapped",
				"you've",
				"above",
				"adopted",
				"agent",
				"ahead",
				"aisles",
				"alpaca's",
				"annoyed",
				"attic",
				"aunty's",
				"awake",
				"awoke",
				"banned",
				"bat",
				"bite",
				"blaster",
				"blizzard",
				"bomb",
				"booked",
				"books",
				"boom",
				"brain",
				"breath",
				"breathe",
				"brush",
				"bubbles",
				"buildings",
				"bullets",
				"bunny",
				"burgers",
				"bye",
				"captured",
				"chairs",
				"checked",
				"choc",
				"click",
				"clothing",
				"cloud",
				"clowns",
				"coloured",
				"colourful",
				"complained",
				"cook",
				"copper",
				"court",
				"courts",
				"covered",
				"crawled",
				"crime",
				"curiously",
				"cutest",
				"darkness",
				"deer",
				"diamonds",
				"dishes",
				"distance",
				"dog's",
				"dreams",
				"driver",
				"ducks",
				"earthquake",
				"edge",
				"elephant",
				"enormous",
				"exactly",
				"expected",
				"factory",
				"fed",
				"fence",
				"fifth",
				"filled",
				"fingers",
				"fought",
				"fridge",
				"frightened",
				"frozen",
				"gang",
				"giving",
				"glad",
				"gloomy",
				"gnome",
				"golf",
				"gravity",
				"guard",
				"gum",
				"hamburger",
				"hamstring",
				"hang",
				"hated",
				"healthy",
				"heap",
				"homes",
				"hoped",
				"hugged",
				"hurting",
				"husband",
				"icecream",
				"jam",
				"jeans",
				"jobs",
				"joker",
				"kilometres",
				"knee",
				"knocking",
				"lab",
				"ladder",
				"languages",
				"laugh",
				"lily",
				"list",
				"lit",
				"lock",
				"lose",
				"magical",
				"mark",
				"master",
				"meant",
				"metal",
				"middles",
				"mist",
				"motor",
				"moving",
				"mums",
				"mystery",
				"necklace",
				"north",
				"noticed",
				"office",
				"older",
				"orphanage",
				"ostrich",
				"painted",
				"palm",
				"pansy",
				"part",
				"passes",
				"periods",
				"pictures",
				"pin",
				"planning",
				"plate",
				"player",
				"players",
				"pointed",
				"portal",
				"potion",
				"powers",
				"practise",
				"practised",
				"primary",
				"probe",
				"problems",
				"protect",
				"proud",
				"puzzle",
				"pyjamas",
				"question",
				"questions",
				"quit",
				"quite",
				"rained",
				"rainy",
				"random",
				"recognised",
				"rescue",
				"revenge",
				"rid",
				"rivers",
				"roared",
				"robbers",
				"rollercoaster",
				"rolling",
				"rough",
				"routine",
				"rule",
				"sandwich",
				"scarecrows",
				"scene",
				"shone",
				"sir",
				"sisters",
				"skateboard",
				"ski",
				"slaves",
				"smashed",
				"sneak",
				"sneaked",
				"socks",
				"sold",
				"solve",
				"spare",
				"speaker",
				"spotted",
				"sprint",
				"spun",
				"spy",
				"square",
				"squirted",
				"stacked",
				"steal",
				"steep",
				"stopping",
				"storey",
				"string",
				"students",
				"subject",
				"sugar",
				"superman",
				"supposed",
				"surfboard",
				"surfing",
				"surprised",
				"surrounded",
				"sweet",
				"talked",
				"taxi",
				"tear",
				"temple",
				"terrified",
				"thanks",
				"theme",
				"thinks",
				"tied",
				"toe",
				"tower",
				"traffic",
				"travel",
				"triangle",
				"trick",
				"tube",
				"twin",
				"types",
				"unfortunately",
				"using",
				"usually",
				"video",
				"visited",
				"voices",
				"walks",
				"wardrobe",
				"wars",
				"wash",
				"web",
				"wedding",
				"werewolf",
				"whistle",
				"whistling",
				"whoever",
				"wins",
				"winter",
				"wishes",
				"witch",
				"woken",
				"woman",
				"words",
				"yard",
				"zone",
				"accident",
				"actor",
				"adult",
				"age",
				"ages",
				"ah",
				"aimed",
				"amazed",
				"ancient",
				"ankle",
				"ants",
				"aren't",
				"arrive",
				"attacking",
				"backwards",
				"badly",
				"balcony",
				"bananas",
				"banger",
				"banging",
				"barked",
				"barking",
				"basket",
				"batteries",
				"bay",
				"beast",
				"begged",
				"belongings",
				"belt",
				"bench",
				"beside",
				"bet",
				"bin",
				"blonde",
				"blow",
				"bogey",
				"bombs",
				"borax",
				"boyfriend",
				"bracelet",
				"branch",
				"breathing",
				"breeze",
				"brushed",
				"bucket",
				"bunch",
				"calling",
				"calls",
				"camping",
				"cards",
				"caring",
				"carrot",
				"ceiling",
				"celebrate",
				"ceremony",
				"challenge",
				"chased",
				"chat",
				"cheer",
				"cheering",
				"chewing",
				"choice",
				"chopped",
				"Christmas",
				"cities",
				"classrooms",
				"clay",
				"clinic",
				"clone",
				"closet",
				"coffee",
				"collect",
				"colours",
				"comfortable",
				"compass",
				"complete",
				"concert",
				"consoles",
				"contact",
				"continued",
				"cover",
				"cracked",
				"crane",
				"crate",
				"crater",
				"creak",
				"creative",
				"creek",
				"creepy",
				"crows",
				"crystal",
				"cuddly",
				"damage",
				"defeat",
				"defeated",
				"destroying",
				"detention",
				"dialled",
				"dig",
				"directions",
				"dirty",
				"disco",
				"dolphins",
				"doors",
				"dots",
				"doughnuts",
				"drinking",
				"duel",
				"duty",
				"dying",
				"earlier",
				"ears",
				"east",
				"easy",
				"eclair",
				"eerie",
				"effect",
				"elevator",
				"eleven",
				"enemies",
				"enemy",
				"engines",
				"enjoyed",
				"enter",
				"erupted",
				"excitement",
				"exciting",
				"explain",
				"explained",
				"explorer",
				"exploring",
				"fear",
				"fifteen",
				"finds",
				"fired",
				"firstly",
				"fixed",
				"flashed",
				"flushed",
				"foods",
				"force",
				"forgave",
				"fourth",
				"frame",
				"friendly",
				"funeral",
				"galaxy",
				"garbage",
				"gasped",
				"gear",
				"ghosts",
				"given",
				"gives",
				"glasses",
				"glow",
				"glowed",
				"gong",
				"goodnight",
				"goods",
				"grandparents",
				"greeted",
				"grin",
				"group",
				"grown",
				"guarding",
				"guards",
				"guy's",
				"gym",
				"handball",
				"happens",
				"happiest",
				"happiness",
				"hardest",
				"hare",
				"hasn't",
				"hay",
				"heading",
				"headquarters",
				"heart",
				"heaven",
				"helmet",
				"heroes",
				"hiding",
				"hiking",
				"hired",
				"history",
				"hold",
				"honey",
				"hoping",
				"horror",
				"hovering",
				"hurry",
				"icecreams",
				"icing",
				"important",
				"impossible",
				"internet",
				"invasion",
				"invented",
				"items",
				"jet",
				"jewel",
				"joined",
				"kangaroos",
				"kennel",
				"kettle",
				"kicks",
				"known",
				"laid",
				"landing",
				"language",
				"laughter",
				"lava",
				"lay",
				"leading",
				"learning",
				"ledge",
				"lemon",
				"lemonade",
				"lessons",
				"lets",
				"liquid",
				"listening",
				"losing",
				"louder",
				"loudly",
				"loving",
				"lunchbox",
				"lying",
				"machines",
				"magnificent",
				"mall",
				"managed",
				"market",
				"marks",
				"marry",
				"mascot",
				"medal",
				"medicine",
				"melting",
				"meteorite",
				"miaow",
				"mighty",
				"mine",
				"miss",
				"moaned",
				"monkey's",
				"motorbikes",
				"mountains",
				"mumbled",
				"murder",
				"murdered",
				"mysterious",
				"needs",
				"neighbourhood",
				"newspaper",
				"nicer",
				"nicest",
				"none",
				"notice",
				"oil",
				"opens",
				"order",
				"ordinary",
				"ours",
				"oven",
				"overboard",
				"paddled",
				"paddock",
				"pair",
				"paradise",
				"parks",
				"parts",
				"patch",
				"paws",
				"pens",
				"per",
				"picnic",
				"pilot",
				"ping",
				"pirates",
				"pistol",
				"placed",
				"plain",
				"plank",
				"plant",
				"platform",
				"poison",
				"pole",
				"pong",
				"pony",
				"popped",
				"post",
				"posters",
				"powder",
				"practice",
				"private",
				"production",
				"pull",
				"pup",
				"puzzles",
				"quiz",
				"racers",
				"radio",
				"raft",
				"rainbow",
				"rains",
				"rats",
				"reinforcements",
				"reloaded",
				"repeated",
				"rhinoceros",
				"rider",
				"rocked",
				"rockpool",
				"rooks",
				"rooster",
				"ruck",
				"ruffle",
				"rush",
				"sale",
				"saturday",
				"sauce",
				"scar",
				"scariest",
				"scent",
				"schools",
				"scoop",
				"scooter",
				"searched",
				"seek",
				"seems",
				"seniors",
				"seventh",
				"shack",
				"shark",
				"shine",
				"shivered",
				"shocked",
				"shoot",
				"shorter",
				"shorts",
				"shotgun",
				"shots",
				"shouldn't",
				"shovel",
				"shower",
				"showing",
				"sides",
				"signs",
				"singing",
				"single",
				"sketch",
				"skiing",
				"skip",
				"slide",
				"sling",
				"smack",
				"smartest",
				"smooth",
				"soaked",
				"somebody",
				"sounds",
				"spaghetti",
				"sparkling",
				"sparkly",
				"spell",
				"spilt",
				"spinning",
				"spiral",
				"splashing",
				"spotty",
				"spray",
				"spread",
				"squished",
				"stadium",
				"staff",
				"stands",
				"state",
				"stolen",
				"stores",
				"stranger",
				"strike",
				"stripe",
				"stripes",
				"strongest",
				"struggled",
				"sty",
				"sucked",
				"suggested",
				"suit",
				"sunlight",
				"superheroes",
				"swing",
				"switch",
				"tables",
				"tapped",
				"teacher's",
				"tears",
				"teddies",
				"thief",
				"thousands",
				"throwing",
				"tie",
				"tigers",
				"tin",
				"tiring",
				"titanium",
				"tops",
				"tournament",
				"tracks",
				"transformed",
				"transported",
				"trapped",
				"trenches",
				"tress",
				"triple",
				"troll",
				"trucks",
				"tshirt",
				"turns",
				"type",
				"unpacked",
				"usual",
				"vampires",
				"vegetable",
				"vicious",
				"view",
				"visit",
				"vulture",
				"waist",
				"washed",
				"waste",
				"weapon",
				"weeds",
				"whale",
				"whatever",
				"whenever",
				"whilst",
				"whimpered",
				"winds",
				"wished",
				"wishing",
				"wolf",
				"wonderful",
				"wooden",
				"worm",
				"worry",
				"wreck",
				"you'll",
				"yum",
				"yummy",
				"zero",
				"zombie",
				"aboard",
				"absolutely",
				"academy",
				"acid",
				"acids",
				"action",
				"activated",
				"ad",
				"admit",
				"aerobics",
				"agree",
				"alley",
				"although",
				"ambulance",
				"amount",
				"amusement",
				"ape",
				"apostles",
				"apparently",
				"apples",
				"arcade",
				"area",
				"arena",
				"arriving",
				"ash",
				"asteroid",
				"astronaut",
				"attention",
				"attraction",
				"August",
				"aunt",
				"awful",
				"background",
				"badge",
				"balled",
				"balls",
				"banana",
				"banged",
				"barely",
				"bars",
				"basement",
				"basically",
				"bath",
				"bats",
				"battleground",
				"beasts",
				"beauty",
				"become",
				"becomes",
				"beer",
				"began",
				"begging",
				"beginning",
				"begins",
				"begun",
				"behaviour",
				"bend",
				"beneath",
				"bent",
				"bill",
				"blacker",
				"blamed",
				"blankets",
				"blast",
				"blind",
				"blinked",
				"block",
				"blowing",
				"blows",
				"boarding",
				"boards",
				"boats",
				"bobcat",
				"boiling",
				"bonfire",
				"boost",
				"boot",
				"bottle",
				"bounces",
				"bound",
				"bow",
				"boxing",
				"brave",
				"breed",
				"bridle",
				"brilliant",
				"bringing",
				"bubble",
				"budgies",
				"bump",
				"bumped",
				"bumps",
				"bumpy",
				"burned",
				"burst",
				"butterfly",
				"calmly",
				"canoes",
				"capital",
				"caravan",
				"cardboard",
				"career",
				"carnivore",
				"carnivores",
				"carpet",
				"carried",
				"carry",
				"cash",
				"caterpillar",
				"caused",
				"cavern",
				"cell",
				"cents",
				"cereal",
				"certainly",
				"chamber",
				"champion",
				"changing",
				"channel",
				"cheeks",
				"chewed",
				"chick",
				"chickens",
				"child",
				"children's",
				"chill",
				"chin",
				"chip",
				"choir",
				"chop",
				"chubby",
				"clear",
				"clones",
				"clump",
				"cockatiels",
				"cockroach",
				"code",
				"collected",
				"concentrate",
				"condition",
				"confidence",
				"controller",
				"convenient",
				"cookie",
				"cookies",
				"cordial",
				"cornflakes",
				"cost",
				"costume",
				"cosy",
				"cough",
				"counted",
				"countries",
				"courage",
				"cows",
				"crack",
				"crawling",
				"creaked",
				"creep",
				"crept",
				"crow",
				"crowding",
				"cub",
				"cubs",
				"cups",
				"cure",
				"curious",
				"curled",
				"curved",
				"cushions",
				"cutting",
				"dads",
				"dam",
				"dared",
				"daring",
				"descending",
				"designer",
				"designing",
				"difference",
				"disappointed",
				"disguised",
				"disgusting",
				"display",
				"dogs'",
				"dollar",
				"dolls",
				"doorway",
				"doughnut",
				"dragon's",
				"drama",
				"dreaming",
				"drinks",
				"dripping",
				"droid",
				"dropping",
				"droppings",
				"ducked",
				"eagles",
				"earrings",
				"eats",
				"eighteen",
				"elbow",
				"electric",
				"elephants",
				"embarrassing",
				"empty",
				"enchanted",
				"engine",
				"English",
				"enjoy",
				"enjoying",
				"entire",
				"ere",
				"estate",
				"evacuate",
				"example",
				"excitedly",
				"excuse",
				"executed",
				"exhausting",
				"experiment",
				"exploration",
				"explosion",
				"expression",
				"extinct",
				"extra",
				"faces",
				"fairyland",
				"fake",
				"fame",
				"faraway",
				"fetch",
				"finding",
				"firemen",
				"fireworks",
				"fitting",
				"fix",
				"fixing",
				"flames",
				"flip",
				"floating",
				"flu",
				"foggy",
				"freak",
				"freaked",
				"freedom",
				"freeze",
				"freezer",
				"frog",
				"frosty",
				"froze",
				"fully",
				"furry",
				"fury",
				"future",
				"gather",
				"gentle",
				"gigantic",
				"giraffes",
				"girlfriend",
				"glittering",
				"goats",
				"goodbyes",
				"gorgeous",
				"gothic",
				"grandma's",
				"grant",
				"grave",
				"gravitational",
				"greatest",
				"grenade",
				"groaned",
				"groove",
				"grounded",
				"growl",
				"grubs",
				"guinea",
				"guitar",
				"hailing",
				"hairy",
				"handed",
				"handle",
				"handstand",
				"hares",
				"harm",
				"hatch",
				"hates",
				"hats",
				"heat",
				"heavier",
				"height",
				"helium",
				"he'll",
				"herbivores",
				"here's",
				"hermit",
				"hideous",
				"higher",
				"highest",
				"hills",
				"hip",
				"hits",
				"hitting",
				"hobbies",
				"hooked",
				"horn",
				"hose",
				"hostel",
				"hover",
				"howling",
				"hug",
				"hung",
				"hunk",
				"hunters",
				"ignore",
				"ignored",
				"imagined",
				"imagining",
				"immediately",
				"including",
				"information",
				"ingredients",
				"initials",
				"insane",
				"insects",
				"interested",
				"interview",
				"invent",
				"invention",
				"investigate",
				"invite",
				"jacket",
				"jams",
				"jar",
				"jellybean",
				"jellyfish",
				"juice",
				"keeps",
				"kidnapped",
				"killer",
				"killing",
				"kiss",
				"knives",
				"lair",
				"lamb",
				"lambs",
				"lane",
				"lap",
				"laps",
				"laughs",
				"leaf",
				"lean",
				"leggings",
				"lemons",
				"lifetime",
				"lifted",
				"lighting",
				"likely",
				"lines",
				"literacy",
				"loads",
				"locker",
				"log",
				"longest",
				"loose",
				"lottery",
				"luggage",
				"lungs",
				"maker",
				"mammals",
				"manage",
				"mane",
				"manual",
				"march",
				"mash",
				"massage",
				"matches",
				"mate",
				"matter",
				"maze",
				"meal",
				"means",
				"mechanic",
				"medals",
				"message",
				"miaowed",
				"miaows",
				"mice",
				"milk",
				"miner",
				"mirrors",
				"mission",
				"mix",
				"mixed",
				"mixture",
				"monday",
				"mood",
				"motocross",
				"mount",
				"mower",
				"mrs",
				"muddy",
				"musical",
				"mysteries",
				"name's",
				"neighbour's",
				"neither",
				"newsman",
				"nil",
				"ninth",
				"notes",
				"obviously",
				"October",
				"odd",
				"oddly",
				"often",
				"olden",
				"Olympics",
				"omnivores",
				"opposite",
				"orders",
				"organised",
				"orphan",
				"otherwise",
				"outback",
				"outfit",
				"overgrown",
				"owners",
				"paddling",
				"pain",
				"pairs",
				"panicking",
				"parade",
				"parent",
				"parent's",
				"parrot",
				"particular",
				"partied",
				"patted",
				"peace",
				"pear",
				"pegs",
				"pencil",
				"people's",
				"pepper",
				"perfume",
				"petal",
				"picking",
				"piercing",
				"pinched",
				"pipe",
				"pipes",
				"pirate",
				"pistols",
				"pitches",
				"planes",
				"plastic",
				"plenty",
				"pods",
				"pointy",
				"poked",
				"policeman",
				"popstar",
				"possums",
				"poster",
				"potions",
				"pour",
				"pouring",
				"president",
				"prix",
				"pro",
				"professional",
				"promised",
				"property",
				"puddles",
				"puffed",
				"pulling",
				"pure",
				"puts",
				"quarters",
				"queen's",
				"questioned",
				"races",
				"railway",
				"rattled",
				"realise",
				"recently",
				"reckon",
				"rectangle",
				"register",
				"relax",
				"release",
				"relieved",
				"reminded",
				"remote",
				"rented",
				"repairer",
				"reply",
				"reporting",
				"reptiles",
				"restaurant",
				"rested",
				"retired",
				"return",
				"returned",
				"ribbon",
				"riders",
				"rifle",
				"roasted",
				"rockets",
				"ropes",
				"rose",
				"roses",
				"row",
				"royal",
				"ruins",
				"ruler",
				"rules",
				"rumbling",
				"sail",
				"salad",
				"sample",
				"sandy",
				"Saturdays",
				"saucepan",
				"saucer",
				"scales",
				"scanned",
				"scanning",
				"scarf",
				"scientists",
				"scrape",
				"scraped",
				"screen",
				"seahorses",
				"searching",
				"seats",
				"secondly",
				"self",
				"send",
				"sending",
				"settle",
				"shade",
				"shadows",
				"shaggy",
				"shake",
				"shall",
				"shampoo",
				"shaped",
				"sharp",
				"sheet",
				"shell",
				"Sheridan",
				"shiny",
				"shipping",
				"shiver",
				"shock",
				"shore",
				"shoulder",
				"shouting",
				"shoved",
				"shrank",
				"shrieked",
				"sill",
				"skier",
				"skies",
				"skipping",
				"slamball",
				"slamdunks",
				"slap",
				"slapped",
				"slides",
				"slipping",
				"slow",
				"slowed",
				"slower",
				"smaller",
				"smart",
				"snacks",
				"snap",
				"sniffed",
				"snowing",
				"snowy",
				"snuffle",
				"snuggled",
				"soup",
				"speak",
				"speedy",
				"spiders",
				"spider's",
				"spied",
				"spins",
				"splattered",
				"spoke",
				"spookier",
				"spots",
				"sprained",
				"sprayed",
				"sprinted",
				"sprinting",
				"sprocket",
				"squad",
				"squashed",
				"starvation",
				"statues",
				"status",
				"steel",
				"storms",
				"stranded",
				"streets",
				"stripy",
				"stronger",
				"stuffed",
				"stumbled",
				"submarine",
				"suitcases",
				"summer's",
				"sunday",
				"sung",
				"sunset",
				"sunshine",
				"supermarket",
				"supreme",
				"survive",
				"survived",
				"suspended",
				"swinging",
				"swirling",
				"swirly",
				"swooped",
				"swung",
				"system",
				"tackle",
				"tag",
				"talks",
				"target",
				"taught",
				"teaching",
				"tease",
				"teenager",
				"tem",
				"tenth",
				"tents",
				"terminator",
				"terror",
				"thanked",
				"threatened",
				"throughout",
				"thunderstorms",
				"tick",
				"ticket",
				"tight",
				"tights",
				"till",
				"timer",
				"tip",
				"tiptoed",
				"toilets",
				"tooth",
				"topic",
				"torches",
				"tortoise",
				"torture",
				"tow",
				"towel",
				"toxic",
				"tractor",
				"trail",
				"trap",
				"trashed",
				"tricks",
				"trimming",
				"tucked",
				"tumbling",
				"tune",
				"turtle",
				"twins",
				"twisted",
				"unconscious",
				"understand",
				"underwear",
				"undies",
				"university",
				"unlocked",
				"unlucky",
				"unpack",
				"unusual",
				"unwrapped",
				"uses",
				"valuable",
				"vampire",
				"van",
				"velvet",
				"videos",
				"villagers",
				"vines",
				"violence",
				"visible",
				"volcanoes",
				"waking",
				"walls",
				"warn",
				"warned",
				"warning",
				"waterfall",
				"webs",
				"we'd",
				"weighed",
				"wetsuit",
				"we've",
				"wherever",
				"whining",
				"whip",
				"whipped",
				"who's",
				"whose",
				"widow",
				"wife's",
				"windy",
				"witches",
				"wobbly",
				"workmen",
				"works",
				"worms",
				"worries",
				"writes",
				"yawn",
				"yours",
				"zapped",
				"zoomed",
				"abalone",
				"abandoned",
				"abducted",
				"abilities",
				"abnormal",
				"accelerated",
				"accommodate",
				"accommodation",
				"accused",
				"achievement",
				"acrobatics",
				"act",
				"active",
				"activities",
				"activity",
				"actors",
				"actress",
				"actresses",
				"added",
				"addicted",
				"addle",
				"adenoids",
				"admiring",
				"adorable",
				"adore",
				"advantage",
				"adventures",
				"advertisement",
				"afford",
				"aged",
				"agency",
				"ahs",
				"aisle",
				"al",
				"alarm",
				"alert",
				"alleged",
				"allergic",
				"alongs",
				"altogether",
				"amazingly",
				"ambled",
				"among",
				"amounts",
				"amputate",
				"amusing",
				"anaconda",
				"analysis",
				"andy",
				"angel",
				"angels",
				"anger",
				"angles",
				"angrily",
				"animated",
				"antelope",
				"antennae",
				"anxious",
				"anxiously",
				"anybody",
				"anytime",
				"apart",
				"apartment",
				"apartments",
				"apologies",
				"appears",
				"April",
				"aqua",
				"aquamarine",
				"aquatic",
				"arch",
				"archery",
				"arrested",
				"arrows",
				"ashes",
				"asks",
				"assigned",
				"association",
				"asthma",
				"astounded",
				"asylum",
				"atomic",
				"attached",
				"attended",
				"aunties",
				"Australian",
				"autograph",
				"autographs",
				"automated",
				"automatic",
				"award",
				"awarded",
				"awoken",
				"axe",
				"baby's",
				"backhand",
				"backpack",
				"backpacks",
				"backstage",
				"bacon",
				"baddies",
				"badges",
				"bait",
				"balance",
				"balanced",
				"bald",
				"ballet",
				"ballistic",
				"balloon",
				"bamboo",
				"ban",
				"band",
				"bandage",
				"bare",
				"barrackers",
				"barricade",
				"base",
				"baseball",
				"bashed",
				"basic",
				"bass",
				"bathing",
				"batters",
				"bays",
				"beanie",
				"beaten",
				"becoming",
				"bedrooms",
				"beef",
				"beeping",
				"begin",
				"behaved",
				"believed",
				"believes",
				"bells",
				"belong",
				"below",
				"besides",
				"beware",
				"beyond",
				"bicycle",
				"bid",
				"bikini",
				"billions",
				"bills",
				"binoculars",
				"bird's",
				"birth",
				"biscuits",
				"biting",
				"bits",
				"blackness",
				"blades",
				"blasted",
				"blink",
				"blizzards",
				"blocking",
				"blocks",
				"blond",
				"blotches",
				"blown",
				"bluey",
				"BMX",
				"boarded",
				"boarders",
				"bodies",
				"boil",
				"boils",
				"bolted",
				"bolts",
				"bombed",
				"bonus",
				"booby",
				"booing",
				"bookshelf",
				"booster",
				"booth",
				"bore",
				"borrow",
				"borrowed",
				"bosses",
				"bothered",
				"bounce",
				"bouncing",
				"bowl",
				"boxer",
				"boyfriends",
				"boys'",
				"bragging",
				"brains",
				"brat",
				"braver",
				"breaking",
				"breaths",
				"breathtaking",
				"breeding",
				"breeds",
				"brick",
				"bricks",
				"bridges",
				"brightest",
				"brightly",
				"brings",
				"brittle",
				"brothers'",
				"bruises",
				"brushes",
				"brushing",
				"buckets",
				"buckled",
				"bud",
				"buddies",
				"buddy",
				"budge",
				"budget",
				"budgie",
				"bug",
				"bugs",
				"bulgey",
				"bulgy",
				"bullet",
				"bumping",
				"bunched",
				"bunks",
				"buried",
				"burn",
				"burns",
				"burped",
				"burrow",
				"bursting",
				"bury",
				"buses",
				"busily",
				"byt",
				"cackle",
				"cafe",
				"cages",
				"cakes",
				"calmed",
				"calming",
				"canaries",
				"canary",
				"cancer",
				"cane",
				"cannibals",
				"cannons",
				"cannot",
				"canoe",
				"cans",
				"cap",
				"capsized",
				"captains",
				"capture",
				"card",
				"cardigan",
				"cares",
				"caretaker",
				"carport",
				"carrying",
				"car's",
				"carton",
				"cartoon",
				"cast",
				"casting",
				"castles",
				"catchers",
				"cauliflower",
				"caved",
				"caveman",
				"caves",
				"ccol",
				"celebrated",
				"celebration",
				"cent",
				"centimetre",
				"centimetres",
				"century",
				"certain",
				"certificates",
				"chain",
				"champions",
				"chanted",
				"chaos",
				"chapter",
				"character",
				"characters",
				"charge",
				"charging",
				"chasey",
				"chasy",
				"chatter",
				"chattered",
				"cheat",
				"cheating",
				"checkers",
				"cheek",
				"cheered",
				"cheerful",
				"cheetah",
				"chef",
				"cherry",
				"chew",
				"chews",
				"chicken's",
				"child's",
				"chilli",
				"chimney",
				"chimneys",
				"chimpanzees",
				"chives",
				"chocolates",
				"chopper",
				"chores",
				"chosen",
				"chuckled",
				"church",
				"circles",
				"civil",
				"clack",
				"clanked",
				"clanky",
				"clap",
				"clapped",
				"classic",
				"classmate",
				"clearly",
				"clicked",
				"clicking",
				"climbers",
				"climbing",
				"cloth",
				"cloths",
				"clubrooms",
				"clue",
				"coach's",
				"coast",
				"coats",
				"cockatiel",
				"cockatoo",
				"cockroaches",
				"coconuts",
				"coffees",
				"coldness",
				"collapse",
				"collects",
				"colossal",
				"colts",
				"combination",
				"comedy",
				"comets",
				"comfort",
				"comforting",
				"comic",
				"commentators",
				"companions",
				"compassion",
				"competitions",
				"complaining",
				"completely",
				"completing",
				"concerned",
				"concerns",
				"concerts",
				"concrete",
				"conditioner",
				"cone",
				"cones",
				"connect",
				"connected",
				"connection",
				"considerate",
				"constellations",
				"container",
				"contest",
				"contestants",
				"continue",
				"continues",
				"conversation",
				"convincing",
				"cooking",
				"cooled",
				"cool's",
				"cop",
				"copied",
				"copping",
				"copy",
				"cords",
				"coriander",
				"costumes",
				"cottages",
				"coughed",
				"courageously",
				"covers",
				"crackle",
				"crackling",
				"craft",
				"crammed",
				"crashes",
				"craters",
				"creaky",
				"create",
				"creates",
				"creating",
				"creator",
				"creeping",
				"creeps",
				"crew",
				"criminals",
				"crisis",
				"croaked",
				"croaky",
				"crossed",
				"crossing",
				"crowded",
				"crown",
				"crumbled",
				"crush",
				"crutches",
				"cubbies",
				"cubes",
				"cuddle",
				"cuddled",
				"cuddles",
				"cuddling",
				"cuffed",
				"cultures",
				"cupboards",
				"cupcakes",
				"curl",
				"curly",
				"cursive",
				"curtains",
				"customs",
				"daddy",
				"damaged",
				"damp",
				"dams",
				"dancer",
				"danger",
				"dare",
				"darkened",
				"darling",
				"dart",
				"darted",
				"dash",
				"date",
				"daydreaming",
				"daylights",
				"daytime",
				"deadly",
				"deal",
				"dearly",
				"decapitate",
				"decide",
				"deck",
				"declared",
				"decorated",
				"decorations",
				"deers",
				"defeating",
				"definitely",
				"delighted",
				"delightful",
				"demanded",
				"demandingly",
				"denied",
				"depending",
				"depths",
				"descend",
				"describe",
				"description",
				"deserted",
				"desks",
				"desperate",
				"dessert",
				"detective",
				"detentions",
				"determined",
				"devastating",
				"devastation",
				"di",
				"diablo",
				"dictionary",
				"dies",
				"difficult",
				"diggers",
				"dinner's",
				"direct",
				"directly",
				"disappear",
				"disappearing",
				"disappears",
				"disaster",
				"discipline",
				"discover",
				"discovered",
				"discovers",
				"discus",
				"discussed",
				"discussing",
				"disguise",
				"disguises",
				"disliked",
				"dislocated",
				"dismissed",
				"dissolving",
				"distant",
				"distracted",
				"distracting",
				"distraction",
				"disturbed",
				"dived",
				"dives",
				"division",
				"divisions",
				"doctors",
				"dodged",
				"doll's",
				"dolly",
				"dome",
				"dominoes",
				"doom",
				"doorbells",
				"doorstop",
				"double",
				"dragged",
				"drank",
				"dreamed",
				"dreamily",
				"dreamless",
				"dribble",
				"dribbling",
				"dried",
				"drill",
				"drilled",
				"drip",
				"drivers",
				"driver's",
				"drives",
				"driveway",
				"drizzling",
				"droids",
				"drum",
				"dry",
				"dude",
				"duffer",
				"dull",
				"dummy's",
				"dumped",
				"dumping",
				"dungeon",
				"dunk",
				"dunks",
				"duster",
				"dusty",
				"dye",
				"dyed",
				"eager",
				"earth",
				"earthling",
				"easier",
				"easily",
				"eater",
				"eaters",
				"effects",
				"eighties",
				"elderly",
				"elected",
				"election",
				"electricity",
				"electrocuted",
				"electronic",
				"element",
				"elves",
				"emailed",
				"embarrassed",
				"emergency",
				"empress",
				"emptying",
				"encouraged",
				"encouragement",
				"endangered",
				"energy",
				"entered",
				"entering",
				"enters",
				"entertainment",
				"envelope",
				"environment",
				"environmental",
				"equally",
				"equipment",
				"estimated",
				"estimation",
				"everyday",
				"everyone's",
				"eveywhere",
				"evreyday",
				"exact",
				"exam",
				"examination",
				"exclaimed",
				"excursion",
				"exercise",
				"exercised",
				"exhibits",
				"expecting",
				"experience",
				"experiencing",
				"explorers",
				"explorer's",
				"explosive",
				"extraterrestrial",
				"eyeballs",
				"fabulous",
				"facial",
				"fading",
				"fair",
				"falg",
				"fallen",
				"families",
				"family's",
				"fan",
				"fangs",
				"fans",
				"farmed",
				"farmers",
				"fascinating",
				"fascination",
				"faster",
				"fastest",
				"father's",
				"fault",
				"feared",
				"February",
				"feeding",
				"feels",
				"felines",
				"fellow",
				"ferns",
				"festival",
				"fever",
				"fiddled",
				"fiftieth",
				"fights",
				"figure",
				"figured",
				"filth",
				"filthy",
				"firing",
				"firm",
				"firmly",
				"fitfully",
				"fitted",
				"flamingo",
				"flamingoes",
				"flap",
				"flapping",
				"flashing",
				"flavour",
				"flick",
				"flight",
				"float",
				"floss",
				"flowing",
				"flown",
				"fluke",
				"focus",
				"fog",
				"folded",
				"folks",
				"footballers",
				"footballs",
				"footprints",
				"forced",
				"forehand",
				"forehead",
				"forgotten",
				"formed",
				"forming",
				"forwards",
				"fossils",
				"freely",
				"friends'",
				"friendships",
				"fries",
				"fro",
				"frogs",
				"fungus",
				"furious",
				"furniture",
				"further",
				"fused",
				"futuristic",
				"fuzzy",
				"galactic",
				"gaMes",
				"gaming",
				"gangs",
				"gas",
				"gasp",
				"gat",
				"gathered",
				"geared",
				"geeky",
				"geese",
				"gem",
				"gems",
				"gemstone",
				"gender",
				"general",
				"gently",
				"germy",
				"ghost's",
				"giants",
				"giddy",
				"giggled",
				"ginger",
				"girlfriends",
				"girl's",
				"girls'",
				"glinting",
				"glittered",
				"glorious",
				"glove",
				"gloves",
				"glowing",
				"goalie",
				"goat",
				"gobsmacked",
				"goggles",
				"gorge",
				"gorilla",
				"grabbbing",
				"grades",
				"graduated",
				"graduation",
				"grandfather",
				"grandmother",
				"grandpa",
				"grandson",
				"grasp",
				"gravy",
				"gray",
				"grazed",
				"greener",
				"greens",
				"greeny",
				"greetings",
				"grenades",
				"groans",
				"groceries",
				"grocery",
				"groomer",
				"groovy",
				"growled",
				"growling",
				"grub",
				"gruelling",
				"grump",
				"grunted",
				"guard's",
				"guesses",
				"guide",
				"guitars",
				"gumboots",
				"gushing",
				"guts",
				"gymnastics",
				"hadn't",
				"hail",
				"haircut",
				"hairier",
				"halftime",
				"hallelujah",
				"hallway",
				"halo",
				"halt",
				"hammer",
				"hammocks",
				"hamster",
				"hamsters",
				"handbag",
				"handballed",
				"handballing",
				"handgun",
				"handsome",
				"hanged",
				"happenings",
				"happier",
				"harmless",
				"hatched",
				"haunt",
				"haven",
				"hazel",
				"headband",
				"headmaster",
				"headphones",
				"health",
				"hearted",
				"heater",
				"heavily",
				"heel",
				"helicopters",
				"helpers",
				"helpful",
				"helps",
				"hen",
				"herbivore",
				"herd",
				"hesitate",
				"hidden",
				"hideout",
				"highway",
				"hilarious",
				"hippopotamuses",
				"hippy",
				"hissing",
				"hive",
				"holds",
				"hollow",
				"hom",
				"homeless",
				"hook",
				"hops",
				"horns",
				"horrific",
				"host",
				"hostages",
				"hostess",
				"hosting",
				"hotdogs",
				"hum",
				"hundreds",
				"hunt",
				"hunted",
				"hunting",
				"hurl",
				"hurling",
				"hurriedly",
				"hurts",
				"hut",
				"hutch",
				"hypersleep",
				"icy",
				"ideas",
				"imagination",
				"imaginations",
				"immigrants",
				"implanted",
				"importance",
				"included",
				"increase",
				"incredible",
				"independence",
				"indigo",
				"indistinguishable",
				"indoor",
				"injured",
				"injuries",
				"injury",
				"insight",
				"instantly",
				"instructed",
				"interchange",
				"interviews",
				"invade",
				"invaded",
				"inventing",
				"investigations",
				"invitation",
				"invitations",
				"invited",
				"ir",
				"irresistible",
				"It",
				"itself",
				"ivory",
				"jabbed",
				"jack",
				"jacks",
				"jammed",
				"jazz",
				"jets",
				"jetty",
				"jingle",
				"join",
				"jokes",
				"judge",
				"juggling",
				"juicy",
				"junior",
				"junkyard",
				"karate",
				"keepers",
				"kelp",
				"keyring",
				"keys",
				"kidding",
				"kids'",
				"kig",
				"kills",
				"kilograms",
				"kinder",
				"kingdom",
				"king's",
				"kneed",
				"knees",
				"knifed",
				"knowing",
				"koala",
				"labrador",
				"labradors",
				"laces",
				"ladders",
				"lady's",
				"lamb's",
				"laneway",
				"lapping",
				"laptop's",
				"lasted",
				"lastly",
				"latch",
				"lately",
				"latest",
				"launcher",
				"lavender",
				"law",
				"layby",
				"layer",
				"layers",
				"laying",
				"lazily",
				"leaders",
				"leads",
				"leafless",
				"league",
				"leak",
				"leant",
				"leaps",
				"lectured",
				"leftover",
				"legend",
				"legendary",
				"leopard",
				"leotard",
				"letters",
				"lettuce",
				"level",
				"levitation",
				"liberty",
				"librarian",
				"lick",
				"licked",
				"licking",
				"lid",
				"lifejackets",
				"lighthouse",
				"likea",
				"limo",
				"limousine",
				"lined",
				"lipstick",
				"listened",
				"literally",
				"litter",
				"littlest",
				"lizard",
				"loaded",
				"loaf",
				"local",
				"lockers",
				"locket",
				"locks",
				"logged",
				"logs",
				"lollipops",
				"losers",
				"loudest",
				"lube",
				"lump",
				"lyrics",
				"madman",
				"madness",
				"major",
				"male",
				"manager",
				"mango",
				"man's",
				"maple",
				"March",
				"marching",
				"margin",
				"margins",
				"markers",
				"marking",
				"marshmallow",
				"marshmallows",
				"mask",
				"masks",
				"massaged",
				"mast",
				"mat",
				"material",
				"materials",
				"meaner",
				"meanwhile",
				"medium",
				"melted",
				"mental",
				"mention",
				"meow",
				"mermaids",
				"merry",
				"messed",
				"messy",
				"metallic",
				"meteorites",
				"metropolitan",
				"microchip",
				"mid",
				"milkbar",
				"milked",
				"milky",
				"millimetres",
				"millions",
				"mirror's",
				"mischief",
				"misery",
				"missiles",
				"mistake",
				"mitten",
				"mo",
				"mobs",
				"model",
				"models",
				"mole",
				"moles",
				"monk",
				"monkeybars",
				"monopoly",
				"moods",
				"moons",
				"moral",
				"mosquito",
				"moss",
				"mossy",
				"mostly",
				"mouthguard",
				"mouths",
				"movement",
				"Ms",
				"mu",
				"multiplication",
				"mummies",
				"murderer",
				"muscle",
				"muscles",
				"musty",
				"mut",
				"mutant",
				"mutated",
				"muttered",
				"mutts",
				"mythical",
				"nagging",
				"nails",
				"naked",
				"nap",
				"nasal",
				"nation",
				"national",
				"native",
				"natives",
				"nature",
				"nearing",
				"neatly",
				"nectar",
				"needing",
				"needle",
				"needles",
				"neighbours'",
				"nephew",
				"nerve",
				"net",
				"newspapers",
				"nibbling",
				"nickname",
				"nights",
				"nineteen",
				"nodded",
				"noises",
				"non",
				"northern",
				"noticing",
				"nozzle",
				"nudge",
				"nudged",
				"nudging",
				"nuisance",
				"numbers",
				"o",
				"obedient",
				"obey",
				"object",
				"objects",
				"observes",
				"observing",
				"obstacle",
				"occasion",
				"occasionally",
				"occurred",
				"officer",
				"official",
				"offs",
				"oink",
				"omnivore",
				"one's",
				"onion",
				"opener",
				"opponent",
				"oranges",
				"orangutan",
				"ordering",
				"organise",
				"organising",
				"orphan's",
				"ouch",
				"ought",
				"outer",
				"outfits",
				"overall",
				"overcome",
				"overheard",
				"overloaded",
				"overthrow",
				"ow",
				"owls",
				"owned",
				"owns",
				"paces",
				"packets",
				"packs",
				"pad",
				"paddle",
				"paddocks",
				"pages",
				"paid",
				"panel",
				"panels",
				"pantry",
				"papers",
				"parachute",
				"paralysed",
				"parcel",
				"parties",
				"partners",
				"passenger",
				"passport",
				"pat",
				"paths",
				"pathway",
				"patience",
				"pats",
				"patter",
				"pattern",
				"pause",
				"payed",
				"peacefully",
				"peacock",
				"peak",
				"peanut",
				"pearl",
				"pedicure",
				"peed",
				"peeked",
				"peel",
				"pelted",
				"pencils",
				"penguin",
				"perfectly",
				"perform",
				"performance",
				"performances",
				"perhaps",
				"permanent",
				"persistent",
				"personality",
				"perspiration",
				"pest",
				"pestering",
				"petrifying",
				"petrol",
				"pharaoh's",
				"photos",
				"piano",
				"pie",
				"pies",
				"pill",
				"pillow",
				"pills",
				"pimple",
				"pinch",
				"pines",
				"pinkish",
				"pit",
				"pitchforks",
				"pitter",
				"planned",
				"plans",
				"planted",
				"plates",
				"plating",
				"platypus",
				"playdough",
				"playtime",
				"pleaded",
				"pleasure",
				"pliers",
				"plop",
				"plumber",
				"plummeted",
				"pluses",
				"plush",
				"ply",
				"pneumonia",
				"poach",
				"poisonous",
				"polluted",
				"pommel",
				"portable",
				"possible",
				"pouch",
				"pounce",
				"pounced",
				"pound",
				"pounded",
				"pounds",
				"pours",
				"practiced",
				"practises",
				"practising",
				"prank",
				"precious",
				"predator",
				"prepare",
				"preparing",
				"press",
				"presses",
				"pressing",
				"pressure",
				"pretend",
				"pretended",
				"pretending",
				"previously",
				"price",
				"princes",
				"princesses",
				"print",
				"prison",
				"prize",
				"professor",
				"profile",
				"progress",
				"properly",
				"properties",
				"protection",
				"protested",
				"proudly",
				"proven",
				"provisions",
				"puddle",
				"puff",
				"puffball",
				"puller",
				"pulls",
				"pulse",
				"pumped",
				"punch",
				"punching",
				"punishment",
				"punishments",
				"punk",
				"puppies'",
				"pups",
				"purpose",
				"purr",
				"purse",
				"pussy",
				"pyramids",
				"quest",
				"quietly",
				"racer",
				"racquet",
				"radioactive",
				"radish",
				"raged",
				"rags",
				"raid",
				"rainbows",
				"raincoat",
				"rainforest",
				"rally",
				"rammed",
				"ramp",
				"rampage",
				"rampaging",
				"ramps",
				"ranger",
				"rapidly",
				"rascal",
				"rather",
				"rattling",
				"ray",
				"rays",
				"reach",
				"reaching",
				"realm",
				"received",
				"recognise",
				"records",
				"recovered",
				"recruited",
				"reddish",
				"referee",
				"refill",
				"refuel",
				"refused",
				"related",
				"relaxed",
				"relay",
				"released",
				"remains",
				"remarkable",
				"remarried",
				"remembers",
				"reminds",
				"renovated",
				"rent",
				"rental",
				"repacking",
				"replay",
				"reporter",
				"repulsive",
				"rescued",
				"response",
				"results",
				"returning",
				"revved",
				"reward",
				"rewarded",
				"rewind",
				"rhinos",
				"ribs",
				"rice",
				"ridden",
				"ridiculous",
				"rightful",
				"rip",
				"ripe",
				"ripples",
				"rising",
				"risk",
				"roaming",
				"roaring",
				"robbery",
				"rockpools",
				"rod",
				"roller",
				"rolls",
				"roofs",
				"root",
				"rosellas",
				"rosy",
				"rotten",
				"routines",
				"royalty",
				"rub",
				"rubbed",
				"rubber",
				"rubies",
				"rubs",
				"ruby",
				"ruffles",
				"rugby",
				"rumour",
				"runners",
				"runs",
				"rushing",
				"rustle",
				"rustling",
				"sack",
				"saddle",
				"sadly",
				"sadness",
				"safely",
				"safety",
				"sailed",
				"samll",
				"sandcastle",
				"sank",
				"sapce",
				"sarcastically",
				"satring",
				"saturated",
				"sausages",
				"saver",
				"saving",
				"saviour",
				"scares",
				"scarier",
				"scenes",
				"schnitzel",
				"scholarship",
				"school's",
				"scissors",
				"scout",
				"scram",
				"scrapbooking",
				"scratched",
				"screech",
				"scurrying",
				"seagulls",
				"seahorse",
				"seas",
				"seatbelt",
				"seating",
				"secrets",
				"section",
				"security",
				"seed",
				"seeder",
				"seeds",
				"seeing",
				"seem",
				"sees",
				"selling",
				"sells",
				"senior",
				"sense",
				"sensed",
				"sentenced",
				"separately",
				"September",
				"series",
				"serious",
				"servant",
				"servants",
				"servant's",
				"served",
				"serves",
				"service",
				"services",
				"setting",
				"seventeen",
				"seventy",
				"severe",
				"shakes",
				"shame",
				"share",
				"shattered",
				"shattering",
				"sheared",
				"sheep's",
				"sheer",
				"sheered",
				"shelves",
				"sheriff's",
				"shift",
				"shifting",
				"shirt",
				"shirts",
				"shivering",
				"shook",
				"shopped",
				"shopper",
				"shotput",
				"should've",
				"shouts",
				"shows",
				"shreds",
				"shrinker",
				"shrug",
				"shutting",
				"shuttle",
				"shy",
				"sic",
				"sickness",
				"sideways",
				"sighted",
				"sights",
				"signal",
				"silky",
				"silver",
				"silverbeet",
				"sings",
				"sinking",
				"sirens",
				"site",
				"sits",
				"situation",
				"sixteen",
				"sixth",
				"sixty",
				"sized",
				"skateboarder",
				"skateboarding",
				"skated",
				"skatepark",
				"skater",
				"skidded",
				"skids",
				"skill",
				"skills",
				"skins",
				"skull",
				"slammed",
				"slapping",
				"slaughter",
				"slaughtered",
				"slave",
				"slaving",
				"slayed",
				"slayer",
				"slaying",
				"sled",
				"sledge",
				"sliced",
				"slid",
				"slider",
				"sliding",
				"slight",
				"slingshot",
				"slip",
				"slithering",
				"slot",
				"slowing",
				"smacked",
				"smallest",
				"smashing",
				"smelling",
				"smells",
				"smiled",
				"smiles",
				"smiling",
				"smirk",
				"smoked",
				"sniping",
				"snobby",
				"snort",
				"snorted",
				"snowball",
				"snowflake",
				"snowpeas",
				"snugly",
				"soared",
				"social",
				"society",
				"socket",
				"softball",
				"softest",
				"softly",
				"solar",
				"soldier",
				"soldiers",
				"solid",
				"solved",
				"solving",
				"sombrero",
				"somebody's",
				"someday",
				"somehow",
				"someone's",
				"somersault",
				"something's",
				"sore",
				"sores",
				"sorted",
				"soul",
				"souls",
				"soups",
				"sour",
				"soursob",
				"soursobs",
				"south",
				"souvenir",
				"sowed",
				"soya",
				"spaceship",
				"spade",
				"sparkle",
				"sparkled",
				"spatula",
				"speaking",
				"speaks",
				"spear",
				"species",
				"speechless",
				"spells",
				"spending",
				"spewed",
				"sphere",
				"spies",
				"spiky",
				"spine",
				"splash",
				"splits",
				"spoilt",
				"sponge",
				"spoon",
				"spreads",
				"spree",
				"squares",
				"squawk",
				"squawking",
				"squeezed",
				"squid",
				"squishing",
				"squishy",
				"stabbed",
				"stable",
				"stables",
				"staircase",
				"stammered",
				"stamping",
				"stapler",
				"stardom",
				"starfish",
				"staright",
				"starter",
				"starve",
				"starving",
				"stated",
				"statue",
				"steady",
				"stealing",
				"steals",
				"steered",
				"steering",
				"stepping",
				"stepson",
				"sternly",
				"sticker",
				"stink",
				"stinks",
				"stinky",
				"stitch",
				"stocks",
				"stoked",
				"stomp",
				"stomping",
				"stones",
				"stool",
				"storeys",
				"stories",
				"stormier",
				"straightaway",
				"strangers",
				"strangest",
				"strawberries",
				"strawberry",
				"stray",
				"strength",
				"stressed",
				"stretch",
				"stretched",
				"strict",
				"strikes",
				"strings",
				"stroke",
				"stroll",
				"strolled",
				"strolling",
				"stromy",
				"study",
				"stupidest",
				"stuttered",
				"style",
				"styles",
				"sub",
				"subjects",
				"substitute",
				"success",
				"successfully",
				"suffered",
				"suitcase",
				"suits",
				"sum",
				"summit",
				"summoned",
				"sums",
				"sundaes",
				"Sundays",
				"sunk",
				"sun's",
				"superb",
				"superhero",
				"supply",
				"surely",
				"surf",
				"surface",
				"surfers",
				"surgery",
				"surprising",
				"surprisingly",
				"surrounding",
				"surroundings",
				"suspicious",
				"swallowed",
				"swarm",
				"sway",
				"swayed",
				"swearing",
				"sweat",
				"sweating",
				"sweaty",
				"sweets",
				"swerving",
				"swimmers",
				"swings",
				"swiped",
				"swished",
				"swishing",
				"switched",
				"switching",
				"symmetrical",
				"syrup",
				"systems",
				"t",
				"tablespoon",
				"tackles",
				"tails",
				"takeaways",
				"tale",
				"talkies",
				"talky",
				"tamed",
				"tank",
				"tanker",
				"tape",
				"tapping",
				"targeted",
				"taste",
				"tattered",
				"technically",
				"technology",
				"teddy's",
				"tee",
				"teen",
				"teh",
				"teleport",
				"teleportation",
				"telescope",
				"television",
				"temper",
				"temperature",
				"temperatures",
				"term",
				"terrain",
				"terribly",
				"terrific",
				"terrifying",
				"textas",
				"thankfully",
				"thanking",
				"theft",
				"theirs",
				"they'll",
				"thieves",
				"thoughts",
				"threatening",
				"thrill",
				"thrilled",
				"thrilling",
				"throat",
				"throne",
				"tickly",
				"tide",
				"tidy",
				"tile",
				"tiles",
				"timber",
				"tipper",
				"tipping",
				"tiptoeing",
				"tokens",
				"tomato",
				"tomatoes",
				"tomorrow's",
				"ton",
				"tone",
				"tongue",
				"tons",
				"tonsils",
				"tools",
				"toppings",
				"toppled",
				"tornado",
				"torturing",
				"tossed",
				"total",
				"toucans",
				"touch",
				"touches",
				"tough",
				"tour",
				"tourist",
				"towels",
				"towering",
				"towns",
				"trade",
				"trained",
				"trainer",
				"trampolines",
				"transform",
				"transport",
				"trapdoor",
				"trapdoors",
				"trapeze",
				"trapping",
				"traps",
				"travelling",
				"treated",
				"treetops",
				"trembled",
				"trembling",
				"trembly",
				"trickled",
				"trickling",
				"trips",
				"trolley",
				"trophies",
				"trotted",
				"trunks",
				"trusted",
				"tsunami",
				"tubes",
				"tumbled",
				"tummy",
				"tunneling",
				"turnout",
				"turtles",
				"twelves",
				"twinkling",
				"twit",
				"twitch",
				"twitches",
				"twitchy",
				"tyre",
				"ultrafast",
				"umbrella",
				"uncivilised",
				"uncles",
				"uncle's",
				"uncomfortable",
				"undefeatable",
				"undefeated",
				"underneath",
				"unfamiliar",
				"unfold",
				"unicorns",
				"unique",
				"united",
				"universe",
				"unless",
				"unlocks",
				"unpacking",
				"unstuck",
				"ups",
				"upstages",
				"upwards",
				"urged",
				"ute",
				"utes",
				"valleys",
				"vanishes",
				"vegemite",
				"vegetables",
				"vegetarian",
				"vegies",
				"vehicles",
				"version",
				"vet",
				"vey",
				"villain",
				"violent",
				"visiting",
				"vivid",
				"volleyball",
				"vomit",
				"vote",
				"voucher",
				"waitress",
				"wakes",
				"walker",
				"walkie",
				"walky",
				"wand",
				"wandered",
				"wanting",
				"warehouse",
				"warmish",
				"warmth",
				"warriors",
				"wasting",
				"waterfalls",
				"waterhole",
				"weak",
				"weaker",
				"weaponry",
				"weapons",
				"webcam",
				"weddings",
				"wedges",
				"weekly",
				"weight",
				"weirder",
				"weirdest",
				"weirdo",
				"welcomed",
				"werewolf's",
				"werewolves",
				"whacked",
				"wheat",
				"wheel",
				"wheels",
				"whimpering",
				"whisper",
				"whispering",
				"whoops",
				"whoosh",
				"wide",
				"widescreen",
				"widow's",
				"willow",
				"winding",
				"winner",
				"winter's",
				"wiped",
				"wiping",
				"wired",
				"wirey",
				"wise",
				"wisely",
				"wisp",
				"wizard",
				"wizards",
				"wnt",
				"wobbled",
				"wombats",
				"woodpecker",
				"woofed",
				"wool",
				"worker",
				"workshops",
				"wounded",
				"wraps",
				"wreckage",
				"wrecking",
				"wrench",
				"wrinkly",
				"writer",
				"writers",
				"y",
				"yawned",
				"yells",
				"yelp",
				"yippee",
				"yoghurt",
				"yourself",
				"zap",
				"zebras",
				"zigzagging",
				"zip",
				"zoom",
				"color",
				"website",
				"snowman",
				"soil",
				"minecraft",
				"terraria",
				"griffpatch",
				"griff",
				"forum",
				"wiki",
				"yep",
				"uh",
				"omg",
				"idk",
				"ikr",
				"c",
				"astounding",
				"filter",
				"filtered",
				"testing",
				"debugging",
				"debug",
				"buggy",
				"YAY",
				"reload",
				"load",
				"restart",
				"respawn",
				"argh",
				"oops",
				"erase",
				"erasing",
				"deleting",
				"yeah",
				"unlimited",
				"script",
				"user",
				"username",
				"Multiplayer",
				"laggy",
				"lag",
				"stuttering",
				"stutter",
				"glitch",
				"glitchy",
				"dizzy",
				"whoa",
				"cant",
				"potato",
				"ahhh",
				"ahh",
				"D",
				"S",
				"epic",
				"aww",
				"bruh",
				"brah",
				"hmm",
				"hmmm",
				"ummm",
				"umm",
				"nope",
				"LOL",
				"comment",
				"comments",
				"thats",
				"secretly",
				"Efficient",
				"plz",
				"survival",
				"reset",
				"programming",
				"python",
				"java",
				"pickle",
				"spam",
				"spamming",
				"S'up",
				"Howdy",
				"Purposefully",
				"Compress",
				"Undead",
				"Ensure",
				"m8s",
				"spleef",
				"mojang",
				"Parkour",
				"graveyard",
				"xylophone",
				"woah",
				"ugh",
				"wat",
				"china",
				"ima",
				"thx",
				"wanna",
				"dont",
				"dug",
				"Simplified",
				"Hotbar",
				"YOLO",
				"Pickaxe",
				"Variable",
				"Tool",
				"u",
				"r",
				"lamp",
				"yarg",
				"chatting",
				"server",
				"update",
				"carve",
				"painting",
				"cobble",
				"notch",
				"yarn",
				"thread",
				"remix",
				"pitted",
				"eeyup",
				"jk",
				"pvp",
				"modify",
				"expects",
				"expect",
				"diggy",
				"count",
				"counting",
				"counts",
				"counter",
				"XD",
				"bro",
				"yo",
				"grief",
				"sup",
				"auto",
				"heal",
				"program",
				"programme",
				"programs",
				"scripts",
				"nametag",
				"okay",
				"wot",
				"m8",
				"lagging",
				"scratcher",
				"appear",
				"Shrek",
				"extend",
				"crafting",
				"destroys",
				"allow",
				"0",
				"helo",
				"ello",
				"task",
				"tasks",
				"spelt",
				"account",
				"chopping",
				"chipped",
				"projects",
				"enabled",
				"math",
				"mathematics",
				"Zealand",
				"nyan ",
				"acorn",
				"iron",
				"ore",
				"acorns",
				"mins",
				"min",
				"marker",
				"pleased",
				"assume",
				"planting",
				"saplings",
				"sapling",
				"recent",
				"uppermost",
				"placement",
				"repeat",
				"tab",
				"inventory",
				"inv",
				"tricky",
				"bother",
				"gotta",
				"furnace",
				"crafted",
				"smelting",
				"workbench",
				"Considering",
				"benches",
				"benchs",
				"chandelier",
				"chandeliers",
				"sawmill",
				"sawmills",
				"furnaces",
				"anvil",
				"anvils",
				"scratcharia",
				"sandstone",
				"griefing",
				"platforms",
				"signpost",
				"fancy",
				"confusing",
				"brb",
				"fiddle",
				"drag",
				"ingredient",
				"recipes",
				"swag",
				"fresh",
				"bunker",
				"mode",
				"community",
				"tickle",
				"belly",
				"nyan",
				"chests",
				"e",
				"flag",
				"flags",
				"issues",
				"select",
				"selection",
				"item",
				"sprite",
				"sprites",
				"bookcase",
				"useful",
				"equip",
				"builder",
				"builders",
				"valuables",
				"bunnies",
				"mob",
				"mining",
				"mean",
				"bank",
				"banks",
				"banking",
				"slime",
				"gel",
				"slimes",
				"platinum",
				"sofa",
				"checking",
				"reports",
				"request",
				"1000's",
				"simple",
				"demon",
				"whats",
				"synchronised",
				"YouTube",
				"claim",
				"original",
				"claiming",
				"personal",
				"claimed",
				"refresh",
				"clever",
				"logic",
				"re",
				"np",
				"nm",
				"gg",
				"crab",
				"moves",
				"scroll",
				"changes",
				"nah",
				"frongs",
				"x",
				"ha",
				"uhh",
				"ur",
				"gliching",
				"ebug",
				"aggressive",
				"passive",
				"fences",
				"spawned",
				"spawn",
				"q",
				"pardon",
				"gosh",
				"involved",
				"simplify",
				"tutor",
				"im",
				"fires",
				"uk",
				"whether",
				"dire",
				"ire",
				"structured",
				"lags",
				"command",
				"swaps",
				"clicks",
				"direction",
				"spawning",
				"dask",
				"less",
				"default",
				"stocking",
				"commands",
				"offscreen",
				"settled",
				"worth",
				"happenned",
				"flow",
				"scrolling",
				"k",
				"brightness",
				"scripting",
				"issue",
				"ahha",
				"blade",
				"obsidian",
				"kil",
				"ooh",
				"gills",
				"coding",
				"peacful",
				"excellent",
				"remove",
				"console",
				"moo",
				"corrupt",
				"reloading",
				"particles",
				"loading",
				"levels",
				"calculate",
				"data",
				"process",
				"happenning",
				"blame",
				"ya",
				"obsidion",
				"slabs",
				"shared",
				"upper",
				"lower",
				"axes",
				"phew",
				"glitching",
				"spin",
				"happends",
				"obvious",
				"flowed",
				"hopfully",
				"anyhow",
				"joins",
				"passages",
				"require",
				"tinker",
				"indeed",
				"em",
				"v2",
				"v",
				"squirrels",
				"squirrel",
				"firefly",
				"fireflies",
				"lockups",
				"kiln",
				"hmmd",
				"hides",
				"cause",
				"disconnect",
				"affects",
				"speeds",
				"tags",
				"upsetting",
				"pushing",
				"limit",
				"speech",
				"spawns",
				"dea",
				"hellforge",
				"dongeon",
				"gen"],
			"isPersistent": false,
			"x": 111,
			"y": 36,
			"width": 371,
			"height": 326,
			"visible": false
		},
		{
			"listName": "whitespace",
			"contents": [" ",
				"\/",
				"\\",
				"#",
				",",
				".",
				"!",
				":",
				"\"",
				"?",
				"(",
				")",
				"@",
				";",
				"=",
				"£",
				"$",
				"%",
				"+",
				"*",
				"<",
				">"],
			"isPersistent": false,
			"x": 77,
			"y": 35,
			"width": 405,
			"height": 327,
			"visible": false
		},
		{
			"listName": "bad",
			"contents": [],
			"isPersistent": false,
			"x": 5,
			"y": 68,
			"width": 477,
			"height": 294,
			"visible": false
		},
		{
			"listName": "Height",
			"contents": [125,
				126,
				128,
				130,
				131,
				132,
				133,
				133,
				132,
				132,
				132,
				131,
				130,
				129,
				128,
				127,
				126,
				126,
				126,
				126,
				126,
				127,
				128,
				128,
				128,
				129,
				129,
				129,
				129,
				130,
				129,
				129,
				129,
				128,
				128,
				127,
				127,
				126,
				126,
				126,
				125,
				126,
				126,
				127,
				127,
				128,
				128,
				128,
				129,
				129,
				129,
				129,
				129,
				129,
				129,
				128,
				128,
				127,
				126,
				125,
				124,
				123,
				122,
				122,
				121,
				121,
				121,
				121,
				122,
				122,
				123,
				123,
				123,
				123,
				123,
				123,
				124,
				124,
				123,
				123,
				122,
				122,
				122,
				121,
				121,
				121,
				121,
				121,
				121,
				121,
				121,
				121,
				121,
				122,
				122,
				122,
				123,
				124,
				124,
				124,
				124,
				124,
				125,
				125,
				125,
				126,
				126,
				126,
				126,
				125,
				124,
				124,
				123,
				122,
				122,
				121,
				121,
				121,
				121,
				121,
				121,
				122,
				122,
				122,
				123,
				123,
				124,
				124,
				124,
				125,
				125,
				125,
				125,
				125,
				125,
				125,
				125,
				125,
				124,
				124,
				124,
				124,
				124,
				124,
				124,
				125,
				125,
				126,
				127,
				128,
				128,
				129,
				129,
				130,
				130,
				131,
				131,
				131,
				131,
				131,
				131,
				131,
				131,
				131,
				130,
				130,
				130,
				129,
				129,
				128,
				128,
				128,
				128,
				128,
				128,
				128,
				128,
				128,
				128,
				129,
				129,
				129,
				129,
				129,
				130,
				130,
				129,
				129,
				129,
				129,
				129,
				128,
				128,
				128,
				128,
				128,
				127,
				127,
				128,
				128,
				128,
				129,
				129,
				130,
				131,
				132,
				132,
				132,
				133,
				133,
				132,
				132,
				132,
				131,
				130,
				130,
				129,
				128,
				128,
				127,
				126,
				126,
				126,
				126,
				126,
				126,
				126,
				125,
				126,
				126,
				126,
				127,
				127,
				127,
				127,
				127,
				126,
				125,
				125,
				125,
				124,
				124,
				123,
				123,
				122,
				122,
				122,
				121,
				121,
				121,
				121,
				121,
				122,
				122,
				122,
				123,
				124,
				125,
				125,
				126,
				126,
				126,
				127,
				126,
				126,
				126,
				125,
				125,
				124,
				124,
				123,
				122,
				121,
				121,
				121,
				121,
				121,
				122,
				122,
				122,
				123,
				123,
				123,
				123,
				123,
				123,
				123,
				123,
				123,
				122,
				122,
				122,
				122,
				121,
				121,
				121,
				121,
				121,
				121,
				121,
				121,
				121,
				121,
				121,
				121,
				122,
				123,
				123,
				124,
				125,
				126,
				127,
				127,
				128,
				128,
				129,
				129,
				128,
				128,
				127,
				127,
				126,
				125,
				125,
				125,
				124,
				124,
				124,
				125,
				125,
				125,
				126,
				127,
				128,
				129,
				130,
				130,
				130,
				131,
				130,
				130,
				130,
				130,
				129,
				128,
				127,
				126,
				125,
				125,
				124],
			"isPersistent": false,
			"x": 245,
			"y": 20,
			"width": 237,
			"height": 342,
			"visible": false
		},
		{
			"listName": "_ChestSpawn",
			"contents": ["1. Block ID",
				"2. Name",
				"3. Probability",
				"4. Amont",
				"",
				"107",
				"Builder Potion",
				"0",
				"1",
				"",
				"159",
				"Diamond Staff",
				"0",
				"1",
				"",
				"158",
				"Blue Phaseblade",
				"0",
				"1",
				"",
				"148",
				"Platinum Sword",
				"0",
				"1",
				"",
				"147",
				"Platinum Axe",
				"0",
				"1",
				"",
				"146",
				"Platinum Pickaxe",
				"0",
				"1",
				"",
				"145",
				"Gold Sword",
				"0",
				"1",
				"",
				"143",
				"Gold Pickaxe",
				"0",
				"1",
				"",
				"144",
				"Gold Axe",
				"0",
				"1"],
			"isPersistent": false,
			"x": 84,
			"y": 56,
			"width": 398,
			"height": 306,
			"visible": false
		},
		{
			"listName": "_ChestSpawnCommon",
			"contents": ["1. Block ID",
				"2. Name",
				"3. Probability",
				"4. Amount",
				"",
				"061",
				"Chain",
				"0.33",
				"50",
				"",
				"039 077 082 142",
				"Iron Bar, Gold Bar, Silver Bar, Platinum Bar",
				"0.5",
				"15",
				"",
				"195",
				"Lesser Healing Potion",
				"0.5",
				"5",
				"",
				"108 109 198 200 201",
				"Mining Potion, Swiftness Potion, Featherfall Potion, Obsidian Skin Potion, Gills Potion",
				"0.67",
				"3",
				"",
				"196",
				"Healing Potion",
				"0.1",
				"1",
				"",
				"047",
				"Torch",
				"0.5",
				"20",
				"",
				"300",
				"Santa Mask",
				"0.33",
				"1"],
			"isPersistent": false,
			"x": 58,
			"y": 48,
			"width": 377,
			"height": 279,
			"visible": false
		},
		{
			"listName": "Grow",
			"contents": [],
			"isPersistent": false,
			"x": 250,
			"y": 55,
			"width": 232,
			"height": 307,
			"visible": false
		},
		{
			"listName": "_Recipes",
			"contents": ["1. Recipe Name",
				"2. Item number",
				"3. Count Crafted",
				"4. Crafting Station (0=hands, 1=work bench, 2=furnace, 3=sawmill, 4=anvil, 5=heavy work bench, 6=Hellstone forge, 7=Glass Kiln, 8=Demon Alter)",
				"5. Recipe Items ### ### ### (tile ids - lowest first)",
				"6. Recipe Counts n n n (tile counts)",
				"",
				"Work Bench",
				"37",
				"1",
				"0",
				"25",
				"10",
				"",
				"Furnace",
				"38",
				"1",
				"0",
				"21 25",
				"8 3",
				"",
				"Anvil",
				"59",
				"1",
				"1",
				"39",
				"4",
				"",
				"Sawmill",
				"60",
				"1",
				"1",
				"25 39 61",
				"5 2 1",
				"",
				"Heavy Work Bench",
				"123",
				"1",
				"4",
				"25 39",
				"7 5",
				"",
				"Glass Kiln",
				"248",
				"1",
				"4",
				"39 47",
				"10 6",
				"",
				"Torch",
				"47",
				"3",
				"0",
				"25",
				"1",
				"",
				"Stone Brick",
				"42",
				"1",
				"2",
				"21",
				"1",
				"",
				"Stone Slab",
				"114",
				"1",
				"5",
				"21",
				"1",
				"",
				"Sand Brick",
				"51",
				"1",
				"2",
				"27",
				"1",
				"",
				"Sand Slab",
				"115",
				"1",
				"5",
				"27",
				"1",
				"",
				"Diamond Slab",
				"113",
				"20",
				"5",
				"68 111",
				"20 1",
				"",
				"Brick",
				"74",
				"1",
				"2",
				"72",
				"1",
				"",
				"Silver Brick",
				"84",
				"1",
				"2",
				"21 81",
				"1 1",
				"",
				"Gold Brick",
				"79",
				"1",
				"2",
				"21 76",
				"1 1",
				"",
				"Glass",
				"68",
				"1",
				"2",
				"27",
				"1",
				"",
				"Iron Bar",
				"39",
				"1",
				"2",
				"29",
				"1",
				"",
				"Silver Bar",
				"82",
				"1",
				"2",
				"81",
				"2",
				"",
				"Gold Bar",
				"77",
				"1",
				"2",
				"76",
				"2",
				"",
				"Platinum Bar",
				"142",
				"1",
				"2",
				"141",
				"2",
				"",
				"Hellstone Bar",
				"219",
				"1",
				"6",
				"218 194",
				"2 1",
				"",
				"Demonite Bar",
				"297",
				"1",
				"2",
				"295",
				"1",
				"",
				"Chocolate",
				"154",
				"5",
				"2",
				"152",
				"1",
				"",
				"Mushroom Block",
				"274",
				"4",
				"3",
				"94",
				"1",
				"",
				"Wooden Platform",
				"36",
				"1",
				"0",
				"25",
				"1",
				"",
				"Glass Platform",
				"255",
				"2",
				"7",
				"68",
				"1",
				"",
				"Beam",
				"127",
				"2",
				"3",
				"25",
				"1",
				"",
				"Wooden Door",
				"35",
				"1",
				"1",
				"25",
				"5",
				"",
				"Iron Door",
				"239",
				"1",
				"4",
				"39",
				"3",
				"",
				"Glass Door",
				"240",
				"1",
				"7",
				"68",
				"3",
				"",
				"Obsidian Door",
				"241",
				"1",
				"4",
				"194",
				"5",
				"",
				"Chest",
				"57",
				"1",
				"3",
				"25 39",
				"6 2",
				"",
				"Sign",
				"58",
				"1",
				"1",
				"25",
				"4",
				"",
				"Chair",
				"46",
				"1",
				"1",
				"25",
				"3",
				"",
				"Bed",
				"30",
				"1",
				"3",
				"25",
				"10",
				"",
				"Glass Bed",
				"260",
				"1",
				"7",
				"68",
				"8",
				"",
				"Obsidian Bed",
				"263",
				"1",
				"6",
				"194",
				"8",
				"",
				"Gold Bed",
				"266",
				"1",
				"4",
				"77",
				"8",
				"",
				"Mushroom Bed",
				"269",
				"1",
				"3",
				"274",
				"8",
				"",
				"Glass Lantern",
				"251",
				"1",
				"7",
				"68 47",
				"2 1",
				"",
				"Chandelier",
				"52",
				"1",
				"4",
				"39 47 61",
				"2 2 1",
				"",
				"Gold Chandelier",
				"98",
				"1",
				"4",
				"47 61 77",
				"2 1 2",
				"",
				"Glass Chandelier",
				"252",
				"1",
				"7",
				"47 61 68",
				"2 1 2",
				"",
				"Candelabra",
				"99",
				"1",
				"4",
				"47 77",
				"2 3",
				"",
				"Bench",
				"53",
				"1",
				"3",
				"25",
				"4",
				"",
				"Sofa",
				"128",
				"1",
				"3",
				"25",
				"5",
				"",
				"Dresser",
				"54",
				"1",
				"3",
				"25",
				"7",
				"",
				"Wooden Sink",
				"254",
				"1",
				"1",
				"25 215",
				"3 1",
				"",
				"Table",
				"55",
				"1",
				"1",
				"25",
				"4",
				"",
				"Iron Table",
				"278",
				"1",
				"4",
				"39",
				"4",
				"",
				"Obsidian Table",
				"281",
				"1",
				"6",
				"194",
				"4",
				"",
				"Mushroom Table",
				"284",
				"1",
				"3",
				"274",
				"4",
				"",
				"Glass Table",
				"250",
				"1",
				"7",
				"68",
				"4",
				"",
				"Barrel",
				"56",
				"1",
				"3",
				"25 39",
				"5 1",
				"",
				"Chain",
				"61",
				"10",
				"4",
				"39",
				"1",
				"",
				"Bucket",
				"214",
				"1",
				"4",
				"39",
				"2",
				"",
				"Grandfather Clock",
				"62",
				"1",
				"3",
				"25 39 68",
				"5 2 3",
				"",
				"Bookcase",
				"121",
				"1",
				"3",
				"25",
				"10",
				"",
				"Piano",
				"131",
				"1",
				"3",
				"25",
				"9",
				"",
				"Fence",
				"96",
				"4",
				"1",
				"25",
				"1",
				"",
				"Iron Fence",
				"97",
				"4",
				"4",
				"39",
				"1",
				"",
				"Bath Tub",
				"101",
				"1",
				"4",
				"39",
				"4",
				"",
				"Trash Can",
				"102",
				"1",
				"4",
				"39",
				"3",
				"",
				"Toilet",
				"103",
				"1",
				"4",
				"39",
				"3",
				"",
				"Cooking Pot",
				"104",
				"1",
				"4",
				"25 39",
				"1 4",
				"",
				"Pot Plant",
				"116",
				"1",
				"1",
				"72 85",
				"1 1",
				"",
				"Bug Net",
				"124",
				"1",
				"1",
				"25 82",
				"2 1",
				"",
				"Wooden Sword",
				"137",
				"1",
				"1",
				"25",
				"5",
				"",
				"Iron Sword",
				"138",
				"1",
				"4",
				"39",
				"3",
				"",
				"Gold Sword",
				"145",
				"1",
				"4",
				"77",
				"3",
				"",
				"Platinum Sword",
				"148",
				"1",
				"4",
				"142",
				"3",
				"",
				"Iron Axe",
				"23",
				"1",
				"4",
				"25 39",
				"1 3",
				"",
				"Gold Axe",
				"144",
				"1",
				"4",
				"25 77",
				"1 3",
				"",
				"Platinum Axe",
				"147",
				"1",
				"4",
				"25 142",
				"1 3",
				"",
				"Iron Pickaxe",
				"22",
				"1",
				"4",
				"25 39",
				"2 4",
				"",
				"Gold Pickaxe",
				"143",
				"1",
				"4",
				"25 77",
				"2 4",
				"",
				"Platinum Pickaxe",
				"146",
				"1",
				"4",
				"25 142",
				"2 4",
				"",
				"Diamond Staff",
				"159",
				"1",
				"4",
				"111 142",
				"2 5",
				"",
				"Molten Pickaxe",
				"157",
				"1",
				"4",
				"219",
				"5",
				"",
				"Light's Bane",
				"298",
				"1",
				"4",
				"297",
				"10",
				"",
				"Fiery Greatsword",
				"259",
				"1",
				"4",
				"219",
				"5",
				"",
				"Silver Coin",
				"227",
				"1",
				"0",
				"226",
				"100",
				"",
				"Gold Coin",
				"228",
				"1",
				"0",
				"227",
				"100",
				"",
				"Suspicious Looking Eye",
				"293",
				"1",
				"8",
				"150",
				"6"],
			"isPersistent": false,
			"x": 56,
			"y": 32,
			"width": 384,
			"height": 270,
			"visible": false
		},
		{
			"listName": "sort",
			"contents": ["0",
				4,
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				8,
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				5,
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				2,
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				1,
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				1,
				1,
				1,
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				50,
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				53,
				1,
				"0",
				1,
				"0"],
			"isPersistent": false,
			"x": 107,
			"y": 43,
			"width": 375,
			"height": 319,
			"visible": false
		},
		{
			"listName": "Stations",
			"contents": ["0", "0", "0", "0", "0", "0", "0", "0"],
			"isPersistent": false,
			"x": 89,
			"y": 110,
			"width": 393,
			"height": 252,
			"visible": false
		},
		{
			"listName": "tmpList",
			"contents": ["227"],
			"isPersistent": false,
			"x": 287,
			"y": 116,
			"width": 195,
			"height": 246,
			"visible": false
		},
		{
			"listName": "Liquid",
			"contents": [],
			"isPersistent": false,
			"x": 48,
			"y": 77,
			"width": 384,
			"height": 285,
			"visible": false
		},
		{
			"listName": "LiquidIgnore",
			"contents": [],
			"isPersistent": false,
			"x": 297,
			"y": 293,
			"width": 185,
			"height": 179,
			"visible": false
		},
		{
			"listName": "ang",
			"contents": ["-30", "40", "105", "140"],
			"isPersistent": false,
			"x": 31,
			"y": 122,
			"width": 451,
			"height": 240,
			"visible": false
		},
		{
			"listName": "Cloud Data",
			"contents": ["19122108583747166798517172422181677721510339013448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021310", "15102107283747171816685687308167772158167772151010", "18102107283747171816685687308167772158167772151010", "18102107283747171816685687308167772158167772151010", "19102107283747171816685687308167772158167772151010", "0102107283747171816685687308167772158167772151010", "14102107283747171816685687308167772158167772151010", "19102107283747171816685687308167772158167772151010"],
			"isPersistent": false,
			"x": 6,
			"y": 10,
			"width": 476,
			"height": 352,
			"visible": false
		},
		{
			"listName": "Player Data",
			"contents": ["",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"19122108583747166798517172422181677721510339013448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021313448604504021310",
				58.147,
				"0",
				"",
				"134486045040213134486045040213134486045040213134486045040213134486045040213134486045040213134486045040213134486045040213134486045040213134486045040213134486045040213134486045040213134486045040213134486045040213134486045040213134486045040213134486045040213134486045040213134486045040213134486045040213134486045040213134486045040213134486045040213134486045040213134486045040213134486045040213",
				"728",
				"",
				"15102107283747171816685687308167772158167772151010",
				"-99",
				"0",
				"",
				"",
				"0",
				"",
				"12102107283747171816685687308167772158167772151010",
				59.609,
				"1",
				"",
				"",
				"0",
				"",
				"18102107283747171816685687308167772158167772151010",
				40.274,
				"1",
				"",
				"",
				"0",
				"",
				"19102107283747171816685687308167772158167772151010",
				"-99",
				"0",
				"",
				"",
				"0",
				"",
				"0102107283747171816685687308167772158167772151010",
				24.546,
				"1",
				"",
				"",
				"0",
				"",
				"14102107283747171816685687308167772158167772151010",
				"-99",
				"0",
				"",
				"",
				"0",
				"",
				"19102107283747171816685687308167772158167772151010",
				56.142,
				"1",
				"",
				"",
				"0"],
			"isPersistent": false,
			"x": 12.65,
			"y": 12,
			"width": 469,
			"height": 350,
			"visible": false
		},
		{
			"listName": "_change",
			"contents": [20, "0", "0", 2, "0", "0", "0", "0"],
			"isPersistent": false,
			"x": 0,
			"y": 0,
			"width": 482,
			"height": 362,
			"visible": false
		},
		{
			"listName": "_Broadcast",
			"contents": [],
			"isPersistent": false,
			"x": 0,
			"y": 0,
			"width": 482,
			"height": 362,
			"visible": false
		},
		{
			"listName": "_Console",
			"contents": ["trifant007 has joined the game."],
			"isPersistent": false,
			"x": 232,
			"y": 70,
			"width": 250,
			"height": 292,
			"visible": false
		},
		{
			"listName": "big",
			"contents": [2, 5, 7],
			"isPersistent": false,
			"x": 151,
			"y": 59,
			"width": 331,
			"height": 303,
			"visible": false
		},
		{
			"listName": "Save Game",
			"contents": [],
			"isPersistent": false,
			"x": 101,
			"y": 153,
			"width": 296,
			"height": 191,
			"visible": false
		},
		{
			"listName": "Warning",
			"contents": [" gtbokxl",
				1,
				"pshglw",
				1,
				"qbtrks`'#$",
				1,
				"ikmgrln),-+",
				1,
				"pllslskllmyrzmrmsx#",
				1,
				"`$|~'))",
				1,
				"`h|~'))",
				1,
				"ibfslwmq",
				"2",
				"oocf^vjgh",
				14,
				"aoqtblm),-'",
				"2",
				"lshqevja+*-\/",
				4,
				"okkq`ccp",
				"2",
				"`sbui($",
				"15",
				"rblui($",
				"15",
				"f_baucwe",
				14,
				"o_cf^vjgh",
				14,
				"mb`mcvxfgc",
				"2",
				"`ltrhasym+*.",
				"2",
				"osgbosfwi{i{w{o",
				"2",
				"go_m$'",
				"2",
				"qecmd'*'",
				"2",
				"!d`f",
				"2",
				"m_gh^dpmv+..,",
				"2",
				"`gtddwc*,",
				"2",
				"_ehsvd",
				"2",
				"``fdj,v",
				"2",
				"gei ",
				12,
				"o_rkucklb+",
				"2",
				"`siivYxxy{ye",
				"2",
				"gknqe$&;",
				"2",
				"_ehmci",
				"2",
				"`gtdcexd+-",
				"2",
				"gofctfxfxtxl",
				"2",
				"ckgoblplf",
				"2",
				"]kijvqth+'-",
				12,
				"os_mswkvw{djpr",
				16,
				"fk]qkkxggwk}|{",
				"2",
				"asgrhkiuiinp\/***",
				"2",
				"^mi]datygwk",
				"2",
				"ka_'~",
				"2",
				"fsnmtd)))",
				4],
			"isPersistent": false,
			"x": 57,
			"y": 34,
			"width": 425,
			"height": 328,
			"visible": false
		},
		{
			"listName": "_Level",
			"contents": [],
			"isPersistent": false,
			"x": 63,
			"y": 85,
			"width": 355,
			"height": 277,
			"visible": false
		},
		{
			"listName": "@Broadcast",
			"contents": [9872, 4960, 0, "@TICK"],
			"isPersistent": false,
			"x": 45,
			"y": 106,
			"width": 437,
			"height": 256,
			"visible": false
		},
		{
			"listName": "@PlayerData",
			"contents": [],
			"isPersistent": false,
			"x": 367,
			"y": 52,
			"width": 115,
			"height": 310,
			"visible": false
		},
		{
			"listName": "@PlayerNames",
			"contents": ["trifant007",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"21",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				0,
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"0",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				""],
			"isPersistent": false,
			"x": 71,
			"y": 40,
			"width": 411,
			"height": 322,
			"visible": false
		},
		{
			"listName": "@PlayerOffset",
			"contents": [1, 2, 3, 4, 5, 6, 7, 8, 9],
			"isPersistent": false,
			"x": 395,
			"y": 111,
			"width": 89,
			"height": 251,
			"visible": false
		},
		{
			"listName": "@Place",
			"contents": ["-1", "-1", "-1", "-1", "-1", "-1", "-1", "-1", "-1", "-1"],
			"isPersistent": false,
			"x": 295,
			"y": 38,
			"width": 187,
			"height": 324,
			"visible": false
		},
		{
			"listName": "_Chat",
			"contents": ["",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"0",
				"0",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				""],
			"isPersistent": false,
			"x": 146,
			"y": 115,
			"width": 312,
			"height": 220,
			"visible": false
		},
		{
			"listName": "_inv",
			"contents": ["211",
				"1",
				"212",
				"1",
				"213",
				"1",
				"124",
				"1",
				"47",
				"5",
				"155",
				"1",
				"0",
				"0",
				"31",
				"8",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0"],
			"isPersistent": false,
			"x": 42.95,
			"y": 40.45,
			"width": 439,
			"height": 321,
			"visible": false
		},
		{
			"listName": "_TileData",
			"contents": ["1. Tile ID",
				"2. Name",
				"3. Solid (-1=Places other type, 0=No, 0.5=beam, 1=Tree Type, 2=Veg Type, 2.5=Liquid, 3=SitFloor, 3.25=Fence, 3.5=Sit on Table, 4 & 4.5=Door, 5=Wall\/Floor (5.25, 5.375), 5.5=Chain, 6=2wide, 6.5=2x2, 7=Platform, 7.5=2wide Table, 10=Solid, -3=Alive, -3.5=Alive Water)",
				"4. Material (1=Potion, 2=Summon, 3=Mask, 10=Wood, 11=Veg, 20=dirt, 30=Stone, 50=Ore, 60=Metal, 63=Metal Chest, 70=Hellstone, 100=Mob, 1001=Pick, 1002=Axe, 1003=Sword, 1004=Staff, 1098=Bucket, 1099=Net) ",
				"5. Dig Speed",
				"6. Harvest ID",
				"7. Paired ID (0 not paired)",
				"",
				"1",
				"Grass",
				"10",
				"20",
				"22",
				"2",
				"2",
				"",
				"2",
				"Dirt",
				"10",
				"20",
				"22",
				"2",
				"1",
				"",
				"3",
				"Tree",
				"1",
				"10",
				"105",
				"25",
				"0",
				"",
				"4",
				"Tree",
				"1.5",
				"10",
				"105",
				"25",
				"0",
				"",
				"5",
				"Tree",
				"1.5",
				"10",
				"105",
				"25",
				"0",
				"",
				"6",
				"Tree",
				"1.5",
				"10",
				"105",
				"25",
				"0",
				"",
				"7",
				"Tree",
				"1.5",
				"10",
				"105",
				"25",
				"0",
				"",
				"8",
				"Tree",
				"1.5",
				"10",
				"105",
				"25",
				"0",
				"",
				"9",
				"Tree",
				"1.5",
				"10",
				"105",
				"25",
				"0",
				"",
				"10",
				"Tree",
				"1.5",
				"10",
				"105",
				"25",
				"0",
				"",
				"11",
				"Tree",
				"1.5",
				"10",
				"105",
				"25",
				"0",
				"",
				"12",
				"Tree",
				"1.5",
				"10",
				"105",
				"25",
				"0",
				"",
				"13",
				"Tree",
				"1.5",
				"10",
				"105",
				"25",
				"0",
				"",
				"14",
				"Tree",
				"1.5",
				"10",
				"105",
				"25",
				"0",
				"",
				"15",
				"Tree",
				"1.5",
				"10",
				"105",
				"25",
				"0",
				"",
				"16",
				"Tree",
				"1.5",
				"10",
				"105",
				"25",
				"0",
				"",
				"17",
				"Tree",
				"1.5",
				"10",
				"105",
				"25",
				"0",
				"",
				"18",
				"Tree",
				"1.5",
				"10",
				"105",
				"25",
				"0",
				"",
				"19",
				"Tree",
				"1.5",
				"10",
				"105",
				"25",
				"0",
				"",
				"20",
				"Stone",
				"10",
				"40",
				"35",
				"21",
				"21",
				"",
				"21",
				"Stone",
				"10",
				"40",
				"35",
				"21",
				"20",
				"",
				"22",
				"Iron Pickaxe",
				"69",
				"1001",
				"5",
				"2",
				"0",
				"",
				"23",
				"Iron Axe",
				"0",
				"1002",
				"5",
				"4",
				"0",
				"",
				"24",
				"Wood",
				"10",
				"12",
				"20",
				"25",
				"25",
				"",
				"25",
				"Wood",
				"10",
				"12",
				"20",
				"25",
				"24",
				"",
				"26",
				"Sand",
				"10",
				"30",
				"15",
				"27",
				"27",
				"",
				"27",
				"Sand",
				"10",
				"30",
				"15",
				"27",
				"26",
				"",
				"28",
				"Iron Ore",
				"10",
				"50",
				"65",
				"29",
				"29",
				"",
				"29",
				"Iron Ore",
				"10",
				"50",
				"65",
				"29",
				"28",
				"",
				"30",
				"Bed",
				"-1",
				"12",
				"0",
				"43",
				"0",
				"",
				"31",
				"Acorn",
				"-1",
				"11",
				"0",
				"32",
				"0",
				"",
				"32",
				"Sapling",
				"2",
				"11",
				"1",
				"31",
				"0",
				"",
				"33",
				"Door Top",
				"4.5",
				"12",
				"65",
				"35",
				"0",
				"",
				"34",
				"Door Bottom",
				"4",
				"12",
				"65",
				"35",
				"0",
				"",
				"35",
				"Wooden Door",
				"-1",
				"0",
				"0",
				"34",
				"0",
				"",
				"36",
				"Platform",
				"7",
				"12",
				"25",
				"36",
				"0",
				"",
				"37",
				"Work Bench",
				"3",
				"12",
				"45",
				"37",
				"0",
				"",
				"38",
				"Furnace",
				"3",
				"12",
				"90",
				"38",
				"0",
				"",
				"39",
				"Iron Bar",
				"-1",
				"60",
				"0",
				"40",
				"0",
				"",
				"40",
				"Iron Bar",
				"10",
				"60",
				"120",
				"39",
				"0",
				"",
				"41",
				"Stone Brick",
				"10",
				"40",
				"90",
				"42",
				"42",
				"",
				"42",
				"Stone Brick",
				"10",
				"40",
				"90",
				"42",
				"41",
				"",
				"43",
				"Bed",
				"6",
				"12",
				"60",
				"30",
				"0",
				"",
				"44",
				"Bed",
				"6",
				"12",
				"60",
				"30",
				"0",
				"",
				"45",
				"Chair",
				"3",
				"12",
				"15",
				"46",
				"0",
				"",
				"46",
				"Chair",
				"3",
				"12",
				"15",
				"46",
				"0",
				"",
				"47",
				"Torch",
				"5",
				"12",
				"15",
				"47",
				"0",
				"",
				"48",
				"Torch (left)",
				"5.25",
				"12",
				"15",
				"47",
				"0",
				"",
				"49",
				"Torch (right)",
				"5.375",
				"12",
				"15",
				"47",
				"0",
				"",
				"50",
				"Sand Brick",
				"10",
				"40",
				"90",
				"51",
				"51",
				"",
				"51",
				"Sand Brick",
				"10",
				"40",
				"90",
				"51",
				"50",
				"",
				"52",
				"Chandelier",
				"5.5",
				"60",
				"60",
				"52",
				"0",
				"",
				"53",
				"Bench",
				"3",
				"12",
				"25",
				"53",
				"0",
				"",
				"54",
				"Dresser",
				"3",
				"12",
				"60",
				"54",
				"0",
				"",
				"55",
				"Table",
				"-1",
				"12",
				"45",
				"276",
				"0",
				"",
				"56",
				"Barrel",
				"3",
				"12",
				"45",
				"56",
				"0",
				"",
				"57",
				"Chest",
				"3",
				"13",
				"60",
				"57",
				"0",
				"",
				"58",
				"Sign",
				"3",
				"12",
				"120",
				"58",
				"0",
				"",
				"59",
				"Anvil",
				"3",
				"60",
				"120",
				"59",
				"0",
				"",
				"60",
				"Sawmill",
				"3",
				"12",
				"120",
				"60",
				"0",
				"",
				"61",
				"Chain",
				"-1",
				"0",
				"0",
				"134",
				"0",
				"",
				"62",
				"Grandfather Clock",
				"-1",
				"12",
				"0",
				"64",
				"0",
				"",
				"63",
				"Grandfather Clock",
				"3",
				"12",
				"160",
				"62",
				"0",
				"",
				"64",
				"Grandfather Clock",
				"3",
				"12",
				"160",
				"62",
				"0",
				"",
				"65",
				"Cloud",
				"10",
				"21",
				"10",
				"66",
				"66",
				"",
				"66",
				"Cloud",
				"10",
				"21",
				"10",
				"66",
				"65",
				"",
				"67",
				"Glass",
				"10",
				"22",
				"10",
				"68",
				"68",
				"",
				"68",
				"Glass",
				"10",
				"22",
				"10",
				"68",
				"67",
				"",
				"69",
				"Ice Block",
				"10",
				"22",
				"10",
				"70",
				"70",
				"",
				"70",
				"Ice Block",
				"10",
				"22",
				"10",
				"70",
				"69",
				"",
				"71",
				"Clay",
				"10",
				"24",
				"28",
				"72",
				"72",
				"",
				"72",
				"Clay",
				"10",
				"24",
				"28",
				"72",
				"71",
				"",
				"73",
				"Brick",
				"10",
				"40",
				"90",
				"74",
				"74",
				"",
				"74",
				"Brick",
				"10",
				"40",
				"90",
				"74",
				"73",
				"",
				"75",
				"Gold Ore",
				"10",
				"50",
				"45",
				"76",
				"76",
				"",
				"76",
				"Gold Ore",
				"10",
				"50",
				"45",
				"76",
				"75",
				"",
				"77",
				"Gold Bar",
				"0",
				"60",
				"0",
				"0",
				"0",
				"",
				"78",
				"Gold Brick",
				"10",
				"60",
				"220",
				"79",
				"79",
				"",
				"79",
				"Gold Brick",
				"10",
				"60",
				"220",
				"79",
				"78",
				"",
				"80",
				"Silver Ore",
				"10",
				"50",
				"45",
				"81",
				"81",
				"",
				"81",
				"Silver Ore",
				"10",
				"50",
				"45",
				"81",
				"80",
				"",
				"82",
				"Silver Bar",
				"0",
				"60",
				"0",
				"0",
				"0",
				"",
				"83",
				"Silver Brick",
				"10",
				"60",
				"220",
				"84",
				"84",
				"",
				"84",
				"Silver Brick",
				"10",
				"60",
				"220",
				"84",
				"83",
				"",
				"85",
				"Seed",
				"2",
				"11",
				"0",
				"0",
				"0",
				"",
				"86",
				"Plant",
				"2",
				"12",
				"1",
				"85",
				"0",
				"",
				"87",
				"Plant",
				"2",
				"12",
				"1",
				"85",
				"0",
				"",
				"88",
				"Plant",
				"2",
				"12",
				"1",
				"85",
				"0",
				"",
				"89",
				"Plant",
				"2",
				"12",
				"1",
				"85",
				"0",
				"",
				"90",
				"Plant",
				"2",
				"12",
				"1",
				"85",
				"0",
				"",
				"91",
				"Plant",
				"2",
				"12",
				"1",
				"85",
				"0",
				"",
				"92",
				"Plant",
				"2",
				"12",
				"1",
				"85",
				"0",
				"",
				"93",
				"Plant",
				"2",
				"12",
				"1",
				"85",
				"0",
				"",
				"94",
				"Mushroom",
				"2",
				"12",
				"1",
				"94",
				"0",
				"",
				"95",
				"Plant",
				"2",
				"12",
				"1",
				"85",
				"0",
				"",
				"96",
				"Fence",
				"3.25",
				"12",
				"60",
				"96",
				"0",
				"",
				"97",
				"Iron Fence",
				"3.25",
				"60",
				"120",
				"97",
				"0",
				"",
				"98",
				"Gold Chandelier",
				"5.5",
				"60",
				"120",
				"98",
				"0",
				"",
				"99",
				"Candelabra",
				"3.5",
				"60",
				"90",
				"99",
				"0",
				"",
				"100",
				"Gold Chest",
				"3",
				"63",
				"120",
				"100",
				"0",
				"",
				"101",
				"Bath Tub",
				"-1",
				"60",
				"90",
				"105",
				"0",
				"",
				"102",
				"Trash Can",
				"3",
				"60",
				"90",
				"102",
				"0",
				"",
				"103",
				"Toilet",
				"3",
				"60",
				"90",
				"103",
				"0",
				"",
				"104",
				"Cooking Pot",
				"3",
				"60",
				"90",
				"104",
				"0",
				"",
				"105",
				"Bath Tub",
				"6",
				"60",
				"90",
				"101",
				"0",
				"",
				"106",
				"Bath Tub",
				"6",
				"60",
				"90",
				"101",
				"0",
				"",
				"107",
				"Builder Potion",
				"0",
				"1",
				"0",
				"0",
				"0",
				"",
				"108",
				"Mining Potion",
				"0",
				"1",
				"0",
				"0",
				"0",
				"",
				"109",
				"Swiftness Potion",
				"0",
				"1",
				"0",
				"0",
				"0",
				"",
				"110",
				"Diamond Ore",
				"10",
				"50",
				"65",
				"111",
				"0",
				"",
				"111",
				"Diamond",
				"0",
				"0",
				"0",
				"0",
				"0",
				"",
				"112",
				"Diamond Slab",
				"10",
				"60",
				"150",
				"113",
				"113",
				"",
				"113",
				"Diamond Slab",
				"10",
				"60",
				"150",
				"113",
				"112",
				"",
				"114",
				"Stone Slab",
				"10",
				"40",
				"90",
				"114",
				"0",
				"",
				"115",
				"Sand Slab",
				"10",
				"40",
				"90",
				"115",
				"0",
				"",
				"116",
				"Pot Plant",
				"3",
				"12",
				"45",
				"116",
				"0",
				"",
				"117",
				"Bookcase",
				"6.5",
				"12",
				"160",
				"121",
				"0",
				"",
				"118",
				"Bookcase",
				"6.5",
				"12",
				"160",
				"121",
				"0",
				"",
				"119",
				"Bookcase",
				"6.5",
				"12",
				"160",
				"121",
				"0",
				"",
				"120",
				"Bookcase",
				"6.5",
				"12",
				"160",
				"121",
				"0",
				"",
				"121",
				"Bookcase",
				"-1",
				"0",
				"0",
				"118",
				"0",
				"",
				"122",
				"Sky Chest",
				"3",
				"13",
				"60",
				"122",
				"0",
				"",
				"123",
				"Heavy Work Bench",
				"3",
				"12",
				"70",
				"123",
				"0",
				"",
				"124",
				"Bug Net",
				"0",
				"1099",
				"1",
				"6",
				"0",
				"",
				"125",
				"Bunny",
				"-3",
				"100",
				"0",
				"1",
				"0",
				"",
				"126",
				"Beam",
				"0.5",
				"12",
				"30",
				"127",
				"127",
				"",
				"127",
				"Beam",
				"0.5",
				"12",
				"30",
				"127",
				"126",
				"",
				"128",
				"Sofa",
				"-1",
				"12",
				"0",
				"129",
				"0",
				"",
				"129",
				"Sofa",
				"6",
				"12",
				"60",
				"128",
				"0",
				"",
				"130",
				"Sofa",
				"6",
				"12",
				"60",
				"128",
				"0",
				"",
				"131",
				"Piano",
				"-1",
				"12",
				"0",
				"132",
				"0",
				"",
				"132",
				"Piano",
				"6",
				"12",
				"60",
				"131",
				"0",
				"",
				"133",
				"Piano",
				"6",
				"12",
				"60",
				"131",
				"0",
				"",
				"134",
				"Chain",
				"5.5",
				"60",
				"40",
				"61",
				"0",
				"",
				"135",
				"Frog",
				"-3",
				"100",
				"0",
				"2",
				"0",
				"",
				"136",
				"Slime",
				"-3",
				"100",
				"0",
				"3",
				"0",
				"",
				"137",
				"Wooden Sword",
				"0",
				"1003",
				"5",
				"8",
				"0",
				"",
				"138",
				"Iron Sword",
				"0",
				"1003",
				"10",
				"10",
				"0",
				"",
				"139",
				"Gel",
				"0",
				"0",
				"0",
				"0",
				"0",
				"",
				"140",
				"Platinum Ore",
				"10",
				"50",
				"120",
				"141",
				"141",
				"",
				"141",
				"Platinum Ore",
				"10",
				"50",
				"120",
				"141",
				"140",
				"",
				"142",
				"Platinum Bar",
				"0",
				"60",
				"0",
				"0",
				"0",
				"",
				"143",
				"Gold Pickaxe",
				"69",
				"1001",
				"7",
				"12",
				"0",
				"",
				"144",
				"Gold Axe",
				"0",
				"1002",
				"7",
				"14",
				"0",
				"",
				"145",
				"Gold Sword",
				"0",
				"1003",
				"13",
				"16",
				"0",
				"",
				"146",
				"Platinum Pickaxe",
				"70",
				"1001",
				"9",
				"18",
				"0",
				"",
				"147",
				"Platinum Axe",
				"0",
				"1002",
				"9",
				"20",
				"0",
				"",
				"148",
				"Platinum Sword",
				"0",
				"1003",
				"16",
				"22",
				"0",
				"",
				"149",
				"Demon Eye",
				"-3",
				"100",
				"0",
				"5",
				"0",
				"",
				"150",
				"Lens",
				"0",
				"0",
				"0",
				"0",
				"0",
				"",
				"151",
				"Zombie",
				"-3",
				"100",
				"0",
				"6",
				"0",
				"",
				"152",
				"Easter Egg",
				"0",
				"0",
				"0",
				"0",
				"0",
				"",
				"153",
				"Chocolate",
				"10",
				"20",
				"40",
				"154",
				"154",
				"",
				"154",
				"Chocolate",
				"10",
				"20",
				"40",
				"154",
				"153",
				"",
				"155",
				"Land Claim Sign",
				"3",
				"12",
				"60",
				"155",
				"0",
				"",
				"156",
				"Crab",
				"-3",
				"100",
				"0",
				"7",
				"0",
				"",
				"157",
				"Molten Pickaxe",
				"70",
				"1001",
				"15",
				"24",
				"0",
				"",
				"158",
				"Blue Phaseblade",
				"0",
				"1003",
				"20",
				"26",
				"0",
				"",
				"159",
				"Diamond Staff",
				"0",
				"1004",
				"12",
				"28",
				"0",
				"",
				"160",
				"Water",
				"2.5",
				"5",
				"16",
				"215",
				"0",
				"",
				"161",
				"Water 15\/16",
				"2.5",
				"5",
				"15",
				"215",
				"0",
				"",
				"162",
				"Water 14\/16",
				"2.5",
				"5",
				"14",
				"215",
				"0",
				"",
				"163",
				"Water 13\/16",
				"2.5",
				"5",
				"13",
				"215",
				"0",
				"",
				"164",
				"Water 12\/16",
				"2.5",
				"5",
				"12",
				"215",
				"0",
				"",
				"165",
				"Water 11\/16",
				"2.5",
				"5",
				"11",
				"215",
				"0",
				"",
				"166",
				"Water 10\/16",
				"2.5",
				"5",
				"10",
				"215",
				"0",
				"",
				"167",
				"Water 9\/16",
				"2.5",
				"5",
				"9",
				"215",
				"0",
				"",
				"168",
				"Water 8\/16",
				"2.5",
				"5",
				"8",
				"215",
				"0",
				"",
				"169",
				"Water 7\/16",
				"2.5",
				"5",
				"7",
				"215",
				"0",
				"",
				"170",
				"Water 6\/16",
				"2.5",
				"5",
				"6",
				"215",
				"0",
				"",
				"171",
				"Water 5\/16",
				"2.5",
				"5",
				"5",
				"215",
				"0",
				"",
				"172",
				"Water 4\/16",
				"2.5",
				"5",
				"4",
				"215",
				"0",
				"",
				"173",
				"Water 3\/16",
				"2.5",
				"5",
				"3",
				"215",
				"0",
				"",
				"174",
				"Water 2\/16",
				"2.5",
				"5",
				"2",
				"215",
				"0",
				"",
				"175",
				"Water 1\/16",
				"2.5",
				"5",
				"1",
				"215",
				"0",
				"",
				"176",
				"Goldfish",
				"-3.5",
				"100",
				"0",
				"8",
				"0",
				"",
				"177",
				"Jellyfish",
				"-3.5",
				"100",
				"0",
				"9",
				"0",
				"",
				"178",
				"Lava",
				"2.5",
				"5",
				"16",
				"178",
				"0",
				"",
				"179",
				"Lava 15\/16",
				"2.5",
				"5",
				"15",
				"178",
				"0",
				"",
				"180",
				"Lava 14\/16",
				"2.5",
				"5",
				"14",
				"178",
				"0",
				"",
				"181",
				"Lava 13\/16",
				"2.5",
				"5",
				"13",
				"178",
				"0",
				"",
				"182",
				"Lava 12\/16",
				"2.5",
				"5",
				"12",
				"178",
				"0",
				"",
				"183",
				"Lava 11\/16",
				"2.5",
				"5",
				"11",
				"178",
				"0",
				"",
				"184",
				"Lava 10\/16",
				"2.5",
				"5",
				"10",
				"178",
				"0",
				"",
				"185",
				"Lava 9\/16",
				"2.5",
				"5",
				"9",
				"178",
				"0",
				"",
				"186",
				"Lava 8\/16",
				"2.5",
				"5",
				"8",
				"178",
				"0",
				"",
				"187",
				"Lava 7\/16",
				"2.5",
				"5",
				"7",
				"178",
				"0",
				"",
				"188",
				"Lava 6\/16",
				"2.5",
				"5",
				"6",
				"178",
				"0",
				"",
				"189",
				"Lava 5\/16",
				"2.5",
				"5",
				"5",
				"178",
				"0",
				"",
				"190",
				"Lava 4\/16",
				"2.5",
				"5",
				"4",
				"178",
				"0",
				"",
				"191",
				"Lava 3\/16",
				"2.5",
				"5",
				"3",
				"178",
				"0",
				"",
				"192",
				"Lava 2\/16",
				"2.5",
				"5",
				"2",
				"178",
				"0",
				"",
				"193",
				"Lava 1\/16",
				"2.5",
				"5",
				"1",
				"178",
				"0",
				"",
				"194",
				"Obsidian",
				"10",
				"50",
				"120",
				"194",
				"0",
				"",
				"195",
				"Lesser Healing Potion",
				"0",
				"1",
				"0",
				"0",
				"0",
				"",
				"196",
				"Healing Potion",
				"0",
				"1",
				"0",
				"0",
				"0",
				"",
				"197",
				"Greater Healing Potion",
				"0",
				"1",
				"0",
				"0",
				"0",
				"",
				"198",
				"Featherfall Potion",
				"0",
				"1",
				"0",
				"0",
				"0",
				"",
				"199",
				"Spelunker Potion",
				"0",
				"1",
				"0",
				"0",
				"0",
				"",
				"200",
				"Obsidian Skin Potion",
				"0",
				"1",
				"0",
				"0",
				"0",
				"",
				"201",
				"Gills Potion",
				"0",
				"1",
				"0",
				"0",
				"0",
				"",
				"202",
				"Purple Slime",
				"-3",
				"100",
				"0",
				"10",
				"0",
				"",
				"203",
				"Bunny Slime",
				"-3",
				"100",
				"0",
				"12",
				"0",
				"",
				"204",
				"Dungeon Slime",
				"-3",
				"100",
				"0",
				"14",
				"0",
				"",
				"205",
				"Lava Slime",
				"-3",
				"100",
				"0",
				"15",
				"0",
				"",
				"206",
				"Pyranha",
				"-3.5",
				"100",
				"0",
				"16",
				"0",
				"",
				"207",
				"Shark",
				"-3.5",
				"100",
				"0",
				"17",
				"0",
				"",
				"208",
				"Shark Fin",
				"0",
				"0",
				"0",
				"0",
				"0",
				"",
				"209",
				"Hook",
				"0",
				"0",
				"0",
				"0",
				"0",
				"",
				"210",
				"Zombie Arm",
				"0",
				"0",
				"0",
				"0",
				"0",
				"",
				"211",
				"Copper Pickaxe",
				"69",
				"1001",
				"3",
				"30",
				"0",
				"",
				"212",
				"Copper Sword",
				"0",
				"1003",
				"7",
				"32",
				"0",
				"",
				"213",
				"Copper Axe",
				"0",
				"1002",
				"4",
				"34",
				"0",
				"",
				"214",
				"Bucket",
				"0",
				"1098",
				"20",
				"36",
				"0",
				"",
				"215",
				"Water Bucket",
				"-1",
				"0",
				"0",
				"160",
				"0",
				"",
				"216",
				"Lava Bucket",
				"-1",
				"0",
				"0",
				"178",
				"0",
				"",
				"217",
				"Hellstone",
				"10",
				"70",
				"140",
				"218",
				"218",
				"",
				"218",
				"Hellstone",
				"10",
				"70",
				"140",
				"218",
				"217",
				"",
				"219",
				"Hellstone Bar",
				"0",
				"0",
				"0",
				"0",
				"0",
				"",
				"220",
				"Vine",
				"2",
				"12",
				"1",
				"0",
				"0",
				"",
				"221",
				"Hellforge",
				"3",
				"71",
				"120",
				"221",
				"0",
				"",
				"222",
				"Bat",
				"-3",
				"100",
				"0",
				"18",
				"0",
				"",
				"223",
				"Lava Bat",
				"-3",
				"100",
				"0",
				"19",
				"0",
				"",
				"224",
				"Water Chest",
				"3",
				"63",
				"120",
				"224",
				"0",
				"",
				"225",
				"Obsidian Chest",
				"3",
				"63",
				"160",
				"225",
				"0",
				"",
				"226",
				"Copper Coin",
				"0",
				"0",
				"0",
				"0",
				"0",
				"",
				"227",
				"Silver Coin",
				"0",
				"0",
				"0",
				"0",
				"0",
				"",
				"228",
				"Gold Coin",
				"0",
				"0",
				"0",
				"0",
				"0",
				"",
				"229",
				"Topaz Stone",
				"10",
				"50",
				"65",
				"230",
				"0",
				"",
				"230",
				"Topaz",
				"0",
				"0",
				"0",
				"0",
				"0",
				"",
				"231",
				"Ruby Stone",
				"10",
				"50",
				"65",
				"232",
				"0",
				"",
				"232",
				"Ruby",
				"0",
				"0",
				"0",
				"0",
				"0",
				"",
				"233",
				"Emerald Stone",
				"10",
				"50",
				"65",
				"234",
				"0",
				"",
				"234",
				"Emerald",
				"0",
				"0",
				"0",
				"0",
				"0",
				"",
				"235",
				"Sapphire Stone",
				"10",
				"50",
				"65",
				"236",
				"0",
				"",
				"236",
				"Sapphire",
				"0",
				"0",
				"0",
				"0",
				"0",
				"",
				"237",
				"Amethyst Stone",
				"10",
				"50",
				"65",
				"238",
				"0",
				"",
				"238",
				"Amethyst",
				"0",
				"0",
				"0",
				"0",
				"0",
				"",
				"239",
				"Iron Door",
				"-1",
				"0",
				"0",
				"243",
				"0",
				"",
				"240",
				"Glass Door",
				"-1",
				"0",
				"0",
				"245",
				"0",
				"",
				"241",
				"Obsidian Door",
				"-1",
				"0",
				"0",
				"247",
				"0",
				"",
				"242",
				"Iron Door Top",
				"4.5",
				"60",
				"100",
				"239",
				"0",
				"",
				"243",
				"Iron Door Bottom",
				"4",
				"60",
				"100",
				"239",
				"0",
				"",
				"244",
				"Glass Door Top",
				"4.5",
				"20",
				"65",
				"240",
				"0",
				"",
				"245",
				"Glass Door Bottom",
				"4",
				"20",
				"65",
				"240",
				"0",
				"",
				"246",
				"Obsidian Door Top",
				"4.5",
				"60",
				"160",
				"241",
				"0",
				"",
				"247",
				"Obsidian Door Bottom",
				"4",
				"60",
				"160",
				"241",
				"0",
				"",
				"248",
				"Glass Kiln",
				"3",
				"60",
				"120",
				"248",
				"0",
				"",
				"249",
				"Butterfly",
				"-3",
				"100",
				"0",
				"20",
				"0",
				"",
				"250",
				"Glass Table",
				"-1",
				"20",
				"45",
				"287",
				"0",
				"",
				"251",
				"Glass Lantern",
				"5.5",
				"20",
				"80",
				"251",
				"0",
				"",
				"252",
				"Glass Chandelier",
				"5.5",
				"20",
				"80",
				"252",
				"0",
				"",
				"253",
				"Pot",
				"3",
				"20",
				"1",
				"0",
				"0",
				"",
				"254",
				"Wooden Sink",
				"3",
				"12",
				"80",
				"254",
				"0",
				"",
				"255",
				"Glass Platform",
				"7",
				"20",
				"40",
				"255",
				"0",
				"",
				"256",
				"Squirrel",
				"-3",
				"100",
				"0",
				"21",
				"0",
				"",
				"257",
				"Mouse",
				"-3",
				"100",
				"0",
				"22",
				"0",
				"",
				"258",
				"Firefly",
				"-3",
				"100",
				"0",
				"23",
				"0",
				"",
				"259",
				"Fiery Greatsword",
				"0",
				"1003",
				"40",
				"38",
				"0",
				"",
				"260",
				"Glass Bed",
				"-1",
				"20",
				"0",
				"261",
				"0",
				"",
				"261",
				"Glass Bed L",
				"6",
				"20",
				"120",
				"260",
				"0",
				"",
				"262",
				"Glass Bed R",
				"6",
				"20",
				"120",
				"260",
				"0",
				"",
				"263",
				"Obsidian Bed",
				"-1",
				"60",
				"0",
				"264",
				"0",
				"",
				"264",
				"Obsidian Bed L",
				"6",
				"60",
				"120",
				"263",
				"0",
				"",
				"265",
				"Obsidian Bed R",
				"6",
				"60",
				"120",
				"263",
				"0",
				"",
				"266",
				"Gold Bed",
				"-1",
				"60",
				"0",
				"267",
				"0",
				"",
				"267",
				"Gold Bed L",
				"6",
				"60",
				"120",
				"266",
				"0",
				"",
				"268",
				"Gold Bed R",
				"6",
				"60",
				"120",
				"266",
				"0",
				"",
				"269",
				"Mushroom Bed",
				"-1",
				"12",
				"0",
				"270",
				"0",
				"",
				"270",
				"Mushroom Bed L",
				"6",
				"12",
				"120",
				"269",
				"0",
				"",
				"271",
				"Mushroom Bed R",
				"6",
				"12",
				"120",
				"269",
				"0",
				"",
				"272",
				"Wooden Crate",
				"3",
				"12",
				"40",
				"272",
				"0",
				"",
				"273",
				"Iron Crate",
				"3",
				"60",
				"100",
				"273",
				"0",
				"",
				"274",
				"Mushroom Block",
				"10",
				"20",
				"45",
				"274",
				"275",
				"",
				"275",
				"Mushroom Block",
				"10",
				"20",
				"45",
				"274",
				"274",
				"",
				"276",
				"Table L",
				"7.5",
				"12",
				"120",
				"55",
				"0",
				"",
				"277",
				"Table R",
				"7.5",
				"12",
				"120",
				"55",
				"0",
				"",
				"278",
				"Iron Table",
				"-1",
				"60",
				"120",
				"279",
				"0",
				"",
				"279",
				"Iron Table L",
				"7.5",
				"60",
				"120",
				"278",
				"0",
				"",
				"280",
				"Iron Table R",
				"7.5",
				"60",
				"120",
				"278",
				"0",
				"",
				"281",
				"Obsidian Table",
				"-1",
				"60",
				"140",
				"282",
				"0",
				"",
				"282",
				"Obsidian Table L",
				"7.5",
				"60",
				"140",
				"281",
				"0",
				"",
				"283",
				"Obsidian Table R",
				"7.5",
				"60",
				"140",
				"281",
				"0",
				"",
				"284",
				"Mushroom Table",
				"-1",
				"20",
				"120",
				"285",
				"0",
				"",
				"285",
				"Mushroom Table L",
				"7.5",
				"20",
				"120",
				"284",
				"0",
				"",
				"286",
				"Mushroom Table R",
				"7.5",
				"20",
				"120",
				"284",
				"0",
				"",
				"287",
				"Glass Table L",
				"7.5",
				"20",
				"120",
				"250",
				"0",
				"",
				"288",
				"Glass Table R",
				"7.5",
				"20",
				"120",
				"250",
				"0",
				"",
				"289",
				"Blue Dungeon Vase",
				"3",
				"20",
				"45",
				"289",
				"0",
				"",
				"290",
				"Green Dungeon Vase",
				"3",
				"20",
				"45",
				"290",
				"0",
				"",
				"291",
				"Pink Dungeon Vase",
				"3",
				"20",
				"45",
				"291",
				"0",
				"",
				"292",
				"Obsidian Vase",
				"3",
				"20",
				"45",
				"292",
				"0",
				"",
				"293",
				"Suspicious Looking Eye",
				"0",
				"2",
				"0",
				"24",
				"0",
				"",
				"294",
				"Demon Altar",
				"3",
				"0",
				"10000",
				"294",
				"0",
				"",
				"295",
				"Demonite Ore",
				"-1",
				"50",
				"160",
				"296",
				"0",
				"",
				"296",
				"Demonite Ore",
				"10",
				"50",
				"160",
				"295",
				"0",
				"",
				"297",
				"Demonite Bar",
				"0",
				"60",
				"0",
				"0",
				"0",
				"",
				"298",
				"Light's Bane",
				"0",
				"1003",
				"30",
				"40",
				"0",
				"",
				"299",
				"Eye of Cthulhu Mask",
				"0",
				"3",
				"0",
				"41",
				"0",
				"",
				"300",
				"Santa Mask",
				"0",
				"3",
				"0",
				"42",
				"0"],
			"isPersistent": false,
			"x": 43,
			"y": 38,
			"width": 412,
			"height": 298,
			"visible": false
		},
		{
			"listName": "_LData",
			"contents": ["54696",
				"12",
				"",
				"",
				"148",
				"1",
				"39",
				"13",
				"47",
				"10",
				"300",
				"1",
				"54157",
				"4",
				"",
				"",
				"54002",
				"12",
				"",
				"",
				"147",
				"1",
				"61",
				"36",
				"195",
				"3",
				"201",
				"2",
				"30178",
				"12",
				"",
				"",
				"159",
				"1",
				"61",
				"39",
				"198",
				"3",
				"300",
				"1",
				"13078",
				"12",
				"",
				"",
				"144",
				"1",
				"61",
				"39",
				"47",
				"8",
				"300",
				"1",
				"14099",
				"10",
				"",
				"",
				"158",
				"1",
				"196",
				"1",
				"47",
				"19",
				"11300",
				"12",
				"",
				"",
				"148",
				"1",
				"61",
				"38",
				"196",
				"1",
				"47",
				"20",
				"9936",
				"12",
				"",
				"",
				"144",
				"1",
				"61",
				"43",
				"200",
				"3",
				"47",
				"8",
				"7557",
				"14",
				"",
				"",
				"144",
				"1",
				"142",
				"7",
				"195",
				"3",
				"201",
				"3",
				"196",
				"1",
				"9972",
				"12",
				"",
				"",
				"146",
				"1",
				"198",
				"2",
				"196",
				"1",
				"300",
				"1",
				"11139",
				"16",
				"",
				"",
				"144",
				"1",
				"61",
				"17",
				"77",
				"9",
				"195",
				"2",
				"196",
				"1",
				"47",
				"17",
				"13561",
				"16",
				"",
				"",
				"159",
				"1",
				"61",
				"22",
				"39",
				"9",
				"196",
				"1",
				"47",
				"13",
				"300",
				"1",
				"4093",
				"10",
				"",
				"",
				"159",
				"1",
				"200",
				"2",
				"196",
				"1",
				"26726",
				"12",
				"",
				"",
				"159",
				"1",
				"196",
				"1",
				"47",
				"7",
				"300",
				"1",
				"8281",
				"14",
				"",
				"",
				"107",
				"1",
				"39",
				"10",
				"195",
				"5",
				"198",
				"1",
				"196",
				"1",
				"1662",
				"14",
				"",
				"",
				"159",
				"1",
				"61",
				"21",
				"142",
				"8",
				"196",
				"1",
				"47",
				"10",
				"4664",
				"16",
				"",
				"",
				"145",
				"1",
				"61",
				"33",
				"39",
				"15",
				"196",
				"1",
				"47",
				"16",
				"300",
				"1",
				"18878",
				"12",
				"",
				"",
				"144",
				"1",
				"77",
				"8",
				"195",
				"4",
				"109",
				"1",
				"16845",
				"18",
				"",
				"",
				"148",
				"1",
				"61",
				"24",
				"39",
				"15",
				"195",
				"5",
				"196",
				"1",
				"47",
				"9",
				"300",
				"1",
				"28090",
				"16",
				"",
				"",
				"146",
				"1",
				"61",
				"39",
				"195",
				"4",
				"196",
				"1",
				"47",
				"13",
				"300",
				"1",
				"21916",
				"16",
				"",
				"",
				"144",
				"1",
				"61",
				"47",
				"195",
				"3",
				"201",
				"2",
				"196",
				"1",
				"47",
				"20",
				"1657",
				"16",
				"",
				"",
				"148",
				"1",
				"142",
				"13",
				"198",
				"1",
				"196",
				"1",
				"47",
				"9",
				"300",
				"1",
				"14295",
				"12",
				"",
				"",
				"148",
				"1",
				"82",
				"8",
				"195",
				"2",
				"47",
				"11",
				"19470",
				"16",
				"",
				"",
				"146",
				"1",
				"61",
				"38",
				"77",
				"14",
				"195",
				"4",
				"196",
				"1",
				"300",
				"1",
				"14814",
				"10",
				"",
				"",
				"143",
				"1",
				"195",
				"3",
				"47",
				"11",
				"22489",
				"10",
				"",
				"",
				"144",
				"1",
				"142",
				"13",
				"196",
				"1",
				"26240",
				"14",
				"",
				"",
				"146",
				"1",
				"61",
				"18",
				"82",
				"8",
				"196",
				"1",
				"47",
				"17",
				"13680",
				"12",
				"",
				"",
				"159",
				"1",
				"195",
				"5",
				"198",
				"3",
				"196",
				"1",
				"14294",
				"14",
				"",
				"",
				"143",
				"1",
				"195",
				"2",
				"109",
				"3",
				"196",
				"1",
				"47",
				"10",
				"26509",
				"12",
				"",
				"",
				"147",
				"1",
				"195",
				"3",
				"201",
				"1",
				"300",
				"1",
				"17357",
				"16",
				"",
				"",
				"145",
				"1",
				"82",
				"7",
				"195",
				"4",
				"201",
				"3",
				"196",
				"1",
				"300",
				"1",
				"6441",
				"14",
				"",
				"",
				"143",
				"1",
				"61",
				"36",
				"195",
				"3",
				"200",
				"3",
				"300",
				"1",
				"26775",
				"10",
				"",
				"",
				"147",
				"1",
				"195",
				"2",
				"47",
				"16",
				"23324",
				"10",
				"",
				"",
				"145",
				"1",
				"61",
				"41",
				"300",
				"1",
				"23037",
				"10",
				"",
				"",
				"107",
				"1",
				"195",
				"2",
				"201",
				"1",
				"16782",
				"10",
				"",
				"",
				"143",
				"1",
				"142",
				"13",
				"195",
				"4",
				"14937",
				"10",
				"",
				"",
				"147",
				"1",
				"61",
				"38",
				"195",
				"3",
				"17807",
				"12",
				"",
				"",
				"146",
				"1",
				"61",
				"47",
				"82",
				"15",
				"195",
				"4",
				"27082",
				"12",
				"",
				"",
				"158",
				"1",
				"195",
				"2",
				"196",
				"1",
				"300",
				"1",
				"19153",
				"16",
				"",
				"",
				"146",
				"1",
				"61",
				"33",
				"109",
				"1",
				"196",
				"1",
				"47",
				"11",
				"300",
				"1",
				"23358",
				"14",
				"",
				"",
				"158",
				"1",
				"61",
				"30",
				"195",
				"3",
				"196",
				"1",
				"300",
				"1",
				"14774",
				"16",
				"",
				"",
				"144",
				"1",
				"61",
				"24",
				"82",
				"5",
				"195",
				"5",
				"200",
				"2",
				"47",
				"8",
				"37905",
				"16",
				"DONNIEISAWESOME",
				"",
				"256",
				"2",
				"125",
				"1",
				"152",
				"2",
				"135",
				"4",
				"210",
				"1",
				"139",
				"2",
				"39306",
				"4",
				"DONNIEISAWESOME",
				"Claimed Land",
				"53084",
				"4",
				"lionblase",
				"Claimed Land",
				"44219",
				"4",
				"nomnoms54321",
				"Claimed Land",
				"43187",
				"4",
				"nomnoms54321",
				"Nomnoms54321's house: not to far from here",
				"43310",
				"4",
				"jkx9",
				"Claimed Land"],
			"isPersistent": false,
			"x": 152,
			"y": 19,
			"width": 330,
			"height": 343,
			"visible": false
		},
		{
			"listName": "_Mob",
			"contents": ["2007",
				"m2007 k",
				"8530",
				"m8530 k",
				"506",
				"m506 k",
				"3003",
				"m3003 w 1 1 1128 1140 15 -38 4 -91 -28 -77 -1 -99 -20 32 96 30 98 89 61 -85 -6 -26 23",
				"4251",
				"m4251 w 1 6 1150 1340 10 -49 9 -44 -3 -82 -14 -46 -8 57 46 17 77 13 44 -90 16 -67 -2 -77 40 -76 28",
				"0",
				"",
				"0",
				"",
				"0",
				"",
				"0",
				"",
				"0",
				"",
				"0",
				"",
				"0",
				"",
				"0",
				"",
				"0",
				"",
				"0",
				"",
				"0",
				""],
			"isPersistent": false,
			"x": 32,
			"y": 34,
			"width": 450,
			"height": 328,
			"visible": false
		},
		{
			"listName": "NextLiquid",
			"contents": [],
			"isPersistent": false,
			"x": 338,
			"y": 23,
			"width": 144,
			"height": 339,
			"visible": false
		},
		{
			"listName": "_Light",
			"contents": [],
			"isPersistent": false,
			"x": 349,
			"y": 7,
			"width": 133,
			"height": 355,
			"visible": false
		},
		{
			"listName": "LightMod",
			"contents": [],
			"isPersistent": false,
			"x": 19,
			"y": 84,
			"width": 400,
			"height": 278,
			"visible": false
		}],
	"info": {
		"scriptCount": 394,
		"swfVersion": "v454",
		"userAgent": "Mozilla\/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit\/537.36 (KHTML, like Gecko) Chrome\/57.0.2987.133 Safari\/537.36",
		"spriteCount": 28,
		"videoOn": false,
		"projectID": "46587498",
		"flashVersion": "WIN 25,0,0,127",
		"hasCloudData": true
	}
}